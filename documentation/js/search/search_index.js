var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AcceptFriendshipRequestCommand.html",[0,0.286,1,2.718]],["body/classes/AcceptFriendshipRequestCommand.html",[0,0.328,1,4.077,2,0.559,3,0.131,4,0.131,5,0.131,6,6.238,7,1.922,8,3.351,9,0.215,10,1,11,2.117,12,1.668,13,4.261,14,4.421,15,0.893,16,4.036,17,1.266,18,0.474,19,3.644,20,0.513,21,0.013,22,0.513,23,0.392,24,0.469,25,4.631,26,4.631,27,0.426,28,1.586,29,0.147,30,0.01,31,0.01]],["title/classes/AcceptFriendshipRequestEvent.html",[0,0.286,32,2.548]],["body/classes/AcceptFriendshipRequestEvent.html",[0,0.328,2,0.559,3,0.131,4,0.131,5,0.131,7,1.922,9,0.215,10,1,11,2.117,12,1.668,15,0.893,17,0.737,18,0.474,20,0.513,21,0.013,22,0.513,23,0.392,24,0.469,27,0.426,28,1.586,29,0.147,30,0.01,31,0.01,32,3.823,33,6.238,34,3.351,35,4.518,36,2.136,37,3.118,38,1.665,39,3.644,40,3.644,41,3.644]],["title/classes/AcceptFriendshipRequestEventHandler.html",[0,0.286,42,2.922]],["body/classes/AcceptFriendshipRequestEventHandler.html",[0,0.283,2,0.484,3,0.113,4,0.113,5,0.113,7,1.813,9,0.186,10,0.907,18,0.386,20,0.444,21,0.013,22,0.444,23,0.233,24,0.405,27,0.621,29,0.127,30,0.009,31,0.009,32,4.261,36,1.941,42,3.977,43,4.223,44,4.936,45,3.806,46,2.697,47,1.951,48,4.223,49,4.223,50,1.333,51,3.7,52,1.954,53,2.147,54,1.693,55,5.496,56,3.491,57,3.7,58,3.491,59,2.697,60,0.971,61,2.697,62,1.076,63,3.152,64,2.36,65,1.04,66,2.899,67,2.697,68,4.006,69,2.899,70,3.977,71,5.496,72,5.496,73,3.977,74,2.899]],["title/classes/AcceptFriendshipRequestHandler.html",[0,0.286,75,2.922]],["body/classes/AcceptFriendshipRequestHandler.html",[0,0.244,1,4.256,2,0.416,3,0.097,4,0.097,5,0.097,7,1.927,9,0.16,12,0.755,13,2.054,14,2.054,15,0.73,17,0.549,18,0.348,20,0.548,21,0.013,22,0.548,23,0.287,24,0.501,27,0.687,28,1.181,29,0.11,30,0.008,31,0.008,32,3.124,45,1.945,47,1.757,50,1.2,54,1.524,60,0.837,62,0.926,63,2.715,75,3.581,76,5.043,77,2.323,78,3.1,79,1.912,80,2.125,81,3.007,82,2.328,83,4.271,84,3.45,85,3.894,86,2.651,87,3.45,88,1.849,89,2.125,90,1.849,91,3.45,92,2.497,93,1.37,94,1.14,95,1.61,96,2.054,97,1.849,98,1.14,99,2.497,100,1.683,101,2.054,102,3.45,103,2.715,104,1.757,105,1.762,106,1.482,107,3.45,108,3.007,109,3.007,110,2.946,111,3.45,112,3.45,113,1.14,114,3.45,115,1.762,116,2.701,117,3.45,118,2.497,119,2.497,120,2.497,121,2.497,122,2.497,123,2.497,124,2.054]],["title/controllers/AppController.html",[125,2.163,126,2.922]],["body/controllers/AppController.html",[0,0.37,3,0.148,4,0.148,5,0.148,9,0.243,12,1.144,18,0.367,21,0.013,27,0.602,29,0.166,30,0.01,31,0.01,38,1.384,50,1.587,60,1.268,65,1.357,113,1.727,125,3.507,126,4.736,127,2.801,128,4.556,129,6.526,130,2.669,131,5.227,132,4.51,133,4.556,134,3.112,135,5.227]],["title/modules/AppModule.html",[136,2.276,137,2.922]],["body/modules/AppModule.html",[0,0.255,3,0.102,4,0.102,5,0.102,7,1.371,17,0.812,21,0.013,23,0.209,27,0.719,29,0.115,30,0.008,31,0.008,64,1.547,65,0.935,94,1.191,95,2.383,97,1.931,126,4.29,127,2.735,132,4.461,133,3.14,136,2.878,137,5.658,138,2.145,139,3.038,140,3.14,141,3.14,142,3.14,143,4.758,144,4.758,145,4.758,146,3.436,147,2.426,148,2.426,149,3.603,150,3.694,151,3.694,152,3.603,153,3.14,154,3.603,155,2.835,156,4.016,157,2.608,158,3.603,159,3.603,160,2.608,161,3.14,162,3.603,163,3.603,164,3.603,165,3.603,166,6.447,167,3.603,168,3.603,169,3.603,170,3.603,171,1.757,172,1.84,173,3.603,174,2.426,175,3.603,176,2.426,177,3.603,178,3.14]],["title/injectables/AppService.html",[132,2.548,179,1.433]],["body/injectables/AppService.html",[0,0.388,3,0.155,4,0.155,5,0.155,9,0.255,18,0.385,21,0.013,27,0.504,29,0.174,30,0.011,31,0.011,38,1.426,50,1.635,60,1.33,65,1.424,113,1.813,129,6.638,132,4.257,179,2.394,180,2.802,181,4.782,182,5.486,183,5.486,184,5.486]],["title/controllers/AuthController.html",[125,2.163,185,2.922]],["body/controllers/AuthController.html",[0,0.171,3,0.068,4,0.068,5,0.068,9,0.113,12,0.83,15,0.357,17,0.842,18,0.404,20,0.636,21,0.013,22,0.636,23,0.334,24,0.581,27,0.661,28,0.829,29,0.077,30,0.006,31,0.006,50,0.92,54,0.746,60,1.393,64,1.629,65,0.628,79,2.24,89,1.629,104,1.66,106,2.467,113,1.898,125,1.297,127,1.297,130,2.934,185,2.745,186,2.11,187,1.905,188,2.421,189,3.792,190,3.792,191,2.184,192,3.792,193,3.305,194,2.421,195,4.904,196,2.421,197,2.421,198,3.462,199,2.421,200,7.284,201,2.421,202,2.421,203,2.138,204,2.421,205,2.421,206,2.421,207,2.421,208,2.421,209,2.421,210,2.11,211,4.103,212,3.792,213,2.421,214,1.752,215,3.305,216,2.421,217,2.11,218,2.783,219,1.905,220,2.11,221,2.421,222,2.11,223,2.11,224,4.675,225,1.905,226,1.752,227,2.421,228,2.421,229,2.11,230,1.63,231,3.792,232,2.11,233,1.63,234,1.63,235,2.11,236,2.505,237,1.905,238,1.528,239,2.11,240,2.11,241,2.421,242,2.421,243,2.421,244,1.93,245,2.421,246,2.421,247,2.421,248,2.421,249,2.421,250,5.291,251,2.421,252,2.421,253,2.421,254,3.305,255,2.421,256,2.421,257,3.792,258,3.679,259,2.421,260,2.11,261,1.752,262,2.421,263,4.075,264,2.421,265,2.421,266,2.421,267,2.421,268,2.421,269,2.421,270,2.421,271,2.421,272,2.421,273,3.792,274,2.421,275,2.421,276,2.421,277,2.421]],["title/modules/AuthModule.html",[136,2.276,143,2.718]],["body/modules/AuthModule.html",[0,0.25,3,0.1,4,0.1,5,0.1,17,0.561,21,0.013,27,0.728,28,1.209,29,0.112,30,0.008,31,0.008,62,0.948,65,0.916,94,1.166,127,2.695,136,2.836,138,2.101,139,2.994,143,5.192,146,3.387,147,2.377,148,2.377,150,3.64,151,2.555,153,4.384,155,2.778,156,3.958,157,2.555,160,2.555,185,4.241,191,1.457,218,4.395,219,2.778,236,3.761,237,2.778,238,4.431,239,3.076,240,3.076,278,3.076,279,3.076,280,3.076,281,4.726,282,3.53,283,5.03,284,5.03,285,1.99,286,3.53,287,3.53,288,3.53,289,3.53,290,3.076,291,2.778,292,3.64,293,3.53,294,3.958,295,3.53,296,3.076,297,3.076,298,3.53,299,3.076,300,3.53,301,2.778]],["title/classes/AuthService.html",[0,0.286,218,2.403]],["body/classes/AuthService.html",[0,0.15,2,0.256,3,0.06,4,0.06,5,0.06,9,0.099,11,1.929,12,0.938,15,0.504,17,0.682,18,0.425,20,0.637,21,0.013,22,0.637,23,0.334,24,0.582,27,0.626,28,0.726,29,0.067,30,0.005,31,0.005,36,1.412,38,1.6,50,0.828,54,1.32,60,1.395,62,0.57,65,0.551,79,2.146,82,1.809,89,1.467,93,0.842,94,0.701,98,0.701,104,1.521,105,1.083,106,2.471,113,1.901,115,1.083,116,0.99,124,2.033,171,2.396,172,1.083,191,1.409,193,2.976,203,1.925,210,2.976,211,3.625,215,1.849,217,1.849,218,2.033,244,1.769,258,3.373,260,2.976,261,1.535,290,5.272,291,1.669,296,2.976,299,2.976,302,1.849,303,4.912,304,3.415,305,3.415,306,3.415,307,4.286,308,1.137,309,4.378,310,2.121,311,1.744,312,2.121,313,3.415,314,2.121,315,2.769,316,3.415,317,2.121,318,3.415,319,5.384,320,2.121,321,2.121,322,2.121,323,4.912,324,2.121,325,3.735,326,1.849,327,2.299,328,2.705,329,1.669,330,1.669,331,1.339,332,2.121,333,1.339,334,1.535,335,2.299,336,2.121,337,1.083,338,1.669,339,2.121,340,2.121,341,2.121,342,1.849,343,1.849,344,1.137,345,2.121,346,3.415,347,3.415,348,3.415,349,3.415,350,2.121,351,2.687,352,3.415,353,2.121,354,2.121,355,2.121,356,4.912,357,4.912,358,4.912,359,2.121,360,1.849,361,2.121,362,2.121,363,2.121,364,2.121,365,3.415]],["title/classes/CancelFriendshipRequestCommand.html",[0,0.286,366,2.718]],["body/classes/CancelFriendshipRequestCommand.html",[0,0.337,2,0.574,3,0.134,4,0.134,5,0.134,7,1.942,8,3.443,9,0.221,10,1.017,11,2.082,12,1.68,15,0.702,18,0.48,19,4.85,20,0.527,21,0.012,22,0.527,23,0.397,24,0.481,29,0.151,30,0.01,31,0.01,36,2.154,38,1.675,366,4.149,367,6.303,368,3.875,369,4.146,370,4.757,371,2.832]],["title/classes/CancelFriendshipRequestEvent.html",[0,0.286,372,2.718]],["body/classes/CancelFriendshipRequestEvent.html",[0,0.328,2,0.559,3,0.131,4,0.131,5,0.131,7,1.922,9,0.215,10,1,11,2.117,12,1.668,15,0.893,17,0.737,18,0.474,20,0.513,21,0.013,22,0.513,23,0.392,24,0.469,27,0.426,28,1.586,29,0.147,30,0.01,31,0.01,34,3.351,35,4.518,36,2.136,37,3.118,38,1.665,39,3.644,40,3.644,41,3.644,372,4.077,373,6.238]],["title/classes/CancelFriendshipRequestEventHandler.html",[0,0.286,374,2.922]],["body/classes/CancelFriendshipRequestEventHandler.html",[0,0.282,2,0.48,3,0.112,4,0.112,5,0.112,7,1.958,9,0.185,10,0.903,18,0.384,20,0.441,21,0.013,22,0.441,23,0.231,24,0.403,27,0.619,29,0.127,30,0.009,31,0.009,36,1.936,43,4.209,45,2.244,47,1.942,48,4.209,49,4.209,50,1.327,51,3.683,52,1.941,53,2.132,54,1.685,57,3.683,59,2.679,60,0.965,61,2.679,62,1.069,64,2.35,65,1.033,66,2.88,67,2.679,69,2.88,70,3.959,73,3.959,74,2.88,198,3.604,372,4.532,374,3.959,375,4.92,376,3.469,377,5.471,378,3.98,379,3.98,380,3.469,381,3.98,382,5.471]],["title/classes/CancelFriendshipRequestHandler.html",[0,0.286,383,2.922]],["body/classes/CancelFriendshipRequestHandler.html",[0,0.24,2,0.41,3,0.096,4,0.096,5,0.096,7,1.785,9,0.158,12,0.743,15,0.721,17,0.778,18,0.343,20,0.541,21,0.013,22,0.541,23,0.284,24,0.495,27,0.672,28,1.162,29,0.108,30,0.008,31,0.008,35,2.141,36,0.975,45,1.912,47,1.735,50,1.186,54,1.506,60,0.823,62,0.911,77,2.284,78,3.071,79,1.894,80,2.1,82,2.31,83,4.249,86,2.62,88,1.818,89,2.1,90,1.818,92,2.455,93,1.347,94,1.121,95,2.282,96,2.019,97,1.818,98,1.121,100,1.655,101,2.019,104,1.735,105,1.732,106,1.457,110,2.91,115,1.732,116,2.676,118,2.455,119,2.455,120,2.455,121,2.455,122,2.455,123,2.455,124,2.019,244,2.018,366,4.223,368,1.818,372,2.284,380,2.956,383,3.538,384,4.995,385,2.956,386,3.392,387,4.261,388,3.392,389,3.392,390,3.392,391,2.284,392,2.956,393,3.392,394,2.284,395,2.956,396,3.392,397,3.847,398,2.956,399,3.392,400,2.956,401,2.669,402,3.392,403,3.392,404,3.392]],["title/classes/DeleteUserCommand.html",[0,0.286,405,2.548]],["body/classes/DeleteUserCommand.html",[0,0.371,2,0.634,3,0.148,4,0.148,5,0.148,9,0.244,10,1.083,11,1.823,12,1.567,15,0.774,18,0.461,20,0.581,21,0.013,22,0.581,23,0.381,24,0.531,29,0.167,30,0.01,31,0.01,36,2.156,38,1.586,371,3.125,405,4.142,406,6.239,407,4.131,408,3.125,409,5.25,410,5.25]],["title/classes/DeleteUserHandler.html",[0,0.286,411,2.922]],["body/classes/DeleteUserHandler.html",[0,0.275,2,0.47,3,0.11,4,0.11,5,0.11,9,0.181,10,0.889,15,0.794,17,0.857,18,0.434,20,0.597,21,0.013,22,0.597,23,0.313,24,0.545,27,0.666,29,0.124,30,0.008,31,0.008,47,1.912,50,1.306,52,1.898,53,2.085,54,1.659,60,0.944,62,1.045,64,2.864,65,1.01,78,3.31,79,2.041,80,2.313,82,2.455,86,2.886,88,2.085,89,2.313,90,2.085,93,1.545,94,1.286,98,1.286,104,1.381,244,1.606,308,2.085,311,2.75,337,1.987,344,2.085,397,3.062,405,4.209,411,3.898,412,5.811,413,2.816,414,4.694,415,5.386,416,3.891,417,3.891,418,2.816,419,2.316,420,3.891,421,3.891,422,3.891,423,3.891]],["title/classes/ErrorEventHandler.html",[0,0.286,424,3.177]],["body/classes/ErrorEventHandler.html",[0,0.337,2,0.574,3,0.134,4,0.134,5,0.134,9,0.221,18,0.334,20,0.527,21,0.013,22,0.527,23,0.276,24,0.481,27,0.665,29,0.151,30,0.01,31,0.01,46,3.203,47,2.188,48,4.603,49,3.203,50,1.495,51,4.149,54,1.466,57,4.149,59,3.203,60,1.154,61,3.203,62,1.278,64,2.647,65,1.235,67,3.203,100,3.654,106,2.043,424,4.85,425,5.372,426,4.757,427,4.757,428,4.757,429,4.757,430,4.757,431,4.757]],["title/classes/ErrorsEvent.html",[0,0.286,100,1.969]],["body/classes/ErrorsEvent.html",[0,0.345,2,0.588,3,0.138,4,0.138,5,0.138,9,0.226,10,1.033,11,2.146,12,1.691,15,0.923,18,0.486,20,0.54,21,0.013,22,0.54,23,0.402,24,0.493,29,0.155,30,0.01,31,0.01,38,1.683,100,3.053,116,3.523,432,4.246,433,7.297,434,4.872,435,4.872,436,4.872,437,4.872]],["title/entities/Friendship.html",[7,1.084,438,2.403]],["body/entities/Friendship.html",[0,0.311,3,0.124,4,0.124,5,0.124,7,1.572,9,0.204,10,0.966,13,3.916,14,3.916,17,1.277,18,0.411,21,0.013,23,0.34,27,0.538,28,1.505,29,0.14,30,0.009,31,0.009,98,1.453,130,2.988,174,2.96,176,4.722,438,3.484,439,3.832,440,5.1,441,5.852,442,6.112,443,5.519,444,5.519,445,4.397,446,5.852,447,4.397,448,4.397,449,5.733,450,4.397]],["title/controllers/FriendshipController.html",[125,2.163,451,2.922]],["body/controllers/FriendshipController.html",[0,0.156,3,0.062,4,0.062,5,0.062,7,1.473,9,0.102,12,0.482,18,0.448,20,0.706,21,0.013,22,0.706,23,0.37,24,0.645,27,0.538,29,0.07,30,0.006,31,0.006,36,2.238,38,1.588,50,0.853,54,1.965,60,1.547,65,0.572,113,2.108,125,1.18,127,1.18,130,3.257,134,1.311,187,1.733,191,0.909,195,5.264,198,3.889,222,1.919,223,4.782,225,1.733,229,1.919,234,1.483,235,1.919,263,5.559,451,2.546,452,1.919,453,3.83,454,3.83,455,3.066,456,3.83,457,3.066,458,3.83,459,3.066,460,3.066,461,2.202,462,2.202,463,2.202,464,2.202,465,2.202,466,2.202,467,2.202,468,2.202,469,2.202,470,2.202,471,2.202,472,2.202,473,2.202,474,2.202,475,2.202,476,2.202,477,2.202,478,2.202,479,2.202,480,2.202,481,2.202,482,2.202,483,2.202,484,2.221,485,2.202,486,1.733,487,1.919,488,2.202,489,2.202,490,2.774,491,1.919,492,1.483,493,1.919,494,1.919,495,1.483,496,1.919,497,1.919,498,2.202,499,2.202,500,2.202,501,2.202,502,3.518,503,2.202,504,2.202,505,2.202,506,2.202,507,2.202,508,5.85,509,2.202,510,5.85,511,2.202,512,2.202,513,2.202,514,2.202,515,2.202,516,2.202,517,2.202,518,2.202,519,2.202,520,2.202,521,2.202]],["title/classes/FriendshipDto.html",[0,0.286,495,2.718]],["body/classes/FriendshipDto.html",[0,0.345,2,0.588,3,0.138,4,0.138,5,0.138,9,0.226,10,1.033,11,2.146,12,1.691,15,0.923,18,0.486,20,0.54,21,0.013,22,0.54,23,0.402,24,0.493,29,0.155,30,0.01,31,0.01,35,4.606,36,2.17,37,3.28,38,1.683,495,4.213,522,4.246,523,4.872,524,4.872,525,4.872]],["title/modules/FriendshipModule.html",[136,2.276,144,2.718]],["body/modules/FriendshipModule.html",[0,0.234,3,0.093,4,0.093,5,0.093,7,1.986,17,0.526,21,0.013,27,0.74,28,1.133,29,0.105,30,0.008,31,0.008,42,3.475,44,2.604,45,2.707,62,0.889,65,0.859,75,3.475,94,1.093,95,2.242,96,1.97,97,1.773,99,2.395,127,2.573,136,2.707,138,1.97,139,2.858,144,4.623,146,3.233,147,2.228,148,2.228,150,3.475,151,2.395,160,2.395,198,1.69,294,3.779,301,2.604,374,3.475,375,2.604,383,3.475,451,4.09,484,2.089,490,4.335,491,2.884,526,2.884,527,2.884,528,3.309,529,3.309,530,6.201,531,3.309,532,3.475,533,2.884,534,5.652,535,3.475,536,3.309,537,3.309,538,3.475,539,4.926,540,3.475,541,2.089,542,3.475,543,2.089,544,6.201,545,5.652,546,3.309,547,3.475,548,2.604,549,2.395,550,3.475,551,2.604]],["title/entities/FriendshipRequest.html",[95,1.885,438,2.403]],["body/entities/FriendshipRequest.html",[0,0.29,3,0.116,4,0.116,5,0.116,9,0.191,10,0.922,17,1.309,18,0.446,21,0.013,23,0.369,27,0.513,28,1.404,29,0.13,30,0.009,31,0.009,95,2.607,98,1.355,130,3.242,174,2.761,176,4.954,368,3.402,438,3.324,440,4.867,442,5.941,443,5.364,444,5.364,449,5.534,552,5.941,553,3.574,554,6.349,555,5.584,556,6.349,557,4.1,558,5.584,559,4.1,560,4.1]],["title/classes/FriendshipRequestDto.html",[0,0.286,492,2.718]],["body/classes/FriendshipRequestDto.html",[0,0.368,2,0.628,3,0.147,4,0.147,5,0.147,9,0.242,10,1.077,11,1.981,12,1.561,15,0.963,18,0.459,20,0.576,21,0.013,22,0.576,23,0.379,24,0.527,29,0.165,30,0.01,31,0.01,36,2.15,38,1.581,408,3.098,492,4.394,561,6.214,562,4.536,563,5.205,564,5.205]],["title/injectables/FriendshipService.html",[179,1.433,490,2.548]],["body/injectables/FriendshipService.html",[0,0.149,1,1.418,3,0.06,4,0.06,5,0.06,7,1.441,9,0.098,13,1.254,14,2.021,15,0.311,17,0.54,18,0.455,20,0.718,21,0.013,22,0.718,23,0.376,24,0.656,27,0.637,29,0.067,30,0.005,31,0.005,50,0.823,54,2.169,60,1.522,62,0.566,65,0.547,79,2.555,92,3.087,104,0.748,106,2.101,113,2.074,134,1.254,179,1.205,180,1.076,203,3.538,244,2.367,309,4.151,338,4.513,366,3.294,368,1.129,453,2.96,454,2.96,455,2.96,456,2.96,457,2.96,458,2.96,459,2.96,460,2.96,484,1.33,490,2.144,492,4.061,493,1.836,494,1.836,495,5.052,496,1.836,541,1.33,543,1.33,565,1.836,566,1.836,567,4.747,568,2.107,569,3.396,570,2.107,571,5.365,572,3.396,573,2.107,574,3.396,575,2.107,576,4.266,577,3.396,578,2.107,579,3.396,580,2.107,581,3.396,582,2.107,583,3.396,584,2.107,585,3.396,586,2.107,587,1.418,588,2.107,589,2.107,590,2.107,591,1.418,592,1.836,593,1.836,594,1.418,595,3.357,596,2.672,597,1.418,598,1.418,599,1.836,600,1.254,601,2.107,602,1.525,603,5.257,604,2.107,605,2.107,606,2.107,607,2.107,608,3.396,609,3.396,610,2.107,611,4.892,612,4.266,613,2.107,614,2.107]],["title/classes/GetReceivedFriendshipHandler.html",[0,0.286,540,2.922]],["body/classes/GetReceivedFriendshipHandler.html",[0,0.29,2,0.495,3,0.116,4,0.116,5,0.116,7,1.101,9,0.191,15,0.824,17,0.652,18,0.392,20,0.618,21,0.013,22,0.618,23,0.324,24,0.565,27,0.656,29,0.13,30,0.009,31,0.009,47,1.982,50,1.354,60,0.994,62,1.101,79,2.098,80,2.398,82,2.51,93,1.628,94,1.355,95,1.914,96,2.441,97,2.197,98,1.355,104,1.456,113,1.355,203,2.312,344,2.197,368,2.197,391,2.761,394,2.761,398,3.574,540,4.041,541,4.303,596,3.227,597,4.589,615,4.595,616,2.968,617,4.275,618,3.227,619,4.1,620,4.394,621,3.759,622,4.1,623,2.761,624,2.761,625,2.761,626,4.1,627,3.227,628,3.574,629,4.1,630,3.227,631,3.574]],["title/classes/GetReceivedFriendshipRequestQuery.html",[0,0.286,597,2.718]],["body/classes/GetReceivedFriendshipRequestQuery.html",[0,0.362,2,0.618,3,0.145,4,0.145,5,0.145,7,1.9,9,0.238,10,1.066,11,1.794,12,1.549,15,0.755,18,0.454,20,0.567,21,0.013,22,0.567,23,0.375,24,0.518,29,0.163,30,0.01,31,0.01,36,2.136,38,1.572,371,3.046,408,3.046,541,4.466,597,4.348,632,5.12,633,4.027,634,4.46,635,4.46]],["title/classes/GetSentFriendshipRequestHandler.html",[0,0.286,542,2.922]],["body/classes/GetSentFriendshipRequestHandler.html",[0,0.287,2,0.49,3,0.115,4,0.115,5,0.115,7,1.823,9,0.189,15,0.818,17,0.646,18,0.39,20,0.614,21,0.013,22,0.614,23,0.322,24,0.561,27,0.653,29,0.129,30,0.009,31,0.009,47,1.969,50,1.345,60,0.984,62,1.09,77,2.733,79,2.087,80,2.382,82,2.5,93,1.612,94,1.341,95,1.895,96,2.416,97,2.175,98,1.341,104,1.441,113,1.341,203,2.289,344,2.175,368,2.175,391,2.733,394,2.733,395,3.538,542,4.014,543,4.285,594,4.57,596,3.195,615,4.571,617,4.253,618,3.195,620,4.364,621,3.734,623,2.733,624,2.733,625,2.733,627,3.195,630,3.195,631,3.538,636,4.059,637,4.059,638,4.059,639,3.538,640,4.059]],["title/classes/GetSentFriendshipRequestQuery.html",[0,0.286,594,2.718]],["body/classes/GetSentFriendshipRequestQuery.html",[0,0.362,2,0.618,3,0.145,4,0.145,5,0.145,7,1.9,9,0.238,10,1.066,11,1.794,12,1.549,15,0.755,18,0.454,20,0.567,21,0.013,22,0.567,23,0.375,24,0.518,29,0.163,30,0.01,31,0.01,36,2.136,38,1.572,371,3.046,408,3.046,543,4.466,594,4.348,632,5.12,633,4.027,634,4.46,635,4.46]],["title/classes/GetStatusFriendshipHandler.html",[0,0.286,538,2.922]],["body/classes/GetStatusFriendshipHandler.html",[0,0.224,2,0.382,3,0.089,4,0.089,5,0.089,7,0.849,9,0.147,13,1.883,14,1.883,15,0.685,17,0.739,18,0.326,20,0.515,21,0.013,22,0.515,23,0.27,24,0.47,27,0.642,29,0.101,30,0.007,31,0.007,36,1.745,47,1.649,50,1.127,60,0.767,62,0.849,79,1.82,80,1.995,82,2.572,85,4.334,89,1.995,93,1.256,94,1.045,95,1.477,96,1.883,97,1.695,98,1.045,99,2.289,103,2.489,104,1.649,113,2.005,244,2.273,261,3.986,368,2.49,391,2.13,394,3.708,401,4.334,484,3.831,538,3.363,598,4.086,599,2.757,615,3.986,616,2.289,617,3.708,618,2.489,620,3.656,621,3.128,623,2.13,624,2.13,625,2.13,627,3.656,628,4.049,639,4.049,641,2.757,642,3.163,643,2.757,644,3.163,645,3.163,646,3.163,647,2.757,648,2.757,649,2.757,650,3.163,651,3.163,652,5.29,653,6.069,654,6.069,655,3.163,656,3.163,657,3.163,658,3.163,659,3.163,660,3.163,661,3.163,662,3.163,663,3.163,664,3.163]],["title/classes/GetStatusFriendshipQuery.html",[0,0.286,598,2.718]],["body/classes/GetStatusFriendshipQuery.html",[0,0.328,2,0.559,3,0.131,4,0.131,5,0.131,9,0.215,10,1,11,2.117,12,1.668,15,0.893,17,1.212,18,0.474,20,0.513,21,0.013,22,0.513,23,0.392,24,0.469,27,0.426,28,1.586,29,0.147,30,0.01,31,0.01,38,1.665,484,4.518,598,4.077,632,5.18,652,6.238,665,4.036,666,4.631,667,4.631,668,4.631,669,4.631]],["title/classes/GetUserHandler.html",[0,0.286,670,2.922]],["body/classes/GetUserHandler.html",[0,0.264,2,0.451,3,0.106,4,0.106,5,0.106,9,0.174,15,0.772,17,0.961,18,0.368,20,0.58,21,0.013,22,0.58,23,0.304,24,0.53,27,0.675,29,0.119,30,0.008,31,0.008,47,1.859,50,1.27,54,1.613,60,0.906,62,1.003,79,1.997,80,2.249,82,2.412,93,1.483,94,1.234,98,1.234,104,1.326,106,2.249,113,1.73,203,2.106,244,2.161,308,2.002,311,2.674,337,1.908,413,2.704,414,3.256,419,2.224,600,3.899,602,2.704,617,4.07,621,3.525,623,2.515,624,2.515,625,2.515,630,2.94,670,3.789,671,4.757,672,3.736,673,3.305,674,3.256,675,4.741,676,3.736,677,3.736,678,3.736,679,3.736,680,3.736,681,3.736,682,3.736,683,3.736,684,3.256,685,3.256,686,3.256,687,3.736]],["title/classes/GetUserIfRefreshTokenMatchesHandler.html",[0,0.286,688,2.922]],["body/classes/GetUserIfRefreshTokenMatchesHandler.html",[0,0.255,2,0.435,3,0.102,4,0.102,5,0.102,9,0.167,15,0.753,17,1.156,18,0.359,20,0.565,21,0.013,22,0.565,23,0.296,24,0.516,27,0.668,29,0.115,30,0.008,31,0.008,47,1.812,50,1.238,54,1.11,60,0.874,62,0.968,79,1.958,80,2.192,82,2.374,83,4.325,89,2.192,93,1.43,94,1.191,98,1.191,100,1.757,101,2.145,104,1.812,105,1.84,106,2.192,110,2.145,113,1.191,115,1.84,116,2.383,191,2.661,244,2.106,308,1.931,311,2.606,315,3.635,327,3.436,337,1.84,419,2.145,617,3.99,621,3.436,623,2.426,624,2.426,625,2.426,671,4.664,688,3.694,689,3.14,690,3.603,691,4.34,692,3.603,693,3.14,694,3.603,695,3.603,696,5.104,697,3.603,698,3.603,699,3.603,700,3.603]],["title/classes/GetUserIfRefreshTokenMatchesQuery.html",[0,0.286,691,2.718]],["body/classes/GetUserIfRefreshTokenMatchesQuery.html",[0,0.324,2,0.553,3,0.129,4,0.129,5,0.129,9,0.213,10,0.992,11,2.11,12,1.663,15,0.887,17,1.133,18,0.472,20,0.507,21,0.013,22,0.507,23,0.39,24,0.463,29,0.146,30,0.009,31,0.009,36,2.128,38,1.661,191,2.941,315,4.018,691,4.047,701,5.608,702,3.99,703,5.157,704,3.99,705,4.579,706,4.579,707,4.579]],["title/classes/GetUserQuery.html",[0,0.286,600,2.403]],["body/classes/GetUserQuery.html",[0,0.367,2,0.626,3,0.146,4,0.146,5,0.146,9,0.241,10,1.074,11,1.809,12,1.558,15,0.764,18,0.457,20,0.574,21,0.013,22,0.574,23,0.378,24,0.72,29,0.165,30,0.01,31,0.01,36,2.146,38,1.579,371,3.085,408,3.085,600,3.875,701,5.6,708,4.517,709,5.183,710,4.517,711,5.183]],["title/injectables/JwtAuthenticationGuard.html",[179,1.433,230,2.718]],["body/injectables/JwtAuthenticationGuard.html",[0,0.406,3,0.162,4,0.162,5,0.162,21,0.013,27,0.638,29,0.183,30,0.011,31,0.011,52,2.802,65,1.491,179,2.462,180,2.934,230,4.67,285,3.239,712,4.521,713,5.007,714,4.521,715,2.934,716,5.007]],["title/injectables/JwtRefreshGuard.html",[179,1.433,234,2.718]],["body/injectables/JwtRefreshGuard.html",[0,0.401,3,0.16,4,0.16,5,0.16,21,0.013,27,0.632,29,0.18,30,0.011,31,0.011,52,2.763,65,1.47,179,2.441,180,2.893,191,2.838,234,4.63,285,3.194,315,3.194,712,4.458,714,4.458,715,2.893,716,4.937,717,4.937]],["title/injectables/JwtRefreshTokenStrategy.html",[179,1.433,238,2.548]],["body/injectables/JwtRefreshTokenStrategy.html",[0,0.26,3,0.104,4,0.104,5,0.104,9,0.171,12,0.805,15,0.543,18,0.364,20,0.574,21,0.013,22,0.574,23,0.301,24,0.524,27,0.686,29,0.117,30,0.008,31,0.008,50,1.256,60,0.892,65,0.955,79,1.981,106,1.58,113,1.712,134,2.19,156,4.076,157,2.663,176,2.477,179,1.839,180,1.879,191,2.686,198,3.733,203,2.074,233,2.477,236,3.812,237,2.895,238,3.27,285,2.074,315,2.074,328,4.108,329,2.895,330,2.895,351,4.718,360,3.207,703,3.749,715,1.879,718,5.225,719,3.207,720,3.487,721,3.679,722,3.679,723,5.18,724,3.679,725,4.076,726,4.076,727,3.749,728,4.718,729,3.207,730,2.895,731,3.207,732,3.207,733,3.679,734,3.207,735,3.679,736,3.679,737,3.679,738,3.679]],["title/injectables/JwtStrategy.html",[179,1.433,739,3.177]],["body/injectables/JwtStrategy.html",[0,0.275,3,0.11,4,0.11,5,0.11,9,0.181,12,0.852,15,0.794,17,0.619,18,0.378,20,0.597,21,0.013,22,0.597,23,0.313,24,0.545,27,0.706,28,1.332,29,0.124,30,0.008,31,0.008,50,1.306,60,0.944,65,1.01,79,2.041,82,2.455,93,1.545,94,1.286,98,1.286,104,1.381,113,1.78,179,1.912,180,1.987,198,3.155,203,2.194,233,2.62,244,1.606,285,2.194,297,3.391,308,2.085,311,2.75,328,4.209,329,3.062,330,3.062,337,1.987,351,3.062,715,1.987,720,3.626,725,3.062,726,3.062,727,3.898,728,4.239,729,3.391,730,3.062,731,3.391,732,3.391,734,3.391,739,4.239,740,3.391,741,3.891,742,5.386,743,3.891,744,3.391,745,3.891,746,3.891]],["title/injectables/LocalAuthenticationGuard.html",[179,1.433,226,2.922]],["body/injectables/LocalAuthenticationGuard.html",[0,0.41,3,0.164,4,0.164,5,0.164,21,0.013,27,0.641,29,0.184,30,0.011,31,0.011,65,1.505,179,2.476,180,2.962,226,5.048,285,3.27,714,4.564,715,2.962,747,5.055,748,5.8]],["title/injectables/LocalStrategy.html",[179,1.433,281,2.718]],["body/injectables/LocalStrategy.html",[0,0.3,3,0.12,4,0.12,5,0.12,9,0.197,15,0.626,17,0.675,18,0.402,20,0.633,21,0.013,22,0.633,23,0.332,24,0.578,27,0.664,28,1.453,29,0.135,30,0.009,31,0.009,38,1.572,50,1.386,60,1.029,65,1.101,79,2.135,89,2.454,113,1.402,134,2.526,171,2.788,172,3.53,179,2.029,180,2.167,218,4.115,219,3.339,281,3.848,285,2.392,715,2.167,720,3.848,725,3.339,726,3.339,727,3.071,730,3.339,744,3.698,749,5.632,750,3.698,751,4.243,752,4.243,753,5.715,754,5.715,755,4.243,756,3.698,757,4.243,758,4.243]],["title/classes/RegisterCommand.html",[0,0.286,335,2.718]],["body/classes/RegisterCommand.html",[0,0.32,2,0.547,3,0.128,4,0.128,5,0.128,9,0.21,10,0.985,11,2.203,12,1.735,15,0.88,18,0.498,20,0.501,21,0.013,22,0.501,23,0.412,24,0.458,29,0.144,30,0.009,31,0.009,38,1.717,171,3.461,172,3.765,335,4.017,759,3.946,760,4.389,761,4.527,762,4.527,763,4.527,764,4.527,765,4.527]],["title/classes/RegisterHandler.html",[0,0.286,292,2.922]],["body/classes/RegisterHandler.html",[0,0.34,2,0.401,3,0.094,4,0.094,5,0.094,9,0.154,10,0.794,15,0.71,17,0.9,18,0.398,20,0.627,21,0.013,22,0.533,23,0.279,24,0.487,27,0.668,28,1.136,29,0.105,30,0.008,31,0.008,47,1.708,50,1.167,52,1.619,53,1.778,54,2.03,60,0.805,62,0.891,64,2.666,65,0.861,78,3.033,79,1.87,80,2.066,82,2.286,86,2.578,88,1.778,89,2.066,90,1.778,93,1.317,94,1.096,98,1.096,104,1.178,105,1.694,106,2.066,113,1.096,115,1.694,116,2.246,124,2.864,244,1.986,292,3.482,308,1.778,311,2.457,325,2.892,326,2.892,335,4.18,337,1.694,486,2.611,720,3.239,766,2.892,767,4.811,768,4.811,769,3.318,770,3.318,771,3.318,772,1.975,773,2.892,774,2.892,775,2.892,776,3.318,777,4.811,778,3.318,779,3.318,780,4.811,781,3.318,782,4.811,783,3.318,784,2.892,785,3.318,786,2.892,787,2.611,788,2.892,789,2.892,790,3.318,791,3.318,792,3.318,793,3.318,794,3.318,795,3.318,796,3.318,797,2.892]],["title/classes/RemoveFriendshipCommand.html",[0,0.286,591,2.718]],["body/classes/RemoveFriendshipCommand.html",[0,0.339,2,0.579,3,0.135,4,0.135,5,0.135,9,0.223,10,1.022,11,2.137,12,1.684,13,4.318,14,4.47,15,0.914,16,4.179,18,0.482,20,0.531,21,0.013,22,0.531,23,0.399,24,0.485,29,0.152,30,0.01,31,0.01,38,1.677,591,4.171,798,6.322,799,4.179,800,4.795,801,4.795,802,4.795]],["title/classes/RemoveFriendshipEvent.html",[0,0.286,803,2.718]],["body/classes/RemoveFriendshipEvent.html",[0,0.333,2,0.568,3,0.133,4,0.133,5,0.133,9,0.219,10,1.01,11,2.126,12,1.675,15,0.902,17,0.748,18,0.478,20,0.521,21,0.013,22,0.521,23,0.395,24,0.476,27,0.432,28,1.61,29,0.149,30,0.01,31,0.01,35,4.545,36,2.146,37,3.166,38,1.671,803,4.118,804,6.275,805,4.098,806,4.702,807,4.702,808,4.702]],["title/classes/RemoveFriendshipEventHandler.html",[0,0.286,547,2.922]],["body/classes/RemoveFriendshipEventHandler.html",[0,0.285,2,0.487,3,0.114,4,0.114,5,0.114,7,1.482,9,0.187,10,0.911,18,0.388,20,0.447,21,0.013,22,0.447,23,0.234,24,0.408,27,0.622,29,0.128,30,0.009,31,0.009,36,1.946,43,4.238,46,2.715,47,1.96,48,4.238,49,4.238,50,1.339,51,3.717,52,1.967,53,2.161,54,1.701,56,3.515,57,3.717,58,3.515,59,2.715,60,0.978,61,2.715,62,1.083,64,2.371,65,1.047,66,2.918,67,2.715,69,2.918,70,3.995,73,3.995,74,2.918,198,2.819,547,3.995,548,4.953,549,4.899,803,4.558,809,5.52,810,3.515,811,4.033,812,4.344]],["title/classes/RemoveFriendshipHandler.html",[0,0.286,532,2.922]],["body/classes/RemoveFriendshipHandler.html",[0,0.243,2,0.414,3,0.097,4,0.097,5,0.097,7,1.549,9,0.159,12,0.751,13,2.042,14,2.042,15,0.727,18,0.346,20,0.546,21,0.013,22,0.546,23,0.286,24,0.499,27,0.659,29,0.109,30,0.008,31,0.008,47,1.749,50,1.195,54,1.057,60,0.832,62,0.921,78,3.091,79,1.906,80,2.117,81,2.99,82,2.322,83,4.263,85,3.878,86,2.641,88,1.838,89,2.117,90,1.838,93,1.362,94,1.134,98,1.134,99,2.483,100,1.673,101,2.042,103,2.699,104,1.749,105,1.752,106,1.473,108,4.295,109,5.027,110,2.042,115,1.752,116,2.692,118,2.483,119,2.483,120,2.483,121,2.483,122,2.483,123,2.483,124,2.042,244,2.034,394,2.31,401,2.699,532,3.567,549,2.483,591,4.245,593,2.99,616,2.483,641,2.99,647,2.99,648,2.99,649,2.99,803,2.31,810,2.99,813,5.027,814,3.43,815,2.99,816,3.43,817,3.43,818,3.43,819,4.928,820,4.928,821,3.43,822,3.43,823,3.43,824,3.43,825,3.43,826,3.43]],["title/classes/RemoveRefreshTokenCommand.html",[0,0.286,827,2.718]],["body/classes/RemoveRefreshTokenCommand.html",[0,0.367,2,0.626,3,0.146,4,0.146,5,0.146,9,0.241,10,1.074,11,1.809,12,1.558,15,0.764,18,0.457,20,0.574,21,0.013,22,0.574,23,0.378,24,0.524,29,0.165,30,0.01,31,0.01,36,2.146,38,1.579,191,2.937,371,3.085,408,3.085,827,4.382,828,6.202,829,4.078,830,4.517,831,5.183]],["title/classes/RemoveRefreshTokenHandler.html",[0,0.286,832,2.922]],["body/classes/RemoveRefreshTokenHandler.html",[0,0.274,2,0.468,3,0.11,4,0.11,5,0.11,9,0.18,15,0.793,17,0.617,18,0.378,20,0.595,21,0.013,22,0.595,23,0.312,24,0.544,27,0.665,29,0.123,30,0.008,31,0.008,47,1.908,50,1.303,54,1.195,60,0.941,62,1.041,78,3.305,79,2.038,80,2.308,82,2.452,83,4.416,86,2.88,88,2.078,89,2.308,90,2.078,93,1.54,94,1.282,98,1.282,100,1.892,101,2.309,104,1.908,105,1.981,110,2.309,115,1.981,116,2.509,191,2.748,244,1.601,308,2.078,311,2.744,334,2.807,337,1.981,419,2.309,815,3.38,827,4.483,832,3.89,833,5.375,834,3.052,835,3.878,836,3.878,837,3.878,838,3.052,839,3.052,840,3.38,841,3.878]],["title/interfaces/RequestUser.html",[195,2.718,842,2.718]],["body/interfaces/RequestUser.html",[3,0.153,4,0.153,5,0.153,9,0.252,10,1.104,17,1.292,21,0.013,23,0.314,27,0.615,28,1.853,29,0.172,30,0.011,31,0.011,195,4.503,198,3.706,233,3.644,715,3.415,842,3.644,843,4.26,844,4.718,845,4.718]],["title/classes/SendFriendshipRequestCommand.html",[0,0.286,587,2.718]],["body/classes/SendFriendshipRequestCommand.html",[0,0.33,2,0.563,3,0.132,4,0.132,5,0.132,7,1.928,8,3.377,9,0.217,10,1.005,11,2.069,12,1.671,15,0.688,17,1.31,18,0.476,19,3.672,20,0.517,21,0.013,22,0.517,23,0.393,24,0.472,27,0.429,28,1.598,29,0.148,30,0.01,31,0.01,368,3.846,369,4.067,371,2.778,587,4.098,846,6.256,847,6.086]],["title/classes/SendFriendshipRequestEvent.html",[0,0.286,848,2.718]],["body/classes/SendFriendshipRequestEvent.html",[0,0.328,2,0.559,3,0.131,4,0.131,5,0.131,7,1.922,9,0.215,10,1,11,2.117,12,1.668,15,0.893,17,0.737,18,0.474,20,0.513,21,0.013,22,0.513,23,0.392,24,0.469,27,0.426,28,1.586,29,0.147,30,0.01,31,0.01,34,3.351,35,4.518,36,2.136,37,3.118,38,1.665,39,3.644,40,3.644,41,3.644,848,4.077,849,6.238]],["title/classes/SendFriendshipRequestEventHandler.html",[0,0.286,550,2.922]],["body/classes/SendFriendshipRequestEventHandler.html",[0,0.275,2,0.47,3,0.11,4,0.11,5,0.11,7,1.994,9,0.181,10,0.889,18,0.378,20,0.431,21,0.013,22,0.431,23,0.226,24,0.394,27,0.644,29,0.124,30,0.008,31,0.008,32,4.209,36,1.917,43,4.159,45,3.947,46,2.62,47,1.912,48,4.159,49,4.159,50,1.306,51,3.626,52,1.898,53,2.085,54,1.659,57,3.626,59,2.62,60,0.944,61,2.62,62,1.045,63,3.062,64,2.313,65,1.01,66,2.816,67,2.62,69,2.816,70,3.898,73,3.898,74,2.816,198,2.75,543,3.4,550,3.898,551,4.861,848,2.62,850,5.386,851,3.891,852,3.891,853,3.391,854,3.891]],["title/classes/SendFriendshipRequestHandler.html",[0,0.286,535,2.922]],["body/classes/SendFriendshipRequestHandler.html",[0,0.238,2,0.406,3,0.095,4,0.095,5,0.095,7,1.78,9,0.156,12,0.736,15,0.717,17,0.773,18,0.341,20,0.538,21,0.013,22,0.538,23,0.282,24,0.492,27,0.683,28,1.152,29,0.107,30,0.008,31,0.008,45,1.897,47,1.725,50,1.178,54,1.497,60,0.816,62,0.903,64,1.445,65,0.873,77,2.265,78,3.057,79,1.885,80,2.45,82,2.622,83,4.239,86,1.803,88,2.604,89,2.087,90,1.803,92,2.435,93,1.336,94,1.112,95,2.268,96,2.003,97,1.803,98,1.112,100,1.641,101,2.003,104,2.025,105,1.718,106,1.445,110,2.893,113,1.112,115,1.718,116,2.663,118,2.435,119,2.435,120,2.435,121,2.435,122,2.435,123,2.435,124,2.003,311,2.913,337,1.718,368,1.803,385,2.932,387,4.235,391,2.265,400,2.932,535,3.517,587,4.207,848,2.265,853,2.932,855,4.972,856,3.364,857,3.364,858,3.364,859,3.364,860,3.364,861,3.364,862,2.932,863,3.364,864,3.364,865,3.364,866,3.364]],["title/classes/SetCurrentRefreshTokenCommand.html",[0,0.286,331,2.548]],["body/classes/SetCurrentRefreshTokenCommand.html",[0,0.329,2,0.561,3,0.131,4,0.131,5,0.131,9,0.216,10,1.002,11,2.119,12,1.67,15,0.895,18,0.475,20,0.515,21,0.013,22,0.515,23,0.393,24,0.47,29,0.148,30,0.01,31,0.01,36,2.138,38,1.667,191,2.958,331,3.832,333,4.525,703,5.188,704,4.051,829,3.658,830,4.051,867,6.247,868,4.648,869,4.648]],["title/classes/SetCurrentRefreshTokenHandler.html",[0,0.286,870,2.922]],["body/classes/SetCurrentRefreshTokenHandler.html",[0,0.262,2,0.447,3,0.105,4,0.105,5,0.105,9,0.172,15,0.767,17,0.589,18,0.365,20,0.576,21,0.013,22,0.576,23,0.302,24,0.526,27,0.673,29,0.118,30,0.008,31,0.008,47,1.847,50,1.261,54,1.14,60,0.898,62,0.994,78,3.223,79,1.987,80,2.234,82,2.402,83,4.359,86,2.787,88,1.983,89,2.234,90,1.983,93,1.469,94,1.223,98,1.223,100,1.806,101,2.203,104,1.847,105,1.89,106,1.59,110,2.203,115,1.89,116,2.428,191,2.693,244,2.147,308,1.983,311,2.656,327,3.502,331,4.119,333,4.119,334,2.679,337,1.89,419,2.203,834,2.913,838,2.913,839,4.094,870,3.765,871,5.242,872,3.702,873,3.702,874,3.702,875,3.702,876,3.702,877,3.702,878,3.226,879,3.702]],["title/classes/SignInDto.html",[0,0.286,214,2.922]],["body/classes/SignInDto.html",[0,0.454,2,0.613,3,0.143,4,0.143,5,0.143,9,0.236,10,1.06,18,0.451,21,0.013,23,0.373,27,0.467,29,0.161,30,0.01,31,0.01,38,1.567,130,3.28,171,3.438,172,3.599,214,4.649,772,3.021,880,5.546,881,4.423,882,4.423,883,5.075,884,5.361,885,5.075,886,4.423,887,4.423,888,4.423,889,4.423]],["title/classes/SignUpDto.html",[0,0.286,211,2.718]],["body/classes/SignUpDto.html",[0,0.436,2,0.574,3,0.134,4,0.134,5,0.134,9,0.221,10,1.017,18,0.48,21,0.013,23,0.397,27,0.437,29,0.151,30,0.01,31,0.01,38,1.623,130,3.491,171,3.335,172,3.491,211,4.149,760,4.07,772,2.832,880,5.691,882,4.146,884,5.422,886,4.146,887,4.146,888,4.146,889,4.146,890,4.146,891,4.146,892,4.757,893,4.757,894,4.757,895,4.85]],["title/interfaces/TokenPayload.html",[328,2.548,842,2.718]],["body/interfaces/TokenPayload.html",[3,0.163,4,0.163,5,0.163,9,0.268,10,1.148,21,0.013,23,0.335,29,0.184,30,0.011,31,0.011,36,2.228,38,1.579,328,4.391,842,3.886,843,4.542,896,5.031,897,5.031]],["title/classes/UpdateUserCommand.html",[0,0.286,898,2.548]],["body/classes/UpdateUserCommand.html",[0,0.331,2,0.565,3,0.132,4,0.132,5,0.132,9,0.218,10,1.007,11,2.124,12,1.673,15,0.9,17,1.186,18,0.477,20,0.519,21,0.013,22,0.519,23,0.394,24,0.474,27,0.431,29,0.149,30,0.01,31,0.01,36,2.067,38,1.521,407,3.686,408,2.788,898,3.852,899,6.266,900,4.706,901,4.684,902,4.684,903,4.684,904,3.686,905,3.39]],["title/classes/UpdateUserDto.html",[0,0.286,900,2.548]],["body/classes/UpdateUserDto.html",[0,0.424,2,0.551,3,0.129,4,0.129,5,0.129,9,0.212,10,0.99,18,0.471,21,0.013,23,0.389,24,0.607,27,0.616,29,0.145,30,0.009,31,0.009,38,1.605,130,3.062,171,3.267,172,3.421,715,2.329,760,3.988,772,2.715,884,4.848,891,3.975,895,4.719,900,3.785,905,3.301,906,6.201,907,3.975,908,4.561,909,4.561,910,5.226,911,4.561,912,4.561,913,3.071,914,4.561,915,3.975,916,3.975,917,3.975,918,4.561,919,3.975]],["title/classes/UpdateUserHandler.html",[0,0.286,920,2.922]],["body/classes/UpdateUserHandler.html",[0,0.344,2,0.406,3,0.095,4,0.095,5,0.095,9,0.156,10,0.802,15,0.717,17,0.907,18,0.401,20,0.632,21,0.013,22,0.538,23,0.282,24,0.492,27,0.683,29,0.107,30,0.008,31,0.008,47,1.725,50,1.178,52,1.641,53,1.803,54,1.925,60,0.816,62,0.903,64,2.684,65,0.873,78,3.057,79,1.885,80,2.087,82,2.301,86,2.604,88,1.803,89,2.087,90,1.803,93,1.336,94,1.112,98,1.112,104,1.194,105,1.718,106,2.087,113,1.112,115,1.718,116,2.268,124,2.893,244,2.354,254,2.932,308,1.803,311,2.482,337,1.718,342,2.932,397,2.647,413,2.435,418,2.435,419,2.003,673,3.068,674,2.932,684,2.932,685,2.932,686,2.932,720,3.272,772,2.003,773,2.932,774,2.932,775,2.932,784,2.932,786,2.932,787,2.647,788,2.932,789,2.932,838,2.647,862,2.932,898,3.944,920,3.517,921,5.446,922,4.859,923,4.859,924,3.364,925,3.364,926,3.364,927,3.364,928,3.364]],["title/entities/User.html",[17,0.642,438,2.403]],["body/entities/User.html",[0,0.315,3,0.064,4,0.064,5,0.064,7,1.861,9,0.105,10,0.591,11,1.239,17,0.57,18,0.477,21,0.013,23,0.403,24,0.362,27,0.591,29,0.072,30,0.006,31,0.006,38,1.466,52,1.746,79,0.744,95,2.891,97,1.206,98,0.744,130,3.467,171,2.175,172,2.277,174,1.515,176,4.82,178,6.146,244,0.929,261,1.629,327,3.002,343,3.121,344,2.389,392,4.429,438,2.131,443,5.059,444,5.059,715,1.149,760,2.654,772,1.34,839,3.508,840,5.603,878,1.962,884,2.591,895,2.818,910,3.121,917,3.886,919,3.886,929,1.962,930,4.458,931,4.458,932,4.458,933,4.458,934,4.653,935,2.251,936,2.251,937,2.251,938,2.251,939,6.624,940,2.251,941,5.081,942,3.58,943,6.429,944,2.251,945,3.58,946,2.251,947,3.58,948,2.251,949,3.58,950,2.251,951,2.251,952,2.251,953,3.58,954,2.251,955,2.251,956,2.251,957,2.251,958,5.081,959,2.251,960,3.58,961,5.907,962,3.58,963,5.546,964,2.251,965,2.251,966,1.962,967,1.962,968,1.962,969,2.251,970,2.251,971,3.58,972,1.962,973,4.458,974,1.962,975,2.251,976,3.58,977,2.251]],["title/controllers/UserController.html",[125,2.163,978,2.922]],["body/controllers/UserController.html",[0,0.235,3,0.094,4,0.094,5,0.094,9,0.154,12,0.726,17,0.528,18,0.436,20,0.627,21,0.013,22,0.627,23,0.329,24,0.573,27,0.681,29,0.105,30,0.008,31,0.008,38,1.566,50,1.167,60,1.506,62,0.891,64,1.425,65,0.861,113,2.051,125,1.778,127,1.778,130,3.17,134,1.975,187,2.611,220,4.193,225,2.611,230,2.234,232,2.892,236,3.033,309,2.401,344,3.683,405,2.095,418,3.482,486,2.611,487,2.892,497,2.892,567,2.611,595,2.611,600,1.975,602,2.401,812,3.786,898,2.095,900,4.585,904,2.611,905,2.401,978,3.482,979,2.892,980,5.411,981,4.193,982,4.193,983,3.318,984,2.892,985,4.811,986,3.318,987,2.892,988,3.318,989,3.318,990,2.892,991,3.318,992,3.318,993,3.318,994,3.318,995,3.318,996,3.318,997,2.892,998,2.892,999,2.892,1000,3.318,1001,3.318,1002,3.318,1003,3.318,1004,3.318,1005,4.811,1006,3.318,1007,3.318,1008,3.318,1009,3.318,1010,3.318]],["title/classes/UserDto.html",[0,0.286,913,2.718]],["body/classes/UserDto.html",[0,0.378,2,0.645,3,0.151,4,0.151,5,0.151,9,0.248,10,1.095,18,0.507,21,0.013,23,0.419,29,0.17,30,0.01,31,0.01,38,1.673,171,3.519,172,3.684,760,4.295,913,4.466,1011,4.656,1012,5.342,1013,5.342,1014,5.342]],["title/classes/UserListResponse.html",[0,0.286,675,2.922]],["body/classes/UserListResponse.html",[0,0.346,2,0.59,3,0.138,4,0.138,5,0.138,9,0.227,10,1.036,11,1.925,15,0.721,18,0.441,20,0.542,21,0.013,22,0.542,23,0.364,24,0.495,27,0.45,29,0.155,30,0.01,31,0.01,673,4.881,675,4.541,710,4.263,1015,6.038,1016,4.263,1017,6.927,1018,6.274,1019,6.274,1020,6.927,1021,4.891,1022,6.274]],["title/modules/UserModule.html",[136,2.276,145,2.718]],["body/modules/UserModule.html",[0,0.282,3,0.112,4,0.112,5,0.112,17,0.87,21,0.013,27,0.731,29,0.127,30,0.009,31,0.009,62,1.069,65,1.033,94,1.315,127,2.931,136,3.084,138,2.369,139,3.257,145,4.91,146,3.683,147,2.679,148,2.679,150,3.959,151,2.88,160,2.88,191,2.58,236,3.907,294,4.305,301,3.132,315,2.244,333,2.512,411,3.959,419,2.369,533,3.469,539,4.768,670,3.959,688,3.959,832,3.959,870,3.959,920,3.959,978,4.524,999,3.469,1023,3.98,1024,3.98,1025,3.98,1026,3.98,1027,6.252,1028,3.98,1029,3.98,1030,3.98,1031,5.471,1032,3.98]],["title/classes/UserRepositoryMock.html",[0,0.286,1033,3.177]],["body/classes/UserRepositoryMock.html",[0,0.405,2,0.69,3,0.162,4,0.162,5,0.162,17,0.91,21,0.013,27,0.636,29,0.182,30,0.011,31,0.011,82,2.738,98,1.889,161,4.984,715,3.532,1033,5.442,1034,4.984,1035,5.718,1036,5.718]],["title/classes/UserResponse.html",[0,0.286,673,2.548]],["body/classes/UserResponse.html",[0,0.293,2,0.5,3,0.117,4,0.117,5,0.117,9,0.193,10,0.928,11,2.225,12,1.753,15,0.829,18,0.503,20,0.459,21,0.013,22,0.459,23,0.416,24,0.419,27,0.381,29,0.132,30,0.009,31,0.009,38,1.693,171,3.491,344,3.668,673,3.549,760,4.26,934,5.698,967,3.61,968,3.61,1037,3.61,1038,4.142,1039,4.142,1040,4.142,1041,4.142,1042,4.142,1043,4.142]],["title/injectables/UserService.html",[179,1.433,236,2.163]],["body/injectables/UserService.html",[0,0.189,3,0.075,4,0.075,5,0.075,9,0.124,11,1.38,15,0.393,17,0.424,18,0.478,20,0.731,21,0.013,22,0.731,23,0.383,24,0.667,27,0.642,29,0.085,30,0.006,31,0.006,36,2.006,38,1.69,50,0.991,54,1.258,60,1.6,62,0.716,65,0.692,104,0.946,113,2.18,134,1.586,179,1.45,180,1.361,191,2.05,236,2.189,309,4.586,315,2.303,331,1.682,333,1.682,334,2.956,338,2.097,344,2.662,405,1.682,418,2.956,566,2.322,567,5.191,592,2.322,595,3.215,600,2.432,602,1.928,603,2.322,691,1.794,693,2.322,703,1.928,812,3.215,827,1.794,898,1.682,900,4.296,904,2.097,905,1.928,980,4.854,981,3.56,982,3.56,984,3.56,987,3.56,990,3.56,997,2.322,998,2.322,1044,2.322,1045,4.085,1046,4.085,1047,4.085,1048,2.665,1049,2.665,1050,2.665,1051,4.085,1052,2.665,1053,2.665,1054,4.085,1055,2.665,1056,4.085,1057,2.665,1058,2.665,1059,2.665,1060,4.085,1061,2.665,1062,4.968,1063,2.665,1064,2.665,1065,2.665,1066,2.665,1067,2.665]],["title/coverage.html",[1068,4.347]],["body/coverage.html",[0,0.563,1,1.029,5,0.043,6,1.332,7,1.814,8,2.458,17,0.54,21,0.013,23,0.089,30,0.004,31,0.004,32,0.964,33,1.332,34,2.458,42,1.106,43,2.7,44,1.202,45,1.467,46,2.7,54,0.471,64,0.656,75,1.106,76,1.332,77,2.7,95,0.713,100,0.745,125,2.149,126,1.106,128,1.332,132,0.964,179,2.036,181,1.332,185,1.106,186,1.332,191,2.27,195,1.029,198,0.78,211,1.029,214,1.106,218,0.909,226,1.106,230,1.029,234,1.029,236,0.819,238,0.964,281,1.029,292,1.106,302,1.332,315,1.467,328,0.964,331,0.964,333,1.642,335,1.029,366,1.029,367,1.332,372,1.029,373,1.332,374,1.106,375,1.202,376,1.332,383,1.106,384,1.332,405,0.964,406,1.332,407,2.047,411,1.106,412,1.332,413,2.458,424,1.202,425,1.332,432,1.332,438,2.022,439,1.332,451,1.106,452,1.332,484,1.642,490,0.964,492,1.029,495,1.029,522,1.332,532,1.106,535,1.106,538,1.106,540,1.106,541,1.642,542,1.106,543,1.642,547,1.106,548,1.202,549,1.106,550,1.106,551,1.202,552,1.332,553,1.332,561,1.332,562,1.332,565,1.332,587,1.029,591,1.029,594,1.029,597,1.029,598,1.029,600,0.909,615,2.458,616,2.458,632,2.458,633,2.047,665,1.332,670,1.106,671,2.047,673,0.964,675,1.106,688,1.106,689,1.332,691,1.029,701,2.047,702,1.332,708,1.332,712,2.047,713,1.332,717,1.332,718,1.332,719,1.332,739,1.202,740,1.332,747,1.332,749,1.332,750,1.332,759,1.332,766,1.332,787,6.522,798,1.332,799,1.332,803,1.029,804,1.332,805,1.332,813,1.332,827,1.029,828,1.332,829,2.047,832,1.106,833,1.332,834,2.047,842,1.751,844,1.332,845,1.332,846,1.332,848,1.029,849,1.332,855,1.332,867,1.332,870,1.106,871,1.332,880,2.047,881,1.332,890,1.332,896,1.332,897,1.332,898,0.964,899,1.332,900,0.964,906,1.332,907,1.332,913,1.029,920,1.106,921,1.332,929,1.332,978,1.106,979,1.332,1011,1.332,1015,1.332,1016,1.332,1033,1.202,1034,1.332,1037,1.332,1044,1.332,1068,1.202,1069,1.528,1070,1.528,1071,1.528,1072,2.601,1073,1.528,1074,2.601,1075,7.076,1076,7.403,1077,7.403,1078,4.497,1079,2.601,1080,1.528,1081,1.332,1082,1.528,1083,1.332,1084,1.332,1085,1.332,1086,6.929,1087,1.332,1088,1.332,1089,4.793,1090,1.332,1091,1.332,1092,1.332,1093,1.332,1094,1.332,1095,1.332,1096,1.332,1097,1.332,1098,4.552,1099,1.332,1100,1.332,1101,1.332,1102,1.332,1103,1.332,1104,1.332,1105,1.332,1106,1.332,1107,1.332,1108,1.528,1109,1.528]],["title/dependencies.html",[139,2.893,1110,2.932]],["body/dependencies.html",[0,0.406,21,0.013,30,0.009,31,0.009,62,1.147,65,1.109,94,1.412,98,1.412,139,2.544,155,3.363,157,3.093,233,2.877,258,3.363,285,2.409,291,3.363,327,2.877,727,4.693,728,4.518,756,5.004,772,2.544,915,3.724,916,3.724,972,3.724,1111,4.273,1112,4.273,1113,6.933,1114,4.273,1115,4.273,1116,5.742,1117,4.273,1118,4.273,1119,4.273,1120,4.273,1121,5.742,1122,4.273,1123,5.742,1124,4.273,1125,4.273,1126,4.273,1127,4.273,1128,4.273,1129,4.273,1130,4.273,1131,4.273,1132,4.273,1133,4.273,1134,4.273,1135,4.273,1136,4.273,1137,4.273,1138,4.273,1139,4.273,1140,4.273,1141,4.273,1142,4.273,1143,4.273,1144,4.273,1145,4.273,1146,4.273,1147,4.273,1148,4.273,1149,4.273]],["title/miscellaneous/enumerations.html",[1150,2.124,1151,4.235]],["body/miscellaneous/enumerations.html",[9,0.255,17,1.073,21,0.012,30,0.011,31,0.011,53,3.613,116,3.148,541,3.463,643,5.877,934,4.881,1150,3.463,1151,4.782,1152,5.486,1153,6.744,1154,6.744,1155,5.486,1156,6.744,1157,5.486,1158,6.744,1159,5.486,1160,5.486,1161,5.486,1162,5.486,1163,5.486,1164,5.486,1165,5.486,1166,5.486]],["title/miscellaneous/functions.html",[1150,2.124,1167,4.235]],["body/miscellaneous/functions.html",[9,0.29,21,0.011,30,0.011,31,0.011,1081,5.444,1083,6.726,1150,3.943,1167,5.444,1168,6.246]],["title/index.html",[9,0.156,1169,3.364,1170,3.364]],["body/index.html",[4,0.123,21,0.013,30,0.009,31,0.009,82,1.607,797,3.804,1068,3.435,1171,4.365,1172,4.365,1173,5.824,1174,4.365,1175,4.365,1176,4.365,1177,4.365,1178,4.365,1179,3.804,1180,6.554,1181,4.365,1182,4.365,1183,4.365,1184,7.651,1185,4.365,1186,4.365,1187,4.365,1188,7.494,1189,4.365,1190,4.365,1191,5.824,1192,4.365,1193,4.365,1194,4.365,1195,4.365,1196,5.824,1197,5.824,1198,4.365,1199,4.365,1200,4.365,1201,5.824,1202,5.824,1203,4.365,1204,4.365,1205,4.365,1206,4.365,1207,4.365,1208,3.804,1209,4.365,1210,4.365,1211,4.365,1212,4.365,1213,4.365,1214,4.365,1215,4.365,1216,4.365,1217,4.365,1218,4.365,1219,3.804,1220,4.365,1221,4.365,1222,4.365,1223,4.365,1224,4.365,1225,4.365,1226,3.804]],["title/modules.html",[138,3.289]],["body/modules.html",[21,0.011,30,0.011,31,0.011,137,4.238,138,3.486,143,3.942,144,3.942,145,3.942,1208,6.786,1227,7.787,1228,7.787,1229,7.787]],["title/overview.html",[1230,4.815]],["body/overview.html",[2,0.537,21,0.013,30,0.009,31,0.009,127,2.382,132,4.175,137,5.773,138,2.646,139,3.509,140,3.874,141,3.874,142,3.874,143,5.37,144,4.934,145,4.934,146,3.969,147,2.993,148,2.993,174,2.993,180,2.27,218,4.193,236,3.774,238,4.175,278,3.874,279,3.874,280,3.874,281,4.453,490,4.175,526,3.874,527,3.874,843,3.498,1230,3.874,1231,5.895,1232,4.445,1233,4.445,1234,4.445,1235,3.874]],["title/properties.html",[10,0.802,1110,2.932]],["body/properties.html",[10,1.015,21,0.013,30,0.011,31,0.011,1179,5.361,1219,5.361,1226,5.361,1236,6.152,1237,6.152,1238,6.152]],["title/miscellaneous/variables.html",[1150,2.124,1239,4.235]],["body/miscellaneous/variables.html",[3,0.073,9,0.12,17,0.872,21,0.013,23,0.434,30,0.006,31,0.006,38,0.547,52,3.768,53,4.139,54,1.929,64,1.714,113,0.854,171,2.378,172,2.489,344,2.612,760,2.902,913,2.687,934,3.528,966,4.249,974,5.163,1084,2.253,1085,3.479,1087,2.253,1088,3.479,1089,2.253,1090,3.479,1091,3.479,1092,3.479,1093,3.479,1094,3.479,1095,3.479,1096,3.479,1097,3.479,1098,2.253,1099,3.479,1100,3.479,1101,3.479,1102,3.479,1103,3.479,1104,3.479,1105,4.249,1106,2.253,1107,3.479,1150,1.632,1235,2.253,1239,2.253,1240,2.585,1241,2.585,1242,6.74,1243,2.585,1244,6.526,1245,2.585,1246,3.991,1247,2.585,1248,2.585,1249,2.585,1250,2.585,1251,2.585,1252,2.585,1253,2.585,1254,2.585,1255,2.585,1256,2.585,1257,2.585,1258,2.585,1259,2.585,1260,2.585,1261,2.585,1262,2.585,1263,2.585,1264,2.585,1265,2.585,1266,7.064,1267,2.585,1268,2.585,1269,2.585,1270,2.585,1271,2.585,1272,2.585,1273,2.585,1274,3.991,1275,4.875,1276,4.875,1277,3.991,1278,3.991,1279,2.585,1280,2.585,1281,2.585]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"modules/UserModule.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":787,"title":{},"body":{"classes/RegisterHandler.html":{},"classes/UpdateUserHandler.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1237,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1128,"title":{},"body":{"dependencies.html":{}}}],["0.2.45",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1127,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1135,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1137,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}],["1.0.34",{"_index":1125,"title":{},"body":{"dependencies.html":{}}}],["1.1.19",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["1.11.0",{"_index":1134,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["1.4.2",{"_index":1122,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1129,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":878,"title":{},"body":{"classes/SetCurrentRefreshTokenHandler.html":{},"entities/User.html":{}}}],["16.0.0",{"_index":1130,"title":{},"body":{"dependencies.html":{}}}],["172.17.0.2",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["2",{"_index":1235,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["20",{"_index":919,"title":{},"body":{"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["20)@isnotempty",{"_index":911,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["20)@isnotempty()@column({unique",{"_index":955,"title":{},"body":{"entities/User.html":{}}}],["23505",{"_index":1165,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3",{"_index":1232,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":1124,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":1231,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1136,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":1234,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":1126,"title":{},"body":{"dependencies.html":{}}}],["500000",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5432",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["7.2.0",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["8.7.3",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1233,"title":{},"body":{"overview.html":{}}}],["acceptfriendshiprequest",{"_index":453,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["acceptfriendshiprequest(commandargs",{"_index":569,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["acceptfriendshiprequest(request",{"_index":461,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["acceptfriendshiprequestcommand",{"_index":1,"title":{"classes/AcceptFriendshipRequestCommand.html":{}},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"injectables/FriendshipService.html":{},"coverage.html":{}}}],["acceptfriendshiprequestcommand(friendone",{"_index":613,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["acceptfriendshiprequestevent",{"_index":32,"title":{"classes/AcceptFriendshipRequestEvent.html":{}},"body":{"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"coverage.html":{}}}],["acceptfriendshiprequesteventhandler",{"_index":42,"title":{"classes/AcceptFriendshipRequestEventHandler.html":{}},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"modules/FriendshipModule.html":{},"coverage.html":{}}}],["acceptfriendshiprequesthandler",{"_index":75,"title":{"classes/AcceptFriendshipRequestHandler.html":{}},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"modules/FriendshipModule.html":{},"coverage.html":{}}}],["accesstokencookie",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["account",{"_index":795,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["age=${process.env.jwt_access_token_expiration_time",{"_index":359,"title":{},"body":{"classes/AuthService.html":{}}}],["age=${process.env.jwt_refresh_token_expiration_time",{"_index":363,"title":{},"body":{"classes/AuthService.html":{}}}],["age=0",{"_index":365,"title":{},"body":{"classes/AuthService.html":{}}}],["amazing",{"_index":1209,"title":{},"body":{"index.html":{}}}],["andwhere('sender.id=:senderid",{"_index":399,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{}}}],["api.log",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/auth/auth.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["api/friendship/domain/entities/friendship",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["api/friendship/domain/entities/friendship.entity",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["api/friendship/friendship.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["api/user/domain/entities/user.entity",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"classes/UserRepositoryMock.html":{}}}],["api/user/user.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":1186,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":133,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":126,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1178,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":137,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":132,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":79,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{}}}],["auth",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":288,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["auth.guard.ts",{"_index":713,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/guards/jwt",{"_index":497,"title":{},"body":{"controllers/FriendshipController.html":{},"controllers/UserController.html":{}}}],["auth/interface/request",{"_index":489,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["authcontroller",{"_index":185,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(@req",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticate(request",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["authentication",{"_index":364,"title":{},"body":{"classes/AuthService.html":{}}}],["authentication=${token",{"_index":355,"title":{},"body":{"classes/AuthService.html":{}}}],["authenticationservice",{"_index":753,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["authguard",{"_index":714,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/LocalAuthenticationGuard.html":{}}}],["authguard('jwt",{"_index":716,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{}}}],["authguard('local",{"_index":748,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{}}}],["authmodule",{"_index":143,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1219,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":218,"title":{"classes/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"injectables/FriendshipService.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{}}}],["backers",{"_index":1210,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":960,"title":{},"body":{"entities/User.html":{}}}],["bcrypt",{"_index":327,"title":{},"body":{"classes/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"entities/User.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":697,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["bcrypt.compare(plaintextpassword",{"_index":350,"title":{},"body":{"classes/AuthService.html":{}}}],["bcrypt.hash",{"_index":876,"title":{},"body":{"classes/SetCurrentRefreshTokenHandler.html":{}}}],["bcrypt.hash(password",{"_index":977,"title":{},"body":{"entities/User.html":{}}}],["become",{"_index":71,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{}}}],["beforeinsert",{"_index":962,"title":{},"body":{"entities/User.html":{}}}],["befriended",{"_index":1162,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["billy",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["billy2",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["bonne",{"_index":121,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["bootstrap",{"_index":1083,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1229,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1227,"title":{},"body":{"modules.html":{}}}],["bsn",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":1174,"title":{},"body":{"index.html":{}}}],["cancel",{"_index":382,"title":{},"body":{"classes/CancelFriendshipRequestEventHandler.html":{}}}],["cancelfriendshiprequest",{"_index":454,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["cancelfriendshiprequest(commandargs",{"_index":572,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["cancelfriendshiprequest(request",{"_index":464,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["cancelfriendshiprequestcommand",{"_index":366,"title":{"classes/CancelFriendshipRequestCommand.html":{}},"body":{"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestHandler.html":{},"injectables/FriendshipService.html":{},"coverage.html":{}}}],["cancelfriendshiprequestevent",{"_index":372,"title":{"classes/CancelFriendshipRequestEvent.html":{}},"body":{"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"coverage.html":{}}}],["cancelfriendshiprequestevent(command.sender",{"_index":402,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{}}}],["cancelfriendshiprequesteventhandler",{"_index":374,"title":{"classes/CancelFriendshipRequestEventHandler.html":{}},"body":{"classes/CancelFriendshipRequestEventHandler.html":{},"modules/FriendshipModule.html":{},"coverage.html":{}}}],["cancelfriendshiprequesthandler",{"_index":383,"title":{"classes/CancelFriendshipRequestHandler.html":{}},"body":{"classes/CancelFriendshipRequestHandler.html":{},"modules/FriendshipModule.html":{},"coverage.html":{}}}],["cascade",{"_index":444,"title":{},"body":{"entities/Friendship.html":{},"entities/FriendshipRequest.html":{},"entities/User.html":{}}}],["case",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":115,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["class",{"_index":0,"title":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"classes/FriendshipDto.html":{},"classes/FriendshipRequestDto.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{}},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"modules/UserModule.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["class.exception",{"_index":775,"title":{},"body":{"classes/RegisterHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"classes/FriendshipDto.html":{},"classes/FriendshipRequestDto.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_friendshipmodule",{"_index":526,"title":{},"body":{"modules/FriendshipModule.html":{},"overview.html":{}}}],["cluster_friendshipmodule_providers",{"_index":527,"title":{},"body":{"modules/FriendshipModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1023,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1024,"title":{},"body":{"modules/UserModule.html":{}}}],["code.enum.ts",{"_index":1156,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column",{"_index":961,"title":{},"body":{"entities/User.html":{}}}],["column({nullable",{"_index":935,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":957,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":951,"title":{},"body":{"entities/User.html":{}}}],["command",{"_index":88,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["command.email",{"_index":779,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command.friendone",{"_index":108,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["command.friendone.id",{"_index":111,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{}}}],["command.friendtwo",{"_index":109,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["command.friendtwo.id",{"_index":112,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{}}}],["command.password",{"_index":781,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command.refreshtoken",{"_index":877,"title":{},"body":{"classes/SetCurrentRefreshTokenHandler.html":{}}}],["command.sender",{"_index":400,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["command.user",{"_index":862,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["command.user.id",{"_index":864,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{}}}],["command.userid",{"_index":397,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["command.username",{"_index":783,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/accept",{"_index":91,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{}}}],["command/cancel",{"_index":389,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{}}}],["command/delete",{"_index":417,"title":{},"body":{"classes/DeleteUserHandler.html":{}}}],["command/register.command",{"_index":770,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["command/remove",{"_index":815,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{}}}],["command/send",{"_index":859,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{}}}],["command/set",{"_index":874,"title":{},"body":{"classes/SetCurrentRefreshTokenHandler.html":{}}}],["command/update",{"_index":925,"title":{},"body":{"classes/UpdateUserHandler.html":{}}}],["commandargs",{"_index":571,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["commandargs.senderid",{"_index":612,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["commandargs.userid",{"_index":611,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["commandbus",{"_index":309,"title":{},"body":{"classes/AuthService.html":{},"injectables/FriendshipService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["commandhandler",{"_index":90,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["commandhandler(acceptfriendshiprequestcommand",{"_index":102,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{}}}],["commandhandler(cancelfriendshiprequestcommand",{"_index":390,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{}}}],["commandhandler(deleteusercommand",{"_index":420,"title":{},"body":{"classes/DeleteUserHandler.html":{}}}],["commandhandler(registercommand",{"_index":776,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["commandhandler(removefriendshipcommand",{"_index":816,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["commandhandler(removerefreshtokencommand",{"_index":837,"title":{},"body":{"classes/RemoveRefreshTokenHandler.html":{}}}],["commandhandler(sendfriendshiprequestcommand",{"_index":860,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{}}}],["commandhandler(setcurrentrefreshtokencommand",{"_index":875,"title":{},"body":{"classes/SetCurrentRefreshTokenHandler.html":{}}}],["commandhandler(updateusercommand",{"_index":927,"title":{},"body":{"classes/UpdateUserHandler.html":{}}}],["compodoc/compodoc",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["config/winston",{"_index":427,"title":{},"body":{"classes/ErrorEventHandler.html":{}}}],["configmodule",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configservice",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":106,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/ErrorEventHandler.html":{},"injectables/FriendshipService.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorsEvent.html":{},"classes/FriendshipDto.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserHandler.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["constructor(authenticationservice",{"_index":751,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(commandbus",{"_index":566,"title":{},"body":{"injectables/FriendshipService.html":{},"injectables/UserService.html":{}}}],["constructor(currentuser",{"_index":666,"title":{},"body":{"classes/GetStatusFriendshipQuery.html":{}}}],["constructor(friendone",{"_index":16,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/RemoveFriendshipCommand.html":{}}}],["constructor(friendrequestrepository",{"_index":385,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["constructor(friendshiprepository",{"_index":81,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["constructor(friendshiprequestrepository",{"_index":618,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{}}}],["constructor(id",{"_index":1038,"title":{},"body":{"classes/UserResponse.html":{}}}],["constructor(localisation",{"_index":434,"title":{},"body":{"classes/ErrorsEvent.html":{}}}],["constructor(private",{"_index":134,"title":{},"body":{"controllers/AppController.html":{},"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":371,"title":{},"body":{"classes/CancelFriendshipRequestCommand.html":{},"classes/DeleteUserCommand.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetUserQuery.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/SendFriendshipRequestCommand.html":{}}}],["constructor(refreshtoken",{"_index":704,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["constructor(sender",{"_index":369,"title":{},"body":{"classes/CancelFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestCommand.html":{}}}],["constructor(senderid",{"_index":37,"title":{},"body":{"classes/AcceptFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/FriendshipDto.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/SendFriendshipRequestEvent.html":{}}}],["constructor(userid",{"_index":408,"title":{},"body":{"classes/DeleteUserCommand.html":{},"classes/FriendshipRequestDto.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetUserQuery.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/UpdateUserCommand.html":{}}}],["constructor(username",{"_index":761,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["constructor(userrepository",{"_index":308,"title":{},"body":{"classes/AuthService.html":{},"classes/DeleteUserHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["constructor(users",{"_index":1018,"title":{},"body":{"classes/UserListResponse.html":{}}}],["constructor(userservice",{"_index":721,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["contextcreator",{"_index":993,"title":{},"body":{"controllers/UserController.html":{}}}],["controller",{"_index":125,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FriendshipController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FriendshipController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('friendship",{"_index":498,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["controller('user",{"_index":1000,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":127,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/FriendshipController.html":{},"modules/FriendshipModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"dependencies.html":{}}}],["coverage",{"_index":1068,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cqrs/command/accept",{"_index":589,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["cqrs/command/cancel",{"_index":590,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["cqrs/command/delete",{"_index":998,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cqrs/command/register.command",{"_index":336,"title":{},"body":{"classes/AuthService.html":{}}}],["cqrs/command/remove",{"_index":592,"title":{},"body":{"injectables/FriendshipService.html":{},"injectables/UserService.html":{}}}],["cqrs/command/send",{"_index":588,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["cqrs/command/set",{"_index":1059,"title":{},"body":{"injectables/UserService.html":{}}}],["cqrs/command/update",{"_index":997,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cqrs/event",{"_index":544,"title":{},"body":{"modules/FriendshipModule.html":{}}}],["cqrs/handler/accept",{"_index":529,"title":{},"body":{"modules/FriendshipModule.html":{}}}],["cqrs/handler/cancel",{"_index":531,"title":{},"body":{"modules/FriendshipModule.html":{}}}],["cqrs/handler/delete",{"_index":1028,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/get",{"_index":539,"title":{},"body":{"modules/FriendshipModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/register.handler",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{}}}],["cqrs/handler/remove",{"_index":533,"title":{},"body":{"modules/FriendshipModule.html":{},"modules/UserModule.html":{}}}],["cqrs/handler/send",{"_index":536,"title":{},"body":{"modules/FriendshipModule.html":{}}}],["cqrs/handler/set",{"_index":1032,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/handler/update",{"_index":1029,"title":{},"body":{"modules/UserModule.html":{}}}],["cqrs/query/get",{"_index":595,"title":{},"body":{"injectables/FriendshipService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["cqrsmodule",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{}}}],["createdat",{"_index":554,"title":{},"body":{"entities/FriendshipRequest.html":{}}}],["createdatecolumn",{"_index":556,"title":{},"body":{"entities/FriendshipRequest.html":{}}}],["createquerybuilder",{"_index":394,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["creator",{"_index":995,"title":{},"body":{"controllers/UserController.html":{}}}],["credentials",{"_index":347,"title":{},"body":{"classes/AuthService.html":{}}}],["current",{"_index":333,"title":{},"body":{"classes/AuthService.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["currenthashedrefreshtoken",{"_index":839,"title":{},"body":{"classes/RemoveRefreshTokenHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"entities/User.html":{}}}],["currentuser",{"_index":652,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{}}}],["d'user",{"_index":123,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["database",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":555,"title":{},"body":{"entities/FriendshipRequest.html":{}}}],["dd/mm/yyyy",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"entities/FriendshipRequest.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":52,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/DeleteUserHandler.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":486,"title":{},"body":{"controllers/FriendshipController.html":{},"classes/RegisterHandler.html":{},"controllers/UserController.html":{}}}],["delete(':id",{"_index":1008,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id')@useguards(jwtauthenticationguard",{"_index":988,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(':id/cancel",{"_index":515,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["delete(':id/reject",{"_index":517,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["delete(':id/remove",{"_index":519,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["deleted",{"_index":423,"title":{},"body":{"classes/DeleteUserHandler.html":{}}}],["deletedatecolumn",{"_index":965,"title":{},"body":{"entities/User.html":{}}}],["deleteusercommand",{"_index":405,"title":{"classes/DeleteUserCommand.html":{}},"body":{"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["deleteusercommand(id",{"_index":1064,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuserhandler",{"_index":411,"title":{"classes/DeleteUserHandler.html":{}},"body":{"classes/DeleteUserHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["dependencies",{"_index":139,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":1179,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":1187,"title":{},"body":{"index.html":{}}}],["dirname",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["domain/dto/friendship",{"_index":493,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["domain/dto/friendship.dto",{"_index":496,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["domain/dto/update",{"_index":904,"title":{},"body":{"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["domain/entities/friendship",{"_index":96,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"modules/FriendshipModule.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["domain/entities/friendship.entity",{"_index":99,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"modules/FriendshipModule.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["domain/entities/user.entity",{"_index":419,"title":{},"body":{"classes/DeleteUserHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"modules/UserModule.html":{}}}],["domain/enum/friendship",{"_index":644,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["domain/response/user",{"_index":676,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["domain/response/user.response",{"_index":674,"title":{},"body":{"classes/GetUserHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["dotenv",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"dependencies.html":{}}}],["dto/sign",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{}}}],["e2e",{"_index":1198,"title":{},"body":{"index.html":{}}}],["eager",{"_index":558,"title":{},"body":{"entities/FriendshipRequest.html":{}}}],["efficient",{"_index":1175,"title":{},"body":{"index.html":{}}}],["email",{"_index":760,"title":{},"body":{"classes/RegisterCommand.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"entities/Friendship.html":{},"entities/FriendshipRequest.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":438,"title":{"entities/Friendship.html":{},"entities/FriendshipRequest.html":{},"entities/User.html":{}},"body":{"entities/Friendship.html":{},"entities/FriendshipRequest.html":{},"entities/User.html":{},"coverage.html":{}}}],["entityrepository",{"_index":1035,"title":{},"body":{"classes/UserRepositoryMock.html":{}}}],["entityrepository(user",{"_index":1036,"title":{},"body":{"classes/UserRepositoryMock.html":{}}}],["enum",{"_index":958,"title":{},"body":{"entities/User.html":{}}}],["enum/user",{"_index":967,"title":{},"body":{"entities/User.html":{},"classes/UserResponse.html":{}}}],["enumerations",{"_index":1151,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["envoyer",{"_index":119,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["err",{"_index":784,"title":{},"body":{"classes/RegisterHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["err.length",{"_index":786,"title":{},"body":{"classes/RegisterHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["erreur",{"_index":122,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["error",{"_index":116,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/ErrorsEvent.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"miscellaneous/enumerations.html":{}}}],["erroreventhandler",{"_index":424,"title":{"classes/ErrorEventHandler.html":{}},"body":{"classes/ErrorEventHandler.html":{},"coverage.html":{}}}],["errorsevent",{"_index":100,"title":{"classes/ErrorsEvent.html":{}},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"coverage.html":{}}}],["errorsevent('acceptfriendshiprequesthandler",{"_index":117,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{}}}],["errorsevent('cancelfriendshiprequesthandler",{"_index":404,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{}}}],["errorsevent('getuserifrefreshtokenmatcheshandler",{"_index":700,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["errorsevent('removefriendshiphandler",{"_index":826,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["errorsevent('removerefreshtokenhandler",{"_index":841,"title":{},"body":{"classes/RemoveRefreshTokenHandler.html":{}}}],["errorsevent('sendfriendshiprequesthandler",{"_index":866,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{}}}],["errorsevent('setcurrentrefreshtokenhandler",{"_index":879,"title":{},"body":{"classes/SetCurrentRefreshTokenHandler.html":{}}}],["event",{"_index":59,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["event.handler",{"_index":546,"title":{},"body":{"modules/FriendshipModule.html":{}}}],["event.handler.ts",{"_index":376,"title":{},"body":{"classes/CancelFriendshipRequestEventHandler.html":{},"coverage.html":{}}}],["event.handler.ts:10",{"_index":378,"title":{},"body":{"classes/CancelFriendshipRequestEventHandler.html":{}}}],["event.handler.ts:12",{"_index":379,"title":{},"body":{"classes/CancelFriendshipRequestEventHandler.html":{}}}],["event.senderid",{"_index":70,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["event.userid",{"_index":73,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["event/accept",{"_index":63,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["event/cancel",{"_index":380,"title":{},"body":{"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{}}}],["event/remove",{"_index":810,"title":{},"body":{"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["event/send",{"_index":853,"title":{},"body":{"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["eventbus",{"_index":83,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{}}}],["eventshandler",{"_index":61,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["eventshandler(acceptfriendshiprequestevent",{"_index":68,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{}}}],["eventshandler(cancelfriendshiprequestevent",{"_index":381,"title":{},"body":{"classes/CancelFriendshipRequestEventHandler.html":{}}}],["eventshandler(errorsevent",{"_index":428,"title":{},"body":{"classes/ErrorEventHandler.html":{}}}],["eventshandler(removefriendshipevent",{"_index":811,"title":{},"body":{"classes/RemoveFriendshipEventHandler.html":{}}}],["eventshandler(sendfriendshiprequestevent",{"_index":854,"title":{},"body":{"classes/SendFriendshipRequestEventHandler.html":{}}}],["exclude",{"_index":971,"title":{},"body":{"entities/User.html":{}}}],["execute",{"_index":80,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["execute(command",{"_index":86,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["execute(query",{"_index":621,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["expiresin",{"_index":299,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{}}}],["export",{"_index":29,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"modules/UserModule.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/RequestUser.html":{},"dependencies.html":{}}}],["extends",{"_index":715,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/RequestUser.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserRepositoryMock.html":{}}}],["extractjwt",{"_index":729,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":732,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["false",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"entities/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"modules/UserModule.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["filename",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["findall",{"_index":980,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":981,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":1002,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(id",{"_index":984,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["format",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":1173,"title":{},"body":{"index.html":{}}}],["friend",{"_index":72,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{}}}],["friendone",{"_index":13,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"entities/Friendship.html":{},"injectables/FriendshipService.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["friendoneid",{"_index":819,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["friendrequest",{"_index":392,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"entities/User.html":{}}}],["friendrequest.sender",{"_index":953,"title":{},"body":{"entities/User.html":{}}}],["friendrequest.user",{"_index":942,"title":{},"body":{"entities/User.html":{}}}],["friendrequestrepository",{"_index":387,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["friendrequests",{"_index":930,"title":{},"body":{"entities/User.html":{}}}],["friendship",{"_index":7,"title":{"entities/Friendship.html":{}},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"modules/AppModule.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"modules/FriendshipModule.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"entities/User.html":{},"coverage.html":{}}}],["friendship.command",{"_index":593,"title":{},"body":{"injectables/FriendshipService.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["friendship.command.ts",{"_index":799,"title":{},"body":{"classes/RemoveFriendshipCommand.html":{},"coverage.html":{}}}],["friendship.command.ts:1",{"_index":800,"title":{},"body":{"classes/RemoveFriendshipCommand.html":{}}}],["friendship.command.ts:3",{"_index":801,"title":{},"body":{"classes/RemoveFriendshipCommand.html":{}}}],["friendship.command.ts:4",{"_index":802,"title":{},"body":{"classes/RemoveFriendshipCommand.html":{}}}],["friendship.controller",{"_index":537,"title":{},"body":{"modules/FriendshipModule.html":{}}}],["friendship.event",{"_index":549,"title":{},"body":{"modules/FriendshipModule.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"coverage.html":{}}}],["friendship.event.ts",{"_index":805,"title":{},"body":{"classes/RemoveFriendshipEvent.html":{},"coverage.html":{}}}],["friendship.event.ts:3",{"_index":806,"title":{},"body":{"classes/RemoveFriendshipEvent.html":{}}}],["friendship.event.ts:5",{"_index":807,"title":{},"body":{"classes/RemoveFriendshipEvent.html":{}}}],["friendship.event.ts:6",{"_index":808,"title":{},"body":{"classes/RemoveFriendshipEvent.html":{}}}],["friendship.friendone",{"_index":945,"title":{},"body":{"entities/User.html":{}}}],["friendship.friendtwo",{"_index":947,"title":{},"body":{"entities/User.html":{}}}],["friendship.handler",{"_index":534,"title":{},"body":{"modules/FriendshipModule.html":{}}}],["friendship.handler.ts",{"_index":616,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"coverage.html":{}}}],["friendship.handler.ts:10",{"_index":619,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{}}}],["friendship.handler.ts:12",{"_index":641,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["friendship.handler.ts:16",{"_index":622,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{}}}],["friendship.handler.ts:19",{"_index":814,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["friendship.handler.ts:20",{"_index":642,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["friendship.query",{"_index":599,"title":{},"body":{"injectables/FriendshipService.html":{},"classes/GetStatusFriendshipHandler.html":{}}}],["friendship.query.ts",{"_index":665,"title":{},"body":{"classes/GetStatusFriendshipQuery.html":{},"coverage.html":{}}}],["friendship.query.ts:3",{"_index":667,"title":{},"body":{"classes/GetStatusFriendshipQuery.html":{}}}],["friendship.query.ts:5",{"_index":668,"title":{},"body":{"classes/GetStatusFriendshipQuery.html":{}}}],["friendship.query.ts:6",{"_index":669,"title":{},"body":{"classes/GetStatusFriendshipQuery.html":{}}}],["friendship.service",{"_index":491,"title":{},"body":{"controllers/FriendshipController.html":{},"modules/FriendshipModule.html":{}}}],["friendship/domain/entities/friendship",{"_index":969,"title":{},"body":{"entities/User.html":{}}}],["friendship/domain/entities/friendship.entity",{"_index":970,"title":{},"body":{"entities/User.html":{}}}],["friendshipcontroller",{"_index":451,"title":{"controllers/FriendshipController.html":{}},"body":{"controllers/FriendshipController.html":{},"modules/FriendshipModule.html":{},"coverage.html":{}}}],["friendshipdto",{"_index":495,"title":{"classes/FriendshipDto.html":{}},"body":{"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"injectables/FriendshipService.html":{},"coverage.html":{}}}],["friendshipdto(request.user.id",{"_index":510,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["friendshipmodule",{"_index":144,"title":{"modules/FriendshipModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FriendshipModule.html":{},"modules.html":{},"overview.html":{}}}],["friendshiprepository",{"_index":85,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["friendshiprequest",{"_index":95,"title":{"entities/FriendshipRequest.html":{}},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"modules/AppModule.html":{},"classes/CancelFriendshipRequestHandler.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"entities/User.html":{},"coverage.html":{}}}],["friendshiprequestdto",{"_index":492,"title":{"classes/FriendshipRequestDto.html":{}},"body":{"controllers/FriendshipController.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"coverage.html":{}}}],["friendshiprequestdto(request.user.id",{"_index":502,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["friendshiprequestrepository",{"_index":620,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{}}}],["friendshipservice",{"_index":490,"title":{"injectables/FriendshipService.html":{}},"body":{"controllers/FriendshipController.html":{},"modules/FriendshipModule.html":{},"injectables/FriendshipService.html":{},"coverage.html":{},"overview.html":{}}}],["friendshipstatus",{"_index":643,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{},"miscellaneous/enumerations.html":{}}}],["friendshipstatus.befriended",{"_index":657,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["friendshipstatus.none",{"_index":664,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["friendshipstatus.pending",{"_index":660,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["friendshipstatus.received",{"_index":663,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["friendsone",{"_index":931,"title":{},"body":{"entities/User.html":{}}}],["friendstwo",{"_index":932,"title":{},"body":{"entities/User.html":{}}}],["friendtwo",{"_index":14,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"entities/Friendship.html":{},"injectables/FriendshipService.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["friendtwo.id=:currentuser",{"_index":656,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["friendtwo.id=:friendoneid",{"_index":822,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["friendtwo.id=:friendtwoid",{"_index":818,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["friendtwo.id=:userid",{"_index":651,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["friendtwoid",{"_index":820,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["function",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1167,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":985,"title":{},"body":{"controllers/UserController.html":{}}}],["get(':id/friendship",{"_index":506,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["get('actual",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('received",{"_index":503,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["get('refresh",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('sent",{"_index":499,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["get(key",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getcookieforlogout",{"_index":303,"title":{},"body":{"classes/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken",{"_index":304,"title":{},"body":{"classes/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken(userid",{"_index":313,"title":{},"body":{"classes/AuthService.html":{}}}],["getcookiewithjwttoken",{"_index":305,"title":{},"body":{"classes/AuthService.html":{}}}],["getcookiewithjwttoken(userid",{"_index":316,"title":{},"body":{"classes/AuthService.html":{}}}],["getcurrentuser",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":129,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmany",{"_index":631,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{}}}],["getone",{"_index":401,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["getreceivedfriendshiphandler",{"_index":540,"title":{"classes/GetReceivedFriendshipHandler.html":{}},"body":{"modules/FriendshipModule.html":{},"classes/GetReceivedFriendshipHandler.html":{},"coverage.html":{}}}],["getreceivedfriendshiprequestquery",{"_index":597,"title":{"classes/GetReceivedFriendshipRequestQuery.html":{}},"body":{"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"coverage.html":{}}}],["getreceivedfriendshiprequestquery(queryars.userid",{"_index":605,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["getsentfriendshiprequesthandler",{"_index":542,"title":{"classes/GetSentFriendshipRequestHandler.html":{}},"body":{"modules/FriendshipModule.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"coverage.html":{}}}],["getsentfriendshiprequestquery",{"_index":594,"title":{"classes/GetSentFriendshipRequestQuery.html":{}},"body":{"injectables/FriendshipService.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"coverage.html":{}}}],["getsentfriendshiprequestquery(queryars.userid",{"_index":604,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["getstatusfriendshiphandler",{"_index":538,"title":{"classes/GetStatusFriendshipHandler.html":{}},"body":{"modules/FriendshipModule.html":{},"classes/GetStatusFriendshipHandler.html":{},"coverage.html":{}}}],["getstatusfriendshipquery",{"_index":598,"title":{"classes/GetStatusFriendshipQuery.html":{}},"body":{"injectables/FriendshipService.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"coverage.html":{}}}],["getstatusfriendshipquery(queryars.senderid",{"_index":606,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["getting",{"_index":1169,"title":{"index.html":{}},"body":{}}],["getuserhandler",{"_index":670,"title":{"classes/GetUserHandler.html":{}},"body":{"classes/GetUserHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserifrefreshtokenmatches",{"_index":1045,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatches(refreshtoken",{"_index":1051,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserifrefreshtokenmatcheshandler",{"_index":688,"title":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["getuserifrefreshtokenmatchesquery",{"_index":691,"title":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserifrefreshtokenmatchesquery(refreshtoken",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserquery",{"_index":600,"title":{"classes/GetUserQuery.html":{}},"body":{"injectables/FriendshipService.html":{},"classes/GetUserHandler.html":{},"classes/GetUserQuery.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserquery(commandargs.senderid",{"_index":608,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["getuserquery(commandargs.userid",{"_index":609,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["getuserquery(id",{"_index":1061,"title":{},"body":{"injectables/UserService.html":{}}}],["grow",{"_index":1205,"title":{},"body":{"index.html":{}}}],["guards/auth.guard",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["handle",{"_index":51,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["handle(event",{"_index":57,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["handler",{"_index":545,"title":{},"body":{"modules/FriendshipModule.html":{}}}],["handler.ts",{"_index":46,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"coverage.html":{}}}],["handler.ts:10",{"_index":56,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{}}}],["handler.ts:11",{"_index":851,"title":{},"body":{"classes/SendFriendshipRequestEventHandler.html":{}}}],["handler.ts:12",{"_index":58,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{}}}],["handler.ts:13",{"_index":852,"title":{},"body":{"classes/SendFriendshipRequestEventHandler.html":{}}}],["handler.ts:8",{"_index":426,"title":{},"body":{"classes/ErrorEventHandler.html":{}}}],["handler/accept",{"_index":44,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"modules/FriendshipModule.html":{},"coverage.html":{}}}],["handler/cancel",{"_index":375,"title":{},"body":{"classes/CancelFriendshipRequestEventHandler.html":{},"modules/FriendshipModule.html":{},"coverage.html":{}}}],["handler/remove",{"_index":548,"title":{},"body":{"modules/FriendshipModule.html":{},"classes/RemoveFriendshipEventHandler.html":{},"coverage.html":{}}}],["handler/send",{"_index":551,"title":{},"body":{"modules/FriendshipModule.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"coverage.html":{}}}],["hash",{"_index":966,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["hashedpassword",{"_index":323,"title":{},"body":{"classes/AuthService.html":{}}}],["hello",{"_index":183,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1216,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":1133,"title":{},"body":{"dependencies.html":{}}}],["httpcode",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(200",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(200)@useguards(localauthenticationguard)@post('/signin",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":325,"title":{},"body":{"classes/AuthService.html":{},"classes/RegisterHandler.html":{}}}],["httponly",{"_index":356,"title":{},"body":{"classes/AuthService.html":{}}}],["https://nestjs.com",{"_index":1223,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":326,"title":{},"body":{"classes/AuthService.html":{},"classes/RegisterHandler.html":{}}}],["httpstatus.bad_request",{"_index":349,"title":{},"body":{"classes/AuthService.html":{}}}],["icommandhandler",{"_index":78,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["id",{"_index":344,"title":{},"body":{"classes/AuthService.html":{},"classes/DeleteUserHandler.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["ieventhandler",{"_index":48,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["implements",{"_index":47,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"modules/UserModule.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{}}}],["in.dto",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["in.dto.ts",{"_index":881,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["in.dto.ts:10",{"_index":883,"title":{},"body":{"classes/SignInDto.html":{}}}],["in.dto.ts:5",{"_index":885,"title":{},"body":{"classes/SignInDto.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"modules/UserModule.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info.level.touppercase",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info.timestamp",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":179,"title":{"injectables/AppService.html":{},"injectables/FriendshipService.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/FriendshipService.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/FriendshipService.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectrepository",{"_index":93,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["injectrepository(friendship",{"_index":103,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["injectrepository(friendshiprequest",{"_index":391,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["injectrepository(user",{"_index":337,"title":{},"body":{"classes/AuthService.html":{},"classes/DeleteUserHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["installation",{"_index":1183,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1185,"title":{},"body":{"index.html":{}}}],["interface",{"_index":842,"title":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{}},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["interface/request",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["interface/token",{"_index":329,"title":{},"body":{"classes/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":843,"title":{},"body":{"interfaces/RequestUser.html":{},"interfaces/TokenPayload.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":771,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["internalservererrorexception('internal",{"_index":796,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["invalidclassexception",{"_index":773,"title":{},"body":{"classes/RegisterHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["invalidclassexception('parameter",{"_index":789,"title":{},"body":{"classes/RegisterHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["invalideventshandlerexception",{"_index":858,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{}}}],["iqueryhandler",{"_index":617,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["isemail",{"_index":895,"title":{},"body":{"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["isemail()@column({unique",{"_index":938,"title":{},"body":{"entities/User.html":{}}}],["isemail()@isnotempty",{"_index":891,"title":{},"body":{"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty",{"_index":884,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["isnotempty()@minlength(5)@maxlength(20",{"_index":882,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["isrefreshtokenmatching",{"_index":696,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["join",{"_index":1212,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":448,"title":{},"body":{"entities/Friendship.html":{}}}],["json.stringify(info.message",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt",{"_index":728,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_access_token_expiration_time",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthenticationguard",{"_index":230,"title":{"injectables/JwtAuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthenticationGuard.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":731,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshguard",{"_index":234,"title":{"injectables/JwtRefreshGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/FriendshipController.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["jwtrefreshtokenstrategy",{"_index":238,"title":{"injectables/JwtRefreshTokenStrategy.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{}}}],["jwtstrategy",{"_index":739,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["kamil",{"_index":1220,"title":{},"body":{"index.html":{}}}],["key",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leftjoin('friendshiprequest.sender",{"_index":639,"title":{},"body":{"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{}}}],["leftjoin('friendshiprequest.user",{"_index":628,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetStatusFriendshipHandler.html":{}}}],["leftjoinandselect('friendship.friendone",{"_index":648,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["leftjoinandselect('friendship.friendtwo",{"_index":649,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["leftjoinandselect('friendshiprequest.sender",{"_index":398,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"classes/GetReceivedFriendshipHandler.html":{}}}],["leftjoinandselect('friendshiprequest.user",{"_index":395,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{}}}],["length",{"_index":917,"title":{},"body":{"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["length(5",{"_index":910,"title":{},"body":{"classes/UpdateUserDto.html":{},"entities/User.html":{}}}],["license",{"_index":1226,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1202,"title":{},"body":{"index.html":{}}}],["list.response",{"_index":677,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["list.response.ts",{"_index":1016,"title":{},"body":{"classes/UserListResponse.html":{},"coverage.html":{}}}],["list.response.ts:4",{"_index":1019,"title":{},"body":{"classes/UserListResponse.html":{}}}],["local",{"_index":756,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{}}}],["local.strategy.ts",{"_index":750,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["local.strategy.ts:14",{"_index":755,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["local.strategy.ts:8",{"_index":752,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["localauthenticationguard",{"_index":226,"title":{"injectables/LocalAuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthenticationGuard.html":{},"coverage.html":{}}}],["localisation",{"_index":433,"title":{},"body":{"classes/ErrorsEvent.html":{}}}],["localstrategy",{"_index":281,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":64,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/UpdateUserHandler.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('acceptfriendshiprequest",{"_index":55,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{}}}],["logger('authcontroller",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger('cancelfriendshiprequest",{"_index":377,"title":{},"body":{"classes/CancelFriendshipRequestEventHandler.html":{}}}],["logger('deleteuserhandler",{"_index":415,"title":{},"body":{"classes/DeleteUserHandler.html":{}}}],["logger('registerhandler",{"_index":768,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["logger('removefriendship",{"_index":809,"title":{},"body":{"classes/RemoveFriendshipEventHandler.html":{}}}],["logger('sendfriendshiprequest",{"_index":850,"title":{},"body":{"classes/SendFriendshipRequestEventHandler.html":{}}}],["logger('updateuser",{"_index":923,"title":{},"body":{"classes/UpdateUserHandler.html":{}}}],["logger(event.localisation",{"_index":429,"title":{},"body":{"classes/ErrorEventHandler.html":{}}}],["logger.config",{"_index":67,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["logger.config.ts",{"_index":1085,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(event",{"_index":431,"title":{},"body":{"classes/ErrorEventHandler.html":{}}}],["logger.info",{"_index":69,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["logger_console",{"_index":49,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["logger_console.error(event.error",{"_index":430,"title":{},"body":{"classes/ErrorEventHandler.html":{}}}],["logging",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":306,"title":{},"body":{"classes/AuthService.html":{}}}],["login(username",{"_index":318,"title":{},"body":{"classes/AuthService.html":{}}}],["logout",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(request",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["logs",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manytoone",{"_index":449,"title":{},"body":{"entities/Friendship.html":{},"entities/FriendshipRequest.html":{}}}],["manytoone(undefined",{"_index":440,"title":{},"body":{"entities/Friendship.html":{},"entities/FriendshipRequest.html":{}}}],["matches.handler",{"_index":1030,"title":{},"body":{"modules/UserModule.html":{}}}],["matches.handler.ts",{"_index":689,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"coverage.html":{}}}],["matches.handler.ts:12",{"_index":690,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["matches.handler.ts:19",{"_index":692,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["matches.query",{"_index":693,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/UserService.html":{}}}],["matches.query.ts",{"_index":702,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"coverage.html":{}}}],["matches.query.ts:1",{"_index":705,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:3",{"_index":706,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matches.query.ts:4",{"_index":707,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{}}}],["matching",{"_index":31,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"modules/UserModule.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":358,"title":{},"body":{"classes/AuthService.html":{}}}],["maxfiles",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxlength",{"_index":886,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxlength(20",{"_index":889,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["maxsize",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":50,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":887,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["minlength(5",{"_index":888,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{}}}],["miscellaneous",{"_index":1150,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1201,"title":{},"body":{"index.html":{}}}],["mockedconfigservice",{"_index":1088,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedfriendship",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedfriendshiplist",{"_index":1091,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedfriendshiprequestreceived",{"_index":1092,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedfriendshiprequestreceivedlist",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedfriendshiprequestsent",{"_index":1094,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedfriendshiprequestsentlist",{"_index":1095,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedjwtservice",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockeduserlist",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockeduserlistresponse",{"_index":1100,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockerfriendshiprequest",{"_index":1096,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockerfriendshiprequestlist",{"_index":1097,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mocks",{"_index":1132,"title":{},"body":{"dependencies.html":{}}}],["mockuser1",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuser2",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockuserdto",{"_index":1103,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1191,"title":{},"body":{"index.html":{}}}],["module",{"_index":136,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":138,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1215,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1221,"title":{},"body":{"index.html":{}}}],["name",{"_index":22,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":1180,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1225,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":65,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"controllers/FriendshipController.html":{},"modules/FriendshipModule.html":{},"injectables/FriendshipService.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/UpdateUserHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core/errors/exceptions/invalid",{"_index":774,"title":{},"body":{"classes/RegisterHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["nestjs/core/helpers/context",{"_index":994,"title":{},"body":{"controllers/UserController.html":{}}}],["nestjs/cqrs",{"_index":62,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"modules/FriendshipModule.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":915,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1119,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":94,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"modules/FriendshipModule.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["new",{"_index":54,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":777,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["newuser.email",{"_index":778,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["newuser.password",{"_index":780,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["newuser.username",{"_index":782,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["node",{"_index":1131,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":1172,"title":{},"body":{"index.html":{}}}],["none",{"_index":1160,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["npm",{"_index":1184,"title":{},"body":{"index.html":{}}}],["null",{"_index":840,"title":{},"body":{"classes/RemoveRefreshTokenHandler.html":{},"entities/User.html":{}}}],["nullable",{"_index":939,"title":{},"body":{"entities/User.html":{}}}],["object",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ondelete",{"_index":443,"title":{},"body":{"entities/Friendship.html":{},"entities/FriendshipRequest.html":{},"entities/User.html":{}}}],["onetomany",{"_index":963,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":941,"title":{},"body":{"entities/User.html":{}}}],["onetoone",{"_index":450,"title":{},"body":{"entities/Friendship.html":{}}}],["open",{"_index":1203,"title":{},"body":{"index.html":{}}}],["optional",{"_index":24,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["orwhere('(friendone.id=:userid",{"_index":655,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["orwhere('friendone.id=:friendtwoid",{"_index":821,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["out",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":1230,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1110,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":487,"title":{},"body":{"controllers/FriendshipController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":508,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["parameters",{"_index":20,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserHandler.html":{},"controllers/UserController.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["parser",{"_index":1121,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":914,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(userdto",{"_index":918,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":727,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":725,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":744,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":735,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["password",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":996,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id",{"_index":1004,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(':id')@useguards(jwtauthenticationguard",{"_index":991,"title":{},"body":{"controllers/UserController.html":{}}}],["path",{"_index":357,"title":{},"body":{"classes/AuthService.html":{}}}],["payload",{"_index":351,"title":{},"body":{"classes/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":330,"title":{},"body":{"classes/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":897,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["payload.userid",{"_index":738,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["pending",{"_index":1161,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pg",{"_index":1138,"title":{},"body":{"dependencies.html":{}}}],["plaintextpassword",{"_index":319,"title":{},"body":{"classes/AuthService.html":{}}}],["please",{"_index":1213,"title":{},"body":{"index.html":{}}}],["port",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FriendshipController.html":{}}}],["post('/signin",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signout",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(':id",{"_index":511,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["postgres",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["postgreserrorcode",{"_index":1154,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FriendshipController.html":{},"controllers/UserController.html":{}}}],["primary",{"_index":442,"title":{},"body":{"entities/Friendship.html":{},"entities/FriendshipRequest.html":{}}}],["primarygeneratedcolumn",{"_index":964,"title":{},"body":{"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":949,"title":{},"body":{"entities/User.html":{}}}],["private",{"_index":104,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_access_token_expiration_time}s",{"_index":354,"title":{},"body":{"classes/AuthService.html":{}}}],["process.env.jwt_access_token_secret",{"_index":353,"title":{},"body":{"classes/AuthService.html":{}}}],["process.env.jwt_expiration_time",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_refresh_token_expiration_time}s",{"_index":361,"title":{},"body":{"classes/AuthService.html":{}}}],["process.env.jwt_refresh_token_secret",{"_index":360,"title":{},"body":{"classes/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["process.env.jwt_secret",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":1193,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1171,"title":{},"body":{"index.html":{}}}],["project",{"_index":1204,"title":{},"body":{"index.html":{}}}],["promise",{"_index":89,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"classes/FriendshipDto.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"properties.html":{}}}],["provided",{"_index":348,"title":{},"body":{"classes/AuthService.html":{}}}],["providers",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":11,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorsEvent.html":{},"classes/FriendshipDto.html":{},"classes/FriendshipRequestDto.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"classes/RegisterCommand.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/UpdateUserCommand.html":{},"entities/User.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{}}}],["put",{"_index":488,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["put(':id",{"_index":513,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["query",{"_index":623,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["query.currentuser",{"_index":653,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["query.refreshtoken",{"_index":698,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["query.user",{"_index":654,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["query.userid",{"_index":630,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetUserHandler.html":{}}}],["query/get",{"_index":625,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["queryars",{"_index":576,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["queryars.userid",{"_index":607,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["querybus",{"_index":567,"title":{},"body":{"injectables/FriendshipService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["queryhandler",{"_index":624,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["queryhandler(getreceivedfriendshiprequestquery",{"_index":626,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{}}}],["queryhandler(getsentfriendshiprequestquery",{"_index":638,"title":{},"body":{"classes/GetSentFriendshipRequestHandler.html":{}}}],["queryhandler(getstatusfriendshipquery",{"_index":646,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["queryhandler(getuserifrefreshtokenmatchesquery",{"_index":694,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["queryhandler(getuserquery",{"_index":678,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["read",{"_index":1214,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorsEvent.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"classes/FriendshipRequestDto.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/UpdateUserCommand.html":{},"controllers/UserController.html":{},"classes/UserResponse.html":{}}}],["received",{"_index":541,"title":{},"body":{"modules/FriendshipModule.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["receivedfriendshiprequest",{"_index":455,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["receivedfriendshiprequest(@req",{"_index":504,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["receivedfriendshiprequest(queryars",{"_index":574,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["receivedfriendshiprequest(request",{"_index":467,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["reflect",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"controllers/FriendshipController.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["refresh(@req",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(request",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh=${token",{"_index":362,"title":{},"body":{"classes/AuthService.html":{}}}],["refreshtoken",{"_index":703,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"injectables/UserService.html":{}}}],["refreshtokencookie",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.cookie",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtokencookie.token",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["register",{"_index":794,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registercommand",{"_index":335,"title":{"classes/RegisterCommand.html":{}},"body":{"classes/AuthService.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["registered",{"_index":792,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["registerhandler",{"_index":292,"title":{"classes/RegisterHandler.html":{}},"body":{"modules/AuthModule.html":{},"classes/RegisterHandler.html":{},"coverage.html":{}}}],["rejectfriendshiprequest",{"_index":456,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["rejectfriendshiprequest(commandargs",{"_index":577,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["rejectfriendshiprequest(request",{"_index":470,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["remove",{"_index":812,"title":{},"body":{"classes/RemoveFriendshipEventHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":1009,"title":{},"body":{"controllers/UserController.html":{}}}],["remove(id",{"_index":987,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["removefriendship",{"_index":457,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["removefriendship(@req",{"_index":520,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["removefriendship(commandargs",{"_index":579,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["removefriendship(request",{"_index":473,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["removefriendshipcommand",{"_index":591,"title":{"classes/RemoveFriendshipCommand.html":{}},"body":{"injectables/FriendshipService.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipHandler.html":{},"coverage.html":{}}}],["removefriendshipcommand(commandargs.senderid",{"_index":614,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["removefriendshipevent",{"_index":803,"title":{"classes/RemoveFriendshipEvent.html":{}},"body":{"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"coverage.html":{}}}],["removefriendshipevent(command.friendone",{"_index":824,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["removefriendshipeventhandler",{"_index":547,"title":{"classes/RemoveFriendshipEventHandler.html":{}},"body":{"modules/FriendshipModule.html":{},"classes/RemoveFriendshipEventHandler.html":{},"coverage.html":{}}}],["removefriendshiphandler",{"_index":532,"title":{"classes/RemoveFriendshipHandler.html":{}},"body":{"modules/FriendshipModule.html":{},"classes/RemoveFriendshipHandler.html":{},"coverage.html":{}}}],["removerefreshtoken",{"_index":1046,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtoken(userid",{"_index":1054,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokencommand",{"_index":827,"title":{"classes/RemoveRefreshTokenCommand.html":{}},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["removerefreshtokencommand(userid",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["removerefreshtokenhandler",{"_index":832,"title":{"classes/RemoveRefreshTokenHandler.html":{}},"body":{"classes/RemoveRefreshTokenHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["repository",{"_index":82,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"classes/UserRepositoryMock.html":{},"index.html":{}}}],["req",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FriendshipController.html":{}}}],["request",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"controllers/FriendshipController.html":{},"modules/FriendshipModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"classes/RemoveFriendshipEventHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"coverage.html":{}}}],["request.command",{"_index":92,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"injectables/FriendshipService.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["request.command.ts",{"_index":8,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestCommand.html":{},"coverage.html":{}}}],["request.command.ts:2",{"_index":370,"title":{},"body":{"classes/CancelFriendshipRequestCommand.html":{}}}],["request.command.ts:3",{"_index":19,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestCommand.html":{}}}],["request.command.ts:4",{"_index":847,"title":{},"body":{"classes/SendFriendshipRequestCommand.html":{}}}],["request.command.ts:5",{"_index":25,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{}}}],["request.command.ts:6",{"_index":26,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{}}}],["request.cookies?.refresh",{"_index":736,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["request.dto",{"_index":494,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["request.dto.ts",{"_index":562,"title":{},"body":{"classes/FriendshipRequestDto.html":{},"coverage.html":{}}}],["request.dto.ts:1",{"_index":563,"title":{},"body":{"classes/FriendshipRequestDto.html":{}}}],["request.dto.ts:3",{"_index":564,"title":{},"body":{"classes/FriendshipRequestDto.html":{}}}],["request.entity",{"_index":97,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"modules/AppModule.html":{},"classes/CancelFriendshipRequestHandler.html":{},"modules/FriendshipModule.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"entities/User.html":{}}}],["request.entity.ts",{"_index":553,"title":{},"body":{"entities/FriendshipRequest.html":{},"coverage.html":{}}}],["request.entity.ts:11",{"_index":559,"title":{},"body":{"entities/FriendshipRequest.html":{}}}],["request.entity.ts:13",{"_index":560,"title":{},"body":{"entities/FriendshipRequest.html":{}}}],["request.entity.ts:16",{"_index":557,"title":{},"body":{"entities/FriendshipRequest.html":{}}}],["request.event",{"_index":45,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"modules/FriendshipModule.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"coverage.html":{}}}],["request.event.ts",{"_index":34,"title":{},"body":{"classes/AcceptFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEvent.html":{},"coverage.html":{}}}],["request.event.ts:3",{"_index":39,"title":{},"body":{"classes/AcceptFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEvent.html":{}}}],["request.event.ts:5",{"_index":40,"title":{},"body":{"classes/AcceptFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEvent.html":{}}}],["request.event.ts:6",{"_index":41,"title":{},"body":{"classes/AcceptFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEvent.html":{}}}],["request.handler",{"_index":530,"title":{},"body":{"modules/FriendshipModule.html":{}}}],["request.handler.ts",{"_index":77,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"coverage.html":{}}}],["request.handler.ts:10",{"_index":636,"title":{},"body":{"classes/GetSentFriendshipRequestHandler.html":{}}}],["request.handler.ts:13",{"_index":386,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{}}}],["request.handler.ts:14",{"_index":84,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{}}}],["request.handler.ts:16",{"_index":637,"title":{},"body":{"classes/GetSentFriendshipRequestHandler.html":{}}}],["request.handler.ts:19",{"_index":856,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{}}}],["request.handler.ts:20",{"_index":388,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{}}}],["request.handler.ts:21",{"_index":87,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{}}}],["request.handler.ts:28",{"_index":857,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{}}}],["request.query",{"_index":596,"title":{},"body":{"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{}}}],["request.query.ts",{"_index":633,"title":{},"body":{"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"coverage.html":{}}}],["request.query.ts:1",{"_index":634,"title":{},"body":{"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{}}}],["request.query.ts:2",{"_index":635,"title":{},"body":{"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{}}}],["request.res.setheader('set",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.user",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.user.id",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["request?.cookies?.authentication",{"_index":745,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request?.cookies?.refresh",{"_index":733,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["requestedfriends",{"_index":933,"title":{},"body":{"entities/User.html":{}}}],["requestuser",{"_index":195,"title":{"interfaces/RequestUser.html":{}},"body":{"controllers/AuthController.html":{},"controllers/FriendshipController.html":{},"interfaces/RequestUser.html":{},"coverage.html":{}}}],["res",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.send(user",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.sendstatus(200",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.setheader('set",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":30,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"modules/UserModule.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":113,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/UpdateUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":60,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":1188,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":1176,"title":{},"body":{"index.html":{}}}],["secret",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthService.html":{}}}],["secretorkey",{"_index":734,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["select",{"_index":343,"title":{},"body":{"classes/AuthService.html":{},"entities/User.html":{}}}],["sender",{"_index":368,"title":{},"body":{"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestHandler.html":{},"entities/FriendshipRequest.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["senderid",{"_index":35,"title":{},"body":{"classes/AcceptFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/FriendshipDto.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/SendFriendshipRequestEvent.html":{}}}],["sendfriendshiprequest",{"_index":458,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["sendfriendshiprequest(commandargs",{"_index":581,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["sendfriendshiprequest(request",{"_index":476,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["sendfriendshiprequestcommand",{"_index":587,"title":{"classes/SendFriendshipRequestCommand.html":{}},"body":{"injectables/FriendshipService.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestHandler.html":{},"coverage.html":{}}}],["sendfriendshiprequestcommand(sender",{"_index":610,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["sendfriendshiprequestevent",{"_index":848,"title":{"classes/SendFriendshipRequestEvent.html":{}},"body":{"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"coverage.html":{}}}],["sendfriendshiprequestevent(command.sender.id",{"_index":863,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{}}}],["sendfriendshiprequesteventhandler",{"_index":550,"title":{"classes/SendFriendshipRequestEventHandler.html":{}},"body":{"modules/FriendshipModule.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"coverage.html":{}}}],["sendfriendshiprequesthandler",{"_index":535,"title":{"classes/SendFriendshipRequestHandler.html":{}},"body":{"modules/FriendshipModule.html":{},"classes/SendFriendshipRequestHandler.html":{},"coverage.html":{}}}],["sent",{"_index":543,"title":{},"body":{"modules/FriendshipModule.html":{},"injectables/FriendshipService.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"coverage.html":{}}}],["sentfriendshiprequest",{"_index":459,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["sentfriendshiprequest(@req",{"_index":500,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["sentfriendshiprequest(queryars",{"_index":583,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["sentfriendshiprequest(request",{"_index":479,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["server",{"_index":797,"title":{},"body":{"classes/RegisterHandler.html":{},"index.html":{}}}],["set",{"_index":943,"title":{},"body":{"entities/User.html":{}}}],["setcurrentrefreshtoken",{"_index":1047,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtoken(token",{"_index":1056,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokencommand",{"_index":331,"title":{"classes/SetCurrentRefreshTokenCommand.html":{}},"body":{"classes/AuthService.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["setcurrentrefreshtokencommand(token",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["setcurrentrefreshtokenhandler",{"_index":870,"title":{"classes/SetCurrentRefreshTokenHandler.html":{}},"body":{"classes/SetCurrentRefreshTokenHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["setpassword(password",{"_index":975,"title":{},"body":{"entities/User.html":{}}}],["side",{"_index":1177,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signin",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(@req",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(request",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":214,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{}}}],["signup(@body",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(signupdto",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{}}}],["signupdto",{"_index":211,"title":{"classes/SignUpDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["signupdto.email",{"_index":340,"title":{},"body":{"classes/AuthService.html":{}}}],["signupdto.password",{"_index":341,"title":{},"body":{"classes/AuthService.html":{}}}],["signupdto.username",{"_index":339,"title":{},"body":{"classes/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"modules/UserModule.html":{},"classes/UserRepositoryMock.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":1207,"title":{},"body":{"index.html":{}}}],["src/.../config.service.mock.ts",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../friendship",{"_index":1152,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../friendship.dto.mock.ts",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.service.mock.ts",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../postgres",{"_index":1155,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user",{"_index":1157,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.dto.mock.ts",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/api/auth/auth.controller.ts",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/api/auth/auth.controller.ts:34",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:41",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:61",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:70",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.controller.ts:77",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/api/auth/auth.module.ts",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/api/auth/auth.service.ts",{"_index":302,"title":{},"body":{"classes/AuthService.html":{},"coverage.html":{}}}],["src/api/auth/auth.service.ts:13",{"_index":310,"title":{},"body":{"classes/AuthService.html":{}}}],["src/api/auth/auth.service.ts:21",{"_index":321,"title":{},"body":{"classes/AuthService.html":{}}}],["src/api/auth/auth.service.ts:31",{"_index":320,"title":{},"body":{"classes/AuthService.html":{}}}],["src/api/auth/auth.service.ts:53",{"_index":324,"title":{},"body":{"classes/AuthService.html":{}}}],["src/api/auth/auth.service.ts:60",{"_index":317,"title":{},"body":{"classes/AuthService.html":{}}}],["src/api/auth/auth.service.ts:69",{"_index":314,"title":{},"body":{"classes/AuthService.html":{}}}],["src/api/auth/auth.service.ts:82",{"_index":312,"title":{},"body":{"classes/AuthService.html":{}}}],["src/api/auth/cqrs/command/register.command.ts",{"_index":759,"title":{},"body":{"classes/RegisterCommand.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:1",{"_index":762,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:3",{"_index":765,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:4",{"_index":763,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/command/register.command.ts:5",{"_index":764,"title":{},"body":{"classes/RegisterCommand.html":{}}}],["src/api/auth/cqrs/handler/register.handler.ts",{"_index":766,"title":{},"body":{"classes/RegisterHandler.html":{},"coverage.html":{}}}],["src/api/auth/cqrs/handler/register.handler.ts:17",{"_index":767,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/cqrs/handler/register.handler.ts:24",{"_index":769,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["src/api/auth/database/postgres",{"_index":1163,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/auth/dto/sign",{"_index":880,"title":{},"body":{"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/api/auth/guards/auth.guard.ts",{"_index":747,"title":{},"body":{"injectables/LocalAuthenticationGuard.html":{},"coverage.html":{}}}],["src/api/auth/guards/jwt",{"_index":712,"title":{},"body":{"injectables/JwtAuthenticationGuard.html":{},"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["src/api/auth/interface/request",{"_index":844,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["src/api/auth/interface/token",{"_index":896,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt",{"_index":718,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts",{"_index":740,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:12",{"_index":741,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/jwt.strategy.ts:27",{"_index":743,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/api/auth/strategy/passport",{"_index":749,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/command/accept",{"_index":6,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/command/cancel",{"_index":367,"title":{},"body":{"classes/CancelFriendshipRequestCommand.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/command/remove",{"_index":798,"title":{},"body":{"classes/RemoveFriendshipCommand.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/command/send",{"_index":846,"title":{},"body":{"classes/SendFriendshipRequestCommand.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/event",{"_index":43,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/event/accept",{"_index":33,"title":{},"body":{"classes/AcceptFriendshipRequestEvent.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/event/cancel",{"_index":373,"title":{},"body":{"classes/CancelFriendshipRequestEvent.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/event/remove",{"_index":804,"title":{},"body":{"classes/RemoveFriendshipEvent.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/event/send",{"_index":849,"title":{},"body":{"classes/SendFriendshipRequestEvent.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/handler/accept",{"_index":76,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/handler/cancel",{"_index":384,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/handler/get",{"_index":615,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/handler/remove",{"_index":813,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/handler/send",{"_index":855,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{},"coverage.html":{}}}],["src/api/friendship/cqrs/query/get",{"_index":632,"title":{},"body":{"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipQuery.html":{},"coverage.html":{}}}],["src/api/friendship/domain/dto/friendship",{"_index":561,"title":{},"body":{"classes/FriendshipRequestDto.html":{},"coverage.html":{}}}],["src/api/friendship/domain/dto/friendship.dto.ts",{"_index":522,"title":{},"body":{"classes/FriendshipDto.html":{},"coverage.html":{}}}],["src/api/friendship/domain/dto/friendship.dto.ts:1",{"_index":523,"title":{},"body":{"classes/FriendshipDto.html":{}}}],["src/api/friendship/domain/dto/friendship.dto.ts:3",{"_index":524,"title":{},"body":{"classes/FriendshipDto.html":{}}}],["src/api/friendship/domain/dto/friendship.dto.ts:4",{"_index":525,"title":{},"body":{"classes/FriendshipDto.html":{}}}],["src/api/friendship/domain/entities/friendship",{"_index":552,"title":{},"body":{"entities/FriendshipRequest.html":{},"coverage.html":{}}}],["src/api/friendship/domain/entities/friendship.entity.ts",{"_index":439,"title":{},"body":{"entities/Friendship.html":{},"coverage.html":{}}}],["src/api/friendship/domain/entities/friendship.entity.ts:10",{"_index":445,"title":{},"body":{"entities/Friendship.html":{}}}],["src/api/friendship/domain/entities/friendship.entity.ts:15",{"_index":447,"title":{},"body":{"entities/Friendship.html":{}}}],["src/api/friendship/domain/enum/friendship",{"_index":1159,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/friendship/friendship.controller.ts",{"_index":452,"title":{},"body":{"controllers/FriendshipController.html":{},"coverage.html":{}}}],["src/api/friendship/friendship.controller.ts:23",{"_index":481,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["src/api/friendship/friendship.controller.ts:31",{"_index":469,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["src/api/friendship/friendship.controller.ts:39",{"_index":485,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["src/api/friendship/friendship.controller.ts:47",{"_index":478,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["src/api/friendship/friendship.controller.ts:58",{"_index":463,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["src/api/friendship/friendship.controller.ts:69",{"_index":466,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["src/api/friendship/friendship.controller.ts:80",{"_index":472,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["src/api/friendship/friendship.controller.ts:91",{"_index":475,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["src/api/friendship/friendship.module.ts",{"_index":528,"title":{},"body":{"modules/FriendshipModule.html":{}}}],["src/api/friendship/friendship.service.ts",{"_index":565,"title":{},"body":{"injectables/FriendshipService.html":{},"coverage.html":{}}}],["src/api/friendship/friendship.service.ts:15",{"_index":568,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["src/api/friendship/friendship.service.ts:18",{"_index":584,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["src/api/friendship/friendship.service.ts:24",{"_index":575,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["src/api/friendship/friendship.service.ts:30",{"_index":586,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["src/api/friendship/friendship.service.ts:36",{"_index":582,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["src/api/friendship/friendship.service.ts:48",{"_index":570,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["src/api/friendship/friendship.service.ts:66",{"_index":573,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["src/api/friendship/friendship.service.ts:75",{"_index":578,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["src/api/friendship/friendship.service.ts:84",{"_index":580,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["src/api/user/cqrs/command/delete",{"_index":406,"title":{},"body":{"classes/DeleteUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/remove",{"_index":828,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/set",{"_index":867,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/command/update",{"_index":899,"title":{},"body":{"classes/UpdateUserCommand.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/delete",{"_index":412,"title":{},"body":{"classes/DeleteUserHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/get",{"_index":671,"title":{},"body":{"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/remove",{"_index":833,"title":{},"body":{"classes/RemoveRefreshTokenHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/set",{"_index":871,"title":{},"body":{"classes/SetCurrentRefreshTokenHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/handler/update",{"_index":921,"title":{},"body":{"classes/UpdateUserHandler.html":{},"coverage.html":{}}}],["src/api/user/cqrs/query/get",{"_index":701,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/update",{"_index":906,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/user.dto.ts",{"_index":1011,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/api/user/domain/dto/user.dto.ts:2",{"_index":1012,"title":{},"body":{"classes/UserDto.html":{}}}],["src/api/user/domain/dto/user.dto.ts:3",{"_index":1013,"title":{},"body":{"classes/UserDto.html":{}}}],["src/api/user/domain/dto/user.dto.ts:4",{"_index":1014,"title":{},"body":{"classes/UserDto.html":{}}}],["src/api/user/domain/entities/user.entity.ts",{"_index":929,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/api/user/domain/entities/user.entity.ts:21",{"_index":950,"title":{},"body":{"entities/User.html":{}}}],["src/api/user/domain/entities/user.entity.ts:25",{"_index":940,"title":{},"body":{"entities/User.html":{}}}],["src/api/user/domain/entities/user.entity.ts:28",{"_index":952,"title":{},"body":{"entities/User.html":{}}}],["src/api/user/domain/entities/user.entity.ts:33",{"_index":956,"title":{},"body":{"entities/User.html":{}}}],["src/api/user/domain/entities/user.entity.ts:41",{"_index":959,"title":{},"body":{"entities/User.html":{}}}],["src/api/user/domain/entities/user.entity.ts:47",{"_index":937,"title":{},"body":{"entities/User.html":{}}}],["src/api/user/domain/entities/user.entity.ts:53",{"_index":946,"title":{},"body":{"entities/User.html":{}}}],["src/api/user/domain/entities/user.entity.ts:58",{"_index":948,"title":{},"body":{"entities/User.html":{}}}],["src/api/user/domain/entities/user.entity.ts:64",{"_index":944,"title":{},"body":{"entities/User.html":{}}}],["src/api/user/domain/entities/user.entity.ts:69",{"_index":954,"title":{},"body":{"entities/User.html":{}}}],["src/api/user/domain/enum/user",{"_index":1166,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/api/user/domain/response/user",{"_index":1015,"title":{},"body":{"classes/UserListResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user.response.ts",{"_index":1037,"title":{},"body":{"classes/UserResponse.html":{},"coverage.html":{}}}],["src/api/user/domain/response/user.response.ts:3",{"_index":1039,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:5",{"_index":1041,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:6",{"_index":1042,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:7",{"_index":1040,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/domain/response/user.response.ts:8",{"_index":1043,"title":{},"body":{"classes/UserResponse.html":{}}}],["src/api/user/user.controller.ts",{"_index":979,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/api/user/user.controller.ts:25",{"_index":983,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:30",{"_index":986,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:36",{"_index":992,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.controller.ts:42",{"_index":989,"title":{},"body":{"controllers/UserController.html":{}}}],["src/api/user/user.module.ts",{"_index":1025,"title":{},"body":{"modules/UserModule.html":{}}}],["src/api/user/user.service.ts",{"_index":1044,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/api/user/user.service.ts:12",{"_index":1048,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:15",{"_index":1049,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:19",{"_index":1050,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:23",{"_index":1058,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:27",{"_index":1053,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:31",{"_index":1052,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:37",{"_index":1055,"title":{},"body":{"injectables/UserService.html":{}}}],["src/api/user/user.service.ts:41",{"_index":1057,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app.controller.ts",{"_index":128,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":131,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":182,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":1081,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/util/config/winston",{"_index":1084,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/error/error.event",{"_index":425,"title":{},"body":{"classes/ErrorEventHandler.html":{},"coverage.html":{}}}],["src/util/error/errorsevent.ts",{"_index":432,"title":{},"body":{"classes/ErrorsEvent.html":{},"coverage.html":{}}}],["src/util/error/errorsevent.ts:1",{"_index":435,"title":{},"body":{"classes/ErrorsEvent.html":{}}}],["src/util/error/errorsevent.ts:3",{"_index":437,"title":{},"body":{"classes/ErrorsEvent.html":{}}}],["src/util/error/errorsevent.ts:4",{"_index":436,"title":{},"body":{"classes/ErrorsEvent.html":{}}}],["src/util/mocks/config.service.mock.ts",{"_index":1087,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/mocks/dto/friendship.dto.mock.ts",{"_index":1089,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/mocks/dto/user.dto.mock.ts",{"_index":1098,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/mocks/jwt.service.mock.ts",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/util/mocks/repository/user.repository.mock.ts",{"_index":1034,"title":{},"body":{"classes/UserRepositoryMock.html":{},"coverage.html":{}}}],["start",{"_index":1189,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1192,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1194,"title":{},"body":{"index.html":{}}}],["started",{"_index":1170,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1182,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":484,"title":{},"body":{"controllers/FriendshipController.html":{},"modules/FriendshipModule.html":{},"injectables/FriendshipService.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"coverage.html":{}}}],["status.enum",{"_index":645,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["status.enum.ts",{"_index":1153,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["statusfriendship",{"_index":460,"title":{},"body":{"controllers/FriendshipController.html":{},"injectables/FriendshipService.html":{}}}],["statusfriendship(@req",{"_index":507,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["statusfriendship(queryars",{"_index":585,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["statusfriendship(request",{"_index":482,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["stay",{"_index":1217,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":726,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["strategy/passport",{"_index":286,"title":{},"body":{"modules/AuthModule.html":{}}}],["string",{"_index":38,"title":{},"body":{"classes/AcceptFriendshipRequestEvent.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/DeleteUserCommand.html":{},"classes/ErrorsEvent.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"classes/FriendshipRequestDto.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":730,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1208,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1228,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":1197,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1200,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1199,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1196,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1206,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":135,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authenticationservice.login(username",{"_index":758,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.authservice.getcookieforlogout",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtrefreshtoken",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwttoken(user.id",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(signupdto",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.commandbus.execute",{"_index":338,"title":{},"body":{"classes/AuthService.html":{},"injectables/FriendshipService.html":{},"injectables/UserService.html":{}}}],["this.commandbus.execute(new",{"_index":1062,"title":{},"body":{"injectables/UserService.html":{}}}],["this.eventbus.publish",{"_index":110,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{}}}],["this.eventbus.publish(new",{"_index":825,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["this.friendrequestrepository",{"_index":393,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{}}}],["this.friendrequestrepository.create",{"_index":861,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{}}}],["this.friendrequestrepository.remove(friendrequest",{"_index":403,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{}}}],["this.friendrequestrepository.save(friendshiprequest",{"_index":865,"title":{},"body":{"classes/SendFriendshipRequestHandler.html":{}}}],["this.friendshiprepository",{"_index":647,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{},"classes/RemoveFriendshipHandler.html":{}}}],["this.friendshiprepository.create",{"_index":107,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{}}}],["this.friendshiprepository.remove(friendship",{"_index":823,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["this.friendshiprepository.save(friendship",{"_index":114,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{}}}],["this.friendshiprequestrepository",{"_index":627,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{}}}],["this.friendshipservice.acceptfriendshiprequest",{"_index":514,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["this.friendshipservice.cancelfriendshiprequest",{"_index":516,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["this.friendshipservice.receivedfriendshiprequest",{"_index":505,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["this.friendshipservice.rejectfriendshiprequest",{"_index":518,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["this.friendshipservice.removefriendship",{"_index":521,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["this.friendshipservice.sendfriendshiprequest",{"_index":512,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["this.friendshipservice.sentfriendshiprequest",{"_index":501,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["this.friendshipservice.statusfriendship",{"_index":509,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["this.jwtservice.sign(payload",{"_index":352,"title":{},"body":{"classes/AuthService.html":{}}}],["this.logger.error('failed",{"_index":793,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.logger.error('invalid",{"_index":788,"title":{},"body":{"classes/RegisterHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["this.logger.verbose",{"_index":422,"title":{},"body":{"classes/DeleteUserHandler.html":{}}}],["this.logger.verbose('new",{"_index":791,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.logger_console.log",{"_index":74,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["this.password",{"_index":976,"title":{},"body":{"entities/User.html":{}}}],["this.querybus.execute",{"_index":603,"title":{},"body":{"injectables/FriendshipService.html":{},"injectables/UserService.html":{}}}],["this.querybus.execute(new",{"_index":1060,"title":{},"body":{"injectables/UserService.html":{}}}],["this.update(id",{"_index":1007,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userlist",{"_index":1022,"title":{},"body":{"classes/UserListResponse.html":{}}}],["this.userrepository.delete(command.userid",{"_index":421,"title":{},"body":{"classes/DeleteUserHandler.html":{}}}],["this.userrepository.find().then((userlist",{"_index":680,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["this.userrepository.findone(query.userid",{"_index":695,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["this.userrepository.findoneorfail",{"_index":342,"title":{},"body":{"classes/AuthService.html":{},"classes/UpdateUserHandler.html":{}}}],["this.userrepository.findoneorfail(payload.userid",{"_index":746,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepository.findoneorfail(query.userid",{"_index":679,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["this.userrepository.save(newuser",{"_index":790,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["this.userrepository.update(command.userid",{"_index":838,"title":{},"body":{"classes/RemoveRefreshTokenHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["this.userservice.findall",{"_index":1001,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":1003,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserifrefreshtokenmatches",{"_index":737,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["this.userservice.remove(id",{"_index":1010,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.removerefreshtoken(request.user.id",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.userservice.setcurrentrefreshtoken",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.verifypassword(plaintextpassword",{"_index":345,"title":{},"body":{"classes/AuthService.html":{}}}],["throw",{"_index":124,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["todo",{"_index":118,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["token",{"_index":315,"title":{},"body":{"classes/AuthService.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtRefreshGuard.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["token.command",{"_index":334,"title":{},"body":{"classes/AuthService.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"injectables/UserService.html":{}}}],["token.command.ts",{"_index":829,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"coverage.html":{}}}],["token.command.ts:1",{"_index":830,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:2",{"_index":831,"title":{},"body":{"classes/RemoveRefreshTokenCommand.html":{}}}],["token.command.ts:3",{"_index":868,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.command.ts:4",{"_index":869,"title":{},"body":{"classes/SetCurrentRefreshTokenCommand.html":{}}}],["token.guard",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FriendshipController.html":{}}}],["token.guard.ts",{"_index":717,"title":{},"body":{"injectables/JwtRefreshGuard.html":{},"coverage.html":{}}}],["token.handler",{"_index":1031,"title":{},"body":{"modules/UserModule.html":{}}}],["token.handler.ts",{"_index":834,"title":{},"body":{"classes/RemoveRefreshTokenHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"coverage.html":{}}}],["token.handler.ts:11",{"_index":835,"title":{},"body":{"classes/RemoveRefreshTokenHandler.html":{}}}],["token.handler.ts:12",{"_index":872,"title":{},"body":{"classes/SetCurrentRefreshTokenHandler.html":{}}}],["token.handler.ts:18",{"_index":836,"title":{},"body":{"classes/RemoveRefreshTokenHandler.html":{}}}],["token.handler.ts:19",{"_index":873,"title":{},"body":{"classes/SetCurrentRefreshTokenHandler.html":{}}}],["token.strategy",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["token.strategy.ts",{"_index":719,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"coverage.html":{}}}],["token.strategy.ts:15",{"_index":722,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["token.strategy.ts:28",{"_index":724,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["tokenpayload",{"_index":328,"title":{"interfaces/TokenPayload.html":{}},"body":{"classes/AuthService.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["touch",{"_index":1218,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":972,"title":{},"body":{"entities/User.html":{},"dependencies.html":{}}}],["transports",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"entities/Friendship.html":{},"entities/FriendshipRequest.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"entities/User.html":{}}}],["true})@exclude",{"_index":936,"title":{},"body":{"entities/User.html":{}}}],["try",{"_index":105,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["twitter",{"_index":1224,"title":{},"body":{"index.html":{}}}],["type",{"_index":23,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"classes/DeleteUserHandler.html":{},"classes/ErrorEventHandler.html":{},"classes/ErrorsEvent.html":{},"entities/Friendship.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"entities/FriendshipRequest.html":{},"classes/FriendshipRequestDto.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipCommand.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":968,"title":{},"body":{"entities/User.html":{},"classes/UserResponse.html":{}}}],["type.enum.ts",{"_index":1158,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeorm",{"_index":98,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"entities/Friendship.html":{},"entities/FriendshipRequest.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"classes/UserRepositoryMock.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":916,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["types/cookie",{"_index":1120,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":1123,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1181,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"classes/GetStatusFriendshipHandler.html":{},"entities/User.html":{}}}],["une",{"_index":120,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["unique",{"_index":973,"title":{},"body":{"entities/User.html":{}}}],["uniqueviolation",{"_index":1164,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unit",{"_index":1195,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetUserHandler.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":1238,"title":{},"body":{"properties.html":{}}}],["up.dto",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{}}}],["up.dto.ts",{"_index":890,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["up.dto.ts:14",{"_index":893,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:5",{"_index":894,"title":{},"body":{"classes/SignUpDto.html":{}}}],["up.dto.ts:9",{"_index":892,"title":{},"body":{"classes/SignUpDto.html":{}}}],["update",{"_index":982,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":1006,"title":{},"body":{"controllers/UserController.html":{}}}],["update(id",{"_index":990,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updateresult",{"_index":926,"title":{},"body":{"classes/UpdateUserHandler.html":{}}}],["updateusercommand",{"_index":898,"title":{"classes/UpdateUserCommand.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateusercommand(id",{"_index":1063,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto",{"_index":900,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserhandler",{"_index":920,"title":{"classes/UpdateUserHandler.html":{}},"body":{"classes/UpdateUserHandler.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["useguards",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FriendshipController.html":{},"controllers/UserController.html":{}}}],["useguards(jwtauthenticationguard",{"_index":1005,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(jwtrefreshguard",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FriendshipController.html":{}}}],["useguards(jwtrefreshguard)@delete(':id/cancel",{"_index":465,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["useguards(jwtrefreshguard)@delete(':id/reject",{"_index":471,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["useguards(jwtrefreshguard)@delete(':id/remove",{"_index":474,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["useguards(jwtrefreshguard)@get(':id/friendship",{"_index":483,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["useguards(jwtrefreshguard)@get('actual",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('received",{"_index":468,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["useguards(jwtrefreshguard)@get('refresh",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@get('sent",{"_index":480,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["useguards(jwtrefreshguard)@post('/signout",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtrefreshguard)@post(':id",{"_index":477,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["useguards(jwtrefreshguard)@put(':id",{"_index":462,"title":{},"body":{"controllers/FriendshipController.html":{}}}],["useguards(localauthenticationguard",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":17,"title":{"entities/User.html":{}},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserHandler.html":{},"entities/Friendship.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"injectables/FriendshipService.html":{},"classes/GetReceivedFriendshipHandler.html":{},"classes/GetSentFriendshipRequestHandler.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetStatusFriendshipQuery.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveRefreshTokenHandler.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserCommand.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserRepositoryMock.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user.command",{"_index":418,"title":{},"body":{"classes/DeleteUserHandler.html":{},"classes/UpdateUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.command.ts",{"_index":407,"title":{},"body":{"classes/DeleteUserCommand.html":{},"classes/UpdateUserCommand.html":{},"coverage.html":{}}}],["user.command.ts:1",{"_index":409,"title":{},"body":{"classes/DeleteUserCommand.html":{}}}],["user.command.ts:2",{"_index":410,"title":{},"body":{"classes/DeleteUserCommand.html":{}}}],["user.command.ts:3",{"_index":901,"title":{},"body":{"classes/UpdateUserCommand.html":{}}}],["user.command.ts:5",{"_index":903,"title":{},"body":{"classes/UpdateUserCommand.html":{}}}],["user.command.ts:6",{"_index":902,"title":{},"body":{"classes/UpdateUserCommand.html":{}}}],["user.controller",{"_index":1026,"title":{},"body":{"modules/UserModule.html":{}}}],["user.currenthashedrefreshtoken",{"_index":699,"title":{},"body":{"classes/GetUserIfRefreshTokenMatchesHandler.html":{}}}],["user.dto",{"_index":905,"title":{},"body":{"classes/UpdateUserCommand.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":907,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":912,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:14",{"_index":909,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:8",{"_index":908,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":685,"title":{},"body":{"classes/GetUserHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["user.friendsone",{"_index":441,"title":{},"body":{"entities/Friendship.html":{}}}],["user.friendstwo",{"_index":446,"title":{},"body":{"entities/Friendship.html":{}}}],["user.handler",{"_index":1027,"title":{},"body":{"modules/UserModule.html":{}}}],["user.handler.ts",{"_index":413,"title":{},"body":{"classes/DeleteUserHandler.html":{},"classes/GetUserHandler.html":{},"classes/UpdateUserHandler.html":{},"coverage.html":{}}}],["user.handler.ts:10",{"_index":414,"title":{},"body":{"classes/DeleteUserHandler.html":{},"classes/GetUserHandler.html":{}}}],["user.handler.ts:13",{"_index":922,"title":{},"body":{"classes/UpdateUserHandler.html":{}}}],["user.handler.ts:16",{"_index":672,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["user.handler.ts:17",{"_index":416,"title":{},"body":{"classes/DeleteUserHandler.html":{}}}],["user.handler.ts:20",{"_index":924,"title":{},"body":{"classes/UpdateUserHandler.html":{}}}],["user.id",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"classes/UpdateUserHandler.html":{}}}],["user.id=:currentuser",{"_index":662,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["user.id=:userid",{"_index":659,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["user.interface",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FriendshipController.html":{}}}],["user.interface.ts",{"_index":845,"title":{},"body":{"interfaces/RequestUser.html":{},"coverage.html":{}}}],["user.password",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthService.html":{}}}],["user.query",{"_index":602,"title":{},"body":{"injectables/FriendshipService.html":{},"classes/GetUserHandler.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.query.ts",{"_index":708,"title":{},"body":{"classes/GetUserQuery.html":{},"coverage.html":{}}}],["user.query.ts:1",{"_index":709,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.query.ts:2",{"_index":711,"title":{},"body":{"classes/GetUserQuery.html":{}}}],["user.response",{"_index":1021,"title":{},"body":{"classes/UserListResponse.html":{}}}],["user.service",{"_index":999,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.username",{"_index":684,"title":{},"body":{"classes/GetUserHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["user.usertype",{"_index":686,"title":{},"body":{"classes/GetUserHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["user/cqrs/command/set",{"_index":332,"title":{},"body":{"classes/AuthService.html":{}}}],["user/cqrs/query/get",{"_index":601,"title":{},"body":{"injectables/FriendshipService.html":{}}}],["user/domain/entities/user.entity",{"_index":28,"title":{},"body":{"classes/AcceptFriendshipRequestCommand.html":{},"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestHandler.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestHandler.html":{},"entities/Friendship.html":{},"modules/FriendshipModule.html":{},"entities/FriendshipRequest.html":{},"classes/GetStatusFriendshipQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEvent.html":{},"interfaces/RequestUser.html":{},"classes/SendFriendshipRequestCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestHandler.html":{}}}],["user/user.service",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{}}}],["user1",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user2",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user2@email.com",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user@email.com",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":978,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdto",{"_index":913,"title":{"classes/UserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":36,"title":{},"body":{"classes/AcceptFriendshipRequestEvent.html":{},"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/AuthService.html":{},"classes/CancelFriendshipRequestCommand.html":{},"classes/CancelFriendshipRequestEvent.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/DeleteUserCommand.html":{},"controllers/FriendshipController.html":{},"classes/FriendshipDto.html":{},"classes/FriendshipRequestDto.html":{},"classes/GetReceivedFriendshipRequestQuery.html":{},"classes/GetSentFriendshipRequestQuery.html":{},"classes/GetStatusFriendshipHandler.html":{},"classes/GetUserIfRefreshTokenMatchesQuery.html":{},"classes/GetUserQuery.html":{},"classes/RemoveFriendshipEvent.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/RemoveRefreshTokenCommand.html":{},"classes/SendFriendshipRequestEvent.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/SetCurrentRefreshTokenCommand.html":{},"interfaces/TokenPayload.html":{},"classes/UpdateUserCommand.html":{},"injectables/UserService.html":{}}}],["userlist",{"_index":1017,"title":{},"body":{"classes/UserListResponse.html":{}}}],["userlist.foreach((user",{"_index":681,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["userlistresponse",{"_index":675,"title":{"classes/UserListResponse.html":{}},"body":{"classes/GetUserHandler.html":{},"classes/UserListResponse.html":{},"coverage.html":{}}}],["userlistresponse([user1",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userlistresponse.userlist",{"_index":687,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["userlistresponse.userlist.push",{"_index":682,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["usermodule",{"_index":145,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterCommand.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserResponse.html":{},"miscellaneous/variables.html":{}}}],["usernamefield",{"_index":757,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrepository",{"_index":311,"title":{},"body":{"classes/AuthService.html":{},"classes/DeleteUserHandler.html":{},"classes/GetUserHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["userrepositorymock",{"_index":1033,"title":{"classes/UserRepositoryMock.html":{}},"body":{"classes/UserRepositoryMock.html":{},"coverage.html":{}}}],["userresponse",{"_index":673,"title":{"classes/UserResponse.html":{}},"body":{"classes/GetUserHandler.html":{},"classes/UpdateUserHandler.html":{},"classes/UserListResponse.html":{},"classes/UserResponse.html":{},"coverage.html":{}}}],["userresponse('1",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userresponse('2",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userresponse(user.id",{"_index":683,"title":{},"body":{"classes/GetUserHandler.html":{}}}],["users",{"_index":1020,"title":{},"body":{"classes/UserListResponse.html":{}}}],["userservice",{"_index":236,"title":{"injectables/UserService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtRefreshTokenStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usertype",{"_index":934,"title":{},"body":{"entities/User.html":{},"classes/UserResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["usertype.user",{"_index":974,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["util/config/winston",{"_index":66,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{}}}],["util/error/errorsevent",{"_index":101,"title":{},"body":{"classes/AcceptFriendshipRequestHandler.html":{},"classes/CancelFriendshipRequestHandler.html":{},"classes/GetUserIfRefreshTokenMatchesHandler.html":{},"classes/RemoveFriendshipHandler.html":{},"classes/RemoveRefreshTokenHandler.html":{},"classes/SendFriendshipRequestHandler.html":{},"classes/SetCurrentRefreshTokenHandler.html":{}}}],["validate",{"_index":720,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterHandler.html":{},"classes/UpdateUserHandler.html":{}}}],["validate(newuser",{"_index":785,"title":{},"body":{"classes/RegisterHandler.html":{}}}],["validate(payload",{"_index":742,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":723,"title":{},"body":{"injectables/JwtRefreshTokenStrategy.html":{}}}],["validate(updateusercommand",{"_index":928,"title":{},"body":{"classes/UpdateUserHandler.html":{}}}],["validate(username",{"_index":754,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validator",{"_index":772,"title":{},"body":{"classes/RegisterHandler.html":{},"classes/SignInDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateUserHandler.html":{},"entities/User.html":{},"dependencies.html":{}}}],["value",{"_index":53,"title":{},"body":{"classes/AcceptFriendshipRequestEventHandler.html":{},"classes/CancelFriendshipRequestEventHandler.html":{},"classes/DeleteUserHandler.html":{},"classes/RegisterHandler.html":{},"classes/RemoveFriendshipEventHandler.html":{},"classes/SendFriendshipRequestEventHandler.html":{},"classes/UpdateUserHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1239,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifypassword",{"_index":307,"title":{},"body":{"classes/AuthService.html":{}}}],["verifypassword(plaintextpassword",{"_index":322,"title":{},"body":{"classes/AuthService.html":{}}}],["version",{"_index":1236,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":1190,"title":{},"body":{"index.html":{}}}],["website",{"_index":1222,"title":{},"body":{"index.html":{}}}],["where('(friendone.id=:currentuser",{"_index":650,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["where('friendone.id=:friendoneid",{"_index":817,"title":{},"body":{"classes/RemoveFriendshipHandler.html":{}}}],["where('sender.id=:currentuser",{"_index":658,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["where('sender.id=:id",{"_index":640,"title":{},"body":{"classes/GetSentFriendshipRequestHandler.html":{}}}],["where('sender.id=:userid",{"_index":661,"title":{},"body":{"classes/GetStatusFriendshipHandler.html":{}}}],["where('user.id=:id",{"_index":629,"title":{},"body":{"classes/GetReceivedFriendshipHandler.html":{}}}],["where('user.id=:userid",{"_index":396,"title":{},"body":{"classes/CancelFriendshipRequestHandler.html":{}}}],["winston",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["winston.createlogger",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.file",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":346,"title":{},"body":{"classes/AuthService.html":{}}}],["yes",{"_index":710,"title":{},"body":{"classes/GetUserQuery.html":{},"classes/UserListResponse.html":{}}}],["you'd",{"_index":1211,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FriendshipModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AcceptFriendshipRequestCommand.html":{"url":"classes/AcceptFriendshipRequestCommand.html","title":"class - AcceptFriendshipRequestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptFriendshipRequestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/command/accept-friendship-request.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                friendOne\n                            \n                            \n                                    Public\n                                    Readonly\n                                friendTwo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(friendOne: User, friendTwo: User)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/command/accept-friendship-request.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        friendOne\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        friendTwo\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        friendOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/command/accept-friendship-request.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        friendTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/command/accept-friendship-request.command.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../user/domain/entities/user.entity';\n\nexport class AcceptFriendshipRequestCommand {\n  constructor(\n    public readonly friendOne: User,\n    public readonly friendTwo: User,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptFriendshipRequestEvent.html":{"url":"classes/AcceptFriendshipRequestEvent.html","title":"class - AcceptFriendshipRequestEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptFriendshipRequestEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/event/accept-friendship-request.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                senderId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(senderId: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/event/accept-friendship-request.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        senderId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        senderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event/accept-friendship-request.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event/accept-friendship-request.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../user/domain/entities/user.entity';\n\nexport class AcceptFriendshipRequestEvent {\n  constructor(\n    public readonly senderId: string,\n    public readonly userId: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptFriendshipRequestEventHandler.html":{"url":"classes/AcceptFriendshipRequestEventHandler.html","title":"class - AcceptFriendshipRequestEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptFriendshipRequestEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/event-handler/accept-friendship-request.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('AcceptFriendshipRequest')\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event-handler/accept-friendship-request.event-handler.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: AcceptFriendshipRequestEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/event-handler/accept-friendship-request.event-handler.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                AcceptFriendshipRequestEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { AcceptFriendshipRequestEvent } from '../event/accept-friendship-request.event';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../../../../util/config/winston-logger.config';\n\n@EventsHandler(AcceptFriendshipRequestEvent)\nexport class AcceptFriendshipRequestEventHandler\n  implements IEventHandler\n{\n  logger_console = new Logger('AcceptFriendshipRequest');\n\n  handle(event: AcceptFriendshipRequestEvent): any {\n    logger.info(\n      'UserId ' + event.senderId + ' become friend with UserId ' + event.userId,\n    );\n\n    this.logger_console.log(\n      'UserId ' + event.senderId + ' become friend with UserId ' + event.userId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcceptFriendshipRequestHandler.html":{"url":"classes/AcceptFriendshipRequestHandler.html","title":"class - AcceptFriendshipRequestHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcceptFriendshipRequestHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/handler/accept-friendship-request.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(friendshipRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/handler/accept-friendship-request.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        friendshipRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: AcceptFriendshipRequestCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/handler/accept-friendship-request.handler.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                AcceptFriendshipRequestCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { AcceptFriendshipRequestCommand } from '../command/accept-friendship-request.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FriendshipRequest } from '../../domain/entities/friendship-request.entity';\nimport { Repository } from 'typeorm';\nimport { User } from '../../../user/domain/entities/user.entity';\nimport { Friendship } from '../../domain/entities/friendship.entity';\nimport { AcceptFriendshipRequestEvent } from '../event/accept-friendship-request.event';\nimport { ErrorsEvent } from '../../../../util/error/errorsEvent';\n\n@CommandHandler(AcceptFriendshipRequestCommand)\nexport class AcceptFriendshipRequestHandler\n  implements ICommandHandler\n{\n  constructor(\n    @InjectRepository(Friendship)\n    private friendshipRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: AcceptFriendshipRequestCommand): Promise {\n    try {\n      const friendship = this.friendshipRepository.create({\n        friendOne: command.friendOne,\n        friendTwo: command.friendTwo,\n      });\n\n      this.eventBus.publish(\n        new AcceptFriendshipRequestEvent(\n          command.friendOne.id,\n          command.friendTwo.id,\n        ),\n      );\n      return this.friendshipRepository.save(friendship);\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorsEvent('AcceptFriendshipRequestHandler', error),\n      );\n      //TODO: Envoyer une bonne erreur d'user\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nFriendshipModule\n\nFriendshipModule\n\nAppModule -->\n\nFriendshipModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FriendshipModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Logger, Module } from \"@nestjs/common\";\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { config } from 'dotenv';\nimport { AuthModule } from './api/auth/auth.module';\nimport { UserModule } from './api/user/user.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './api/user/domain/entities/user.entity';\nimport { Friendship } from './api/friendship/domain/entities/friendship.entity';\nimport { FriendshipRequest } from './api/friendship/domain/entities/friendship-request.entity';\nimport { FriendshipModule } from './api/friendship/friendship.module';\n\nconfig();\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: '172.17.0.2',\n      port: 5432,\n      username: 'postgres',\n      password: 'postgres',\n      database: 'postgres',\n      entities: [User, Friendship, FriendshipRequest],\n      synchronize: true,\n      logging: false,\n    }),\n    UserModule,\n    AuthModule,\n    FriendshipModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                    Async\n                                logOut\n                            \n                            \n                                refresh\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('actual')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Post('/signout')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('refresh')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(request: RequestUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(200)@UseGuards(LocalAuthenticationGuard)@Post('/signin')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/signup')\n                \n            \n\n            \n                \n                    Defined in src/api/auth/auth.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { SignInDto } from './dto/sign-in.dto';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { AuthService } from './auth.service';\nimport {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  Logger,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { User } from '../user/domain/entities/user.entity';\nimport { LocalAuthenticationGuard } from './guards/auth.guard';\nimport { RequestUser } from './interface/request-user.interface';\nimport JwtAuthenticationGuard from './guards/jwt-auth.guard';\nimport { Response } from 'express';\nimport JwtRefreshGuard from './guards/jwt-refresh-token.guard';\nimport { UserService } from '../user/user.service';\nimport { JwtRefreshTokenStrategy } from \"./strategy/jwt-refresh-token.strategy\";\n\n@Controller('auth')\nexport class AuthController {\n  private logger = new Logger('AuthController');\n\n  constructor(\n    private readonly userService: UserService,\n    private readonly authService: AuthService,\n  ) {}\n\n  @Post('/signup')\n  async signUp(@Body() signUpDto: SignUpDto): Promise {\n    return await this.authService.signup(signUpDto);\n  }\n\n  @HttpCode(200)\n  @UseGuards(LocalAuthenticationGuard)\n  @Post('/signin')\n  async signIn(@Req() request: RequestUser, @Res() response: Response) {\n    const { user }  = request;\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(user.id);\n    const refreshTokenCookie = this.authService.getCookieWithJwtRefreshToken(\n      user.id,\n    );\n    await this.userService.setCurrentRefreshToken(\n      refreshTokenCookie.token,\n      user.id,\n    );\n    request.res.setHeader('Set-Cookie', [\n      accessTokenCookie,\n      refreshTokenCookie.cookie,\n    ]);\n    user.password = undefined;\n    return response.send(user);\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Post('/signout')\n  async logOut(@Req() request: RequestUser, @Res() response: Response) {\n    await this.userService.removeRefreshToken(request.user.id);\n    response.setHeader('Set-Cookie', this.authService.getCookieForLogOut());\n    return response.sendStatus(200);\n  }\n\n  //getCurrentUser\n  @UseGuards(JwtRefreshGuard)\n  @Get('actual')\n  authenticate(@Req() request: RequestUser) {\n    const user = request.user;\n    return user;\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Get('refresh')\n  refresh(@Req() request: RequestUser) {\n    const accessTokenCookie = this.authService.getCookieWithJwtToken(\n      request.user.id,\n    );\n\n    request.res.setHeader('Set-Cookie', accessTokenCookie);\n    return request.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtRefreshTokenStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './strategy/passport-local.strategy';\nimport { AuthController } from './auth.controller';\nimport { JwtModule, JwtService } from '@nestjs/jwt';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { config } from 'dotenv';\nimport { User } from '../user/domain/entities/user.entity';\nimport { RegisterHandler } from './cqrs/handler/register.handler';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { JwtRefreshTokenStrategy } from './strategy/jwt-refresh-token.strategy';\nimport { UserService } from \"../user/user.service\";\n\nconfig();\n\n@Module({\n  imports: [\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: {\n        expiresIn: process.env.JWT_EXPIRATION_TIME,\n      },\n    }),\n    PassportModule,\n    TypeOrmModule.forFeature([User]),\n    ConfigModule,\n    CqrsModule,\n  ],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    JwtRefreshTokenStrategy,\n    RegisterHandler,\n    UserService,\n  ],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthService.html":{"url":"classes/AuthService.html","title":"class - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/auth.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCookieForLogOut\n                            \n                            \n                                    Public\n                                getCookieWithJwtRefreshToken\n                            \n                            \n                                    Public\n                                getCookieWithJwtToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                signup\n                            \n                            \n                                    Public\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtService: JwtService, commandBus: CommandBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieForLogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieForLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { cookie: string; token: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getCookieWithJwtToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCookieWithJwtToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(username: string, plainTextPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                    \n                    signup(signUpDto: SignUpDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        verifyPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(plainTextPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainTextPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { User } from '../user/domain/entities/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { TokenPayload } from './interface/token-payload.interface';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { SetCurrentRefreshTokenCommand } from '../user/cqrs/command/set-current-refresh-token.command';\nimport { CommandBus } from '@nestjs/cqrs';\nimport { SignUpDto } from './dto/sign-up.dto';\nimport { RegisterCommand } from './cqrs/command/register.command';\n\nexport class AuthService {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n    private readonly jwtService: JwtService,\n    private readonly commandBus: CommandBus,\n  ) {}\n\n  async signup(signUpDto: SignUpDto) {\n    return this.commandBus.execute(\n      new RegisterCommand(\n        signUpDto.username,\n        signUpDto.email,\n        signUpDto.password,\n      ),\n    );\n  }\n\n  async login(username: string, plainTextPassword: string): Promise {\n    try {\n      const user = await this.userRepository.findOneOrFail({\n        where: [{ username: username }],\n        select: ['id', 'username', 'password'],\n      });\n      if (!(await this.verifyPassword(plainTextPassword, user.password))) {\n        throw new HttpException(\n          'Wrong credentials provided',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n      user.password = undefined;\n      return user;\n    } catch (error) {\n      throw new HttpException(\n        'Wrong credentials provided',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n\n  public async verifyPassword(\n    plainTextPassword: string,\n    hashedPassword: string,\n  ) {\n    return await bcrypt.compare(plainTextPassword, hashedPassword);\n  }\n\n  public getCookieWithJwtToken(userId: string) {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_ACCESS_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}s`,\n    });\n    return `Authentication=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_ACCESS_TOKEN_EXPIRATION_TIME}`;\n  }\n\n  public getCookieWithJwtRefreshToken(userId: string) {\n    const payload: TokenPayload = { userId };\n    const token = this.jwtService.sign(payload, {\n      secret: process.env.JWT_REFRESH_TOKEN_SECRET,\n      expiresIn: `${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}s`,\n    });\n    const cookie = `Refresh=${token}; HttpOnly; Path=/; Max-Age=${process.env.JWT_REFRESH_TOKEN_EXPIRATION_TIME}`;\n    return {\n      cookie,\n      token,\n    };\n  }\n\n  public getCookieForLogOut() {\n    return [\n      'Authentication=; HttpOnly; Path=/; Max-Age=0',\n      'Refresh=; HttpOnly; Path=/; Max-Age=0',\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CancelFriendshipRequestCommand.html":{"url":"classes/CancelFriendshipRequestCommand.html","title":"class - CancelFriendshipRequestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CancelFriendshipRequestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/command/cancel-friendship-request.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                sender\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sender: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/command/cancel-friendship-request.command.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sender\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        sender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/command/cancel-friendship-request.command.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/command/cancel-friendship-request.command.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CancelFriendshipRequestCommand {\n  constructor(public readonly sender: string, public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CancelFriendshipRequestEvent.html":{"url":"classes/CancelFriendshipRequestEvent.html","title":"class - CancelFriendshipRequestEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CancelFriendshipRequestEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/event/cancel-friendship-request.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                senderId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(senderId: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/event/cancel-friendship-request.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        senderId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        senderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event/cancel-friendship-request.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event/cancel-friendship-request.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../user/domain/entities/user.entity';\n\nexport class CancelFriendshipRequestEvent {\n  constructor(\n    public readonly senderId: string,\n    public readonly userId: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CancelFriendshipRequestEventHandler.html":{"url":"classes/CancelFriendshipRequestEventHandler.html","title":"class - CancelFriendshipRequestEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CancelFriendshipRequestEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/event-handler/cancel-friendship-request-event.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('CancelFriendshipRequest')\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event-handler/cancel-friendship-request-event.handler.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: CancelFriendshipRequestEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/event-handler/cancel-friendship-request-event.handler.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                CancelFriendshipRequestEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { CancelFriendshipRequestEvent } from '../event/cancel-friendship-request.event';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../../../../util/config/winston-logger.config';\n\n@EventsHandler(CancelFriendshipRequestEvent)\nexport class CancelFriendshipRequestEventHandler\n  implements IEventHandler\n{\n  logger_console = new Logger('CancelFriendshipRequest');\n\n  handle(event: CancelFriendshipRequestEvent): any {\n    logger.info(\n      'UserId ' +\n        event.senderId +\n        ' cancel friendship-request to UserId ' +\n        event.userId,\n    );\n\n    this.logger_console.log(\n      'UserId ' +\n        event.senderId +\n        ' cancel friendship-request to UserId ' +\n        event.userId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CancelFriendshipRequestHandler.html":{"url":"classes/CancelFriendshipRequestHandler.html","title":"class - CancelFriendshipRequestHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CancelFriendshipRequestHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/handler/cancel-friendship-request.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(friendRequestRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/handler/cancel-friendship-request.handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        friendRequestRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: CancelFriendshipRequestCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/handler/cancel-friendship-request.handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                CancelFriendshipRequestCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CancelFriendshipRequestCommand } from '../command/cancel-friendship-request.command';\nimport { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FriendshipRequest } from '../../domain/entities/friendship-request.entity';\nimport { Repository } from 'typeorm';\nimport { User } from '../../../user/domain/entities/user.entity';\nimport { ErrorsEvent } from '../../../../util/error/errorsEvent';\nimport { CancelFriendshipRequestEvent } from '../event/cancel-friendship-request.event';\n\n@CommandHandler(CancelFriendshipRequestCommand)\nexport class CancelFriendshipRequestHandler\n  implements ICommandHandler\n{\n  constructor(\n    @InjectRepository(FriendshipRequest)\n    private friendRequestRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: CancelFriendshipRequestCommand): Promise {\n    try {\n      const friendRequest: FriendshipRequest =\n        await this.friendRequestRepository\n          .createQueryBuilder()\n          .leftJoinAndSelect('FriendshipRequest.user', 'User')\n          .where('User.id=:userId', { userId: command.userId })\n          .leftJoinAndSelect('FriendshipRequest.sender', 'Sender')\n          .andWhere('Sender.id=:senderId', { senderId: command.sender })\n          .getOne();\n      this.eventBus.publish(\n        new CancelFriendshipRequestEvent(command.sender, command.userId),\n      );\n      await this.friendRequestRepository.remove(friendRequest);\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorsEvent('CancelFriendshipRequestHandler', error),\n      );\n\n      //TODO: Envoyer une bonne erreur d'user\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserCommand.html":{"url":"classes/DeleteUserCommand.html","title":"class - DeleteUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/delete-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/delete-user.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class DeleteUserCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserHandler.html":{"url":"classes/DeleteUserHandler.html","title":"class - DeleteUserHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/delete-user.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/delete-user.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('DeleteUserHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/delete-user.handler.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: DeleteUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/delete-user.handler.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                DeleteUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { DeleteUserCommand } from '../command/delete-user.command';\nimport { Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../domain/entities/user.entity';\n\n@CommandHandler(DeleteUserCommand)\nexport class DeleteUserHandler implements ICommandHandler {\n  logger = new Logger('DeleteUserHandler');\n\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(command: DeleteUserCommand): Promise {\n    await this.userRepository.delete(command.userId);\n    this.logger.verbose(\n      'User with id : ' + command.userId + ' have been deleted',\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorEventHandler.html":{"url":"classes/ErrorEventHandler.html","title":"class - ErrorEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/error/error.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: ErrorsEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/util/error/error.event-handler.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                ErrorsEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorsEvent } from './errorsEvent';\nimport { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../config/winston-logger.config';\n\n@EventsHandler(ErrorsEvent)\nexport class ErrorEventHandler implements IEventHandler {\n  handle(event: ErrorsEvent): any {\n    const logger_console = new Logger(event.localisation);\n    logger_console.error(event.error);\n\n    logger.error(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorsEvent.html":{"url":"classes/ErrorsEvent.html","title":"class - ErrorsEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorsEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/error/errorsEvent.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                error\n                            \n                            \n                                    Public\n                                    Readonly\n                                localisation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localisation: string, error: string)\n                    \n                \n                        \n                            \n                                Defined in src/util/error/errorsEvent.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localisation\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/error/errorsEvent.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        localisation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/util/error/errorsEvent.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ErrorsEvent {\n  constructor(\n    public readonly localisation: string,\n    public readonly error: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Friendship.html":{"url":"entities/Friendship.html","title":"entity - Friendship","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Friendship\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/domain/entities/friendship.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                friendOne\n                            \n                            \n                                friendTwo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        friendOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.friendsOne, {primary: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/domain/entities/friendship.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friendTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.friendsTwo, {primary: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/domain/entities/friendship.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, JoinColumn, ManyToOne, OneToOne } from 'typeorm';\nimport { User } from '../../../user/domain/entities/user.entity';\n\n@Entity()\nexport class Friendship {\n  @ManyToOne(() => User, (user) => user.friendsOne, {\n    primary: true,\n    onDelete: 'CASCADE',\n  })\n  friendOne: User;\n  @ManyToOne(() => User, (user) => user.friendsTwo, {\n    primary: true,\n    onDelete: 'CASCADE',\n  })\n  friendTwo: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FriendshipController.html":{"url":"controllers/FriendshipController.html","title":"controller - FriendshipController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FriendshipController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/friendship.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                friendship\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptFriendshipRequest\n                            \n                            \n                                cancelFriendshipRequest\n                            \n                            \n                                receivedFriendshipRequest\n                            \n                            \n                                rejectFriendshipRequest\n                            \n                            \n                                removeFriendship\n                            \n                            \n                                sendFriendshipRequest\n                            \n                            \n                                sentFriendshipRequest\n                            \n                            \n                                statusFriendship\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptFriendshipRequest\n                        \n                    \n                \n            \n            \n                \nacceptFriendshipRequest(request: RequestUser, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/api/friendship/friendship.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelFriendshipRequest\n                        \n                    \n                \n            \n            \n                \ncancelFriendshipRequest(request: RequestUser, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Delete(':id/cancel')\n                \n            \n\n            \n                \n                    Defined in src/api/friendship/friendship.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        receivedFriendshipRequest\n                        \n                    \n                \n            \n            \n                \nreceivedFriendshipRequest(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('received-friendship-request')\n                \n            \n\n            \n                \n                    Defined in src/api/friendship/friendship.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rejectFriendshipRequest\n                        \n                    \n                \n            \n            \n                \nrejectFriendshipRequest(request: RequestUser, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Delete(':id/reject')\n                \n            \n\n            \n                \n                    Defined in src/api/friendship/friendship.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFriendship\n                        \n                    \n                \n            \n            \n                \nremoveFriendship(request: RequestUser, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Delete(':id/remove')\n                \n            \n\n            \n                \n                    Defined in src/api/friendship/friendship.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendFriendshipRequest\n                        \n                    \n                \n            \n            \n                \nsendFriendshipRequest(request: RequestUser, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Post(':id')\n                \n            \n\n            \n                \n                    Defined in src/api/friendship/friendship.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sentFriendshipRequest\n                        \n                    \n                \n            \n            \n                \nsentFriendshipRequest(request: RequestUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get('sent-friendship-request')\n                \n            \n\n            \n                \n                    Defined in src/api/friendship/friendship.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        statusFriendship\n                        \n                    \n                \n            \n            \n                \nstatusFriendship(request: RequestUser, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtRefreshGuard)@Get(':id/friendship-status')\n                \n            \n\n            \n                \n                    Defined in src/api/friendship/friendship.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                RequestUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  Req,\n  UseGuards,\n} from '@nestjs/common';\nimport { RequestUser } from '../auth/interface/request-user.interface';\nimport { FriendshipService } from './friendship.service';\nimport { FriendshipRequestDto } from './domain/dto/friendship-request.dto';\nimport { FriendshipDto } from './domain/dto/friendship.dto';\nimport JwtRefreshGuard from '../auth/guards/jwt-refresh-token.guard';\n\n@Controller('friendship')\nexport class FriendshipController {\n  constructor(private readonly friendshipService: FriendshipService) {}\n\n  @UseGuards(JwtRefreshGuard)\n  @Get('sent-friendship-request')\n  sentFriendshipRequest(@Req() request: RequestUser) {\n    return this.friendshipService.sentFriendshipRequest(\n      new FriendshipRequestDto(request.user.id),\n    );\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Get('received-friendship-request')\n  receivedFriendshipRequest(@Req() request: RequestUser) {\n    return this.friendshipService.receivedFriendshipRequest(\n      new FriendshipRequestDto(request.user.id),\n    );\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Get(':id/friendship-status')\n  statusFriendship(@Req() request: RequestUser, @Param('id') userId: string) {\n    return this.friendshipService.statusFriendship(\n      new FriendshipDto(request.user.id, userId),\n    );\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Post(':id')\n  sendFriendshipRequest(\n    @Req() request: RequestUser,\n    @Param('id') userId: string,\n  ) {\n    return this.friendshipService.sendFriendshipRequest(\n      new FriendshipDto(request.user.id, userId),\n    );\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Put(':id')\n  acceptFriendshipRequest(\n    @Req() request: RequestUser,\n    @Param('id') userId: string,\n  ) {\n    return this.friendshipService.acceptFriendshipRequest(\n      new FriendshipDto(request.user.id, userId),\n    );\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Delete(':id/cancel')\n  cancelFriendshipRequest(\n    @Req() request: RequestUser,\n    @Param('id') userId: string,\n  ) {\n    return this.friendshipService.cancelFriendshipRequest(\n      new FriendshipDto(request.user.id, userId),\n    );\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Delete(':id/reject')\n  rejectFriendshipRequest(\n    @Req() request: RequestUser,\n    @Param('id') userId: string,\n  ) {\n    return this.friendshipService.rejectFriendshipRequest(\n      new FriendshipDto(request.user.id, userId),\n    );\n  }\n\n  @UseGuards(JwtRefreshGuard)\n  @Delete(':id/remove')\n  removeFriendship(@Req() request: RequestUser, @Param('id') userId: string) {\n    return this.friendshipService.removeFriendship(\n      new FriendshipDto(request.user.id, userId),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FriendshipDto.html":{"url":"classes/FriendshipDto.html","title":"class - FriendshipDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FriendshipDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/domain/dto/friendship.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                senderId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(senderId: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/domain/dto/friendship.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        senderId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        senderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/domain/dto/friendship.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/domain/dto/friendship.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FriendshipDto {\n  constructor(\n    public readonly senderId: string,\n    public readonly userId: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FriendshipModule.html":{"url":"modules/FriendshipModule.html","title":"module - FriendshipModule","body":"\n                   \n\n\n\n\n    Modules\n    FriendshipModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FriendshipModule\n\n\n\ncluster_FriendshipModule_providers\n\n\n\n\nFriendshipService\n\nFriendshipService\n\n\n\nFriendshipModule\n\nFriendshipModule\n\nFriendshipModule -->\n\nFriendshipService->FriendshipModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/friendship/friendship.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FriendshipService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FriendshipController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../user/domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { Friendship } from './domain/entities/friendship.entity';\nimport { FriendshipRequest } from './domain/entities/friendship-request.entity';\nimport { AcceptFriendshipRequestHandler } from './cqrs/handler/accept-friendship-request.handler';\nimport { CancelFriendshipRequestHandler } from './cqrs/handler/cancel-friendship-request.handler';\nimport { RemoveFriendshipHandler } from './cqrs/handler/remove-friendship.handler';\nimport { SendFriendshipRequestHandler } from './cqrs/handler/send-friendship-request.handler';\nimport { FriendshipController } from './friendship.controller';\nimport { GetStatusFriendshipHandler } from './cqrs/handler/get-status-friendship.handler';\nimport { GetReceivedFriendshipHandler } from './cqrs/handler/get-received-friendship.handler';\nimport { GetSentFriendshipRequestHandler } from './cqrs/handler/get-sent-friendship-request.handler';\nimport { AcceptFriendshipRequestEventHandler } from './cqrs/event-handler/accept-friendship-request.event-handler';\nimport { CancelFriendshipRequestEventHandler } from './cqrs/event-handler/cancel-friendship-request-event.handler';\nimport { RemoveFriendshipEventHandler } from './cqrs/event-handler/remove-friendship.event-handler';\nimport { SendFriendshipRequestEventHandler } from './cqrs/event-handler/send-friendship-request.event-handler';\nimport { FriendshipService } from './friendship.service';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User, Friendship, FriendshipRequest]),\n    CqrsModule,\n  ],\n  controllers: [FriendshipController],\n  providers: [\n    FriendshipService,\n    AcceptFriendshipRequestHandler,\n    AcceptFriendshipRequestEventHandler,\n    CancelFriendshipRequestHandler,\n    CancelFriendshipRequestEventHandler,\n    RemoveFriendshipHandler,\n    RemoveFriendshipEventHandler,\n    SendFriendshipRequestHandler,\n    SendFriendshipRequestEventHandler,\n    GetStatusFriendshipHandler,\n    GetReceivedFriendshipHandler,\n    GetSentFriendshipRequestHandler,\n  ],\n})\nexport class FriendshipModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/FriendshipRequest.html":{"url":"entities/FriendshipRequest.html","title":"entity - FriendshipRequest","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  FriendshipRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/domain/entities/friendship-request.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                sender\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/domain/entities/friendship-request.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user, {primary: true, eager: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/domain/entities/friendship-request.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user, {primary: true, onDelete: 'CASCADE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/domain/entities/friendship-request.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { CreateDateColumn, Entity, ManyToOne } from 'typeorm';\nimport { User } from '../../../user/domain/entities/user.entity';\n\n@Entity()\nexport class FriendshipRequest {\n  @ManyToOne(() => User, (user) => user, {\n    primary: true,\n    eager: true,\n    onDelete: 'CASCADE',\n  })\n  sender: User;\n  @ManyToOne(() => User, (user) => user, { primary: true, onDelete: 'CASCADE' })\n  user: User;\n\n  @CreateDateColumn()\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FriendshipRequestDto.html":{"url":"classes/FriendshipRequestDto.html","title":"class - FriendshipRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FriendshipRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/domain/dto/friendship-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/domain/dto/friendship-request.dto.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/domain/dto/friendship-request.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class FriendshipRequestDto {\n  constructor(\n    public readonly userId: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FriendshipService.html":{"url":"injectables/FriendshipService.html","title":"injectable - FriendshipService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FriendshipService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/friendship.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                acceptFriendshipRequest\n                            \n                            \n                                    Async\n                                cancelFriendshipRequest\n                            \n                            \n                                    Async\n                                receivedFriendshipRequest\n                            \n                            \n                                    Async\n                                rejectFriendshipRequest\n                            \n                            \n                                    Async\n                                removeFriendship\n                            \n                            \n                                    Async\n                                sendFriendshipRequest\n                            \n                            \n                                    Async\n                                sentFriendshipRequest\n                            \n                            \n                                    Async\n                                statusFriendship\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/friendship.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        acceptFriendshipRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    acceptFriendshipRequest(commandArgs: FriendshipDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/friendship.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commandArgs\n                                    \n                                                FriendshipDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        cancelFriendshipRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    cancelFriendshipRequest(commandArgs: FriendshipDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/friendship.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commandArgs\n                                    \n                                                FriendshipDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        receivedFriendshipRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    receivedFriendshipRequest(queryArs: FriendshipRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/friendship.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryArs\n                                    \n                                                FriendshipRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rejectFriendshipRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    rejectFriendshipRequest(commandArgs: FriendshipDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/friendship.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commandArgs\n                                    \n                                                FriendshipDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeFriendship\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFriendship(commandArgs: FriendshipDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/friendship.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commandArgs\n                                    \n                                                FriendshipDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendFriendshipRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendFriendshipRequest(commandArgs: FriendshipDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/friendship.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commandArgs\n                                    \n                                                FriendshipDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sentFriendshipRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    sentFriendshipRequest(queryArs: FriendshipRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/friendship.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryArs\n                                    \n                                                FriendshipRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        statusFriendship\n                        \n                    \n                \n            \n            \n                \n                    \n                    statusFriendship(queryArs: FriendshipDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/friendship.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryArs\n                                    \n                                                FriendshipDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { Injectable } from '@nestjs/common';\nimport { SendFriendshipRequestCommand } from './cqrs/command/send-friendship-request.command';\nimport { AcceptFriendshipRequestCommand } from './cqrs/command/accept-friendship-request.command';\nimport { CancelFriendshipRequestCommand } from './cqrs/command/cancel-friendship-request.command';\nimport { RemoveFriendshipCommand } from './cqrs/command/remove-friendship.command';\nimport { GetSentFriendshipRequestQuery } from './cqrs/query/get-sent-friendship-request.query';\nimport { GetReceivedFriendshipRequestQuery } from './cqrs/query/get-received-friendship-request.query';\nimport { GetStatusFriendshipQuery } from './cqrs/query/get-status-friendship.query';\nimport { FriendshipDto } from './domain/dto/friendship.dto';\nimport { FriendshipRequestDto } from './domain/dto/friendship-request.dto';\nimport { GetUserQuery } from '../user/cqrs/query/get-user.query';\n\n@Injectable()\nexport class FriendshipService {\n  constructor(private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  async sentFriendshipRequest(queryArs: FriendshipRequestDto) {\n    return this.queryBus.execute(\n      new GetSentFriendshipRequestQuery(queryArs.userId),\n    );\n  }\n\n  async receivedFriendshipRequest(queryArs: FriendshipRequestDto) {\n    return this.queryBus.execute(\n      new GetReceivedFriendshipRequestQuery(queryArs.userId),\n    );\n  }\n\n  async statusFriendship(queryArs: FriendshipDto) {\n    return this.queryBus.execute(\n      new GetStatusFriendshipQuery(queryArs.senderId, queryArs.userId),\n    );\n  }\n\n  async sendFriendshipRequest(commandArgs: FriendshipDto) {\n    const sender = await this.queryBus.execute(\n      new GetUserQuery(commandArgs.senderId),\n    );\n    const user = await this.queryBus.execute(\n      new GetUserQuery(commandArgs.userId),\n    );\n    return this.commandBus.execute(\n      new SendFriendshipRequestCommand(sender, user),\n    );\n  }\n\n  async acceptFriendshipRequest(commandArgs: FriendshipDto) {\n    const friendOne = await this.queryBus.execute(\n      new GetUserQuery(commandArgs.senderId),\n    );\n    const friendTwo = await this.queryBus.execute(\n      new GetUserQuery(commandArgs.userId),\n    );\n    await this.commandBus.execute(\n      new CancelFriendshipRequestCommand(\n        commandArgs.userId,\n        commandArgs.senderId,\n      ),\n    );\n    return await this.commandBus.execute(\n      new AcceptFriendshipRequestCommand(friendOne, friendTwo),\n    );\n  }\n\n  async cancelFriendshipRequest(commandArgs: FriendshipDto) {\n    return this.commandBus.execute(\n      new CancelFriendshipRequestCommand(\n        commandArgs.senderId,\n        commandArgs.userId,\n      ),\n    );\n  }\n\n  async rejectFriendshipRequest(commandArgs: FriendshipDto) {\n    return this.commandBus.execute(\n      new CancelFriendshipRequestCommand(\n        commandArgs.userId,\n        commandArgs.senderId,\n      ),\n    );\n  }\n\n  async removeFriendship(commandArgs: FriendshipDto) {\n    return this.commandBus.execute(\n      new RemoveFriendshipCommand(commandArgs.senderId, commandArgs.userId),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetReceivedFriendshipHandler.html":{"url":"classes/GetReceivedFriendshipHandler.html","title":"class - GetReceivedFriendshipHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetReceivedFriendshipHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/handler/get-received-friendship.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(friendshipRequestRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/handler/get-received-friendship.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        friendshipRequestRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetReceivedFriendshipRequestQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/handler/get-received-friendship.handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetReceivedFriendshipRequestQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetReceivedFriendshipRequestQuery } from '../query/get-received-friendship-request.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FriendshipRequest } from '../../domain/entities/friendship-request.entity';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetReceivedFriendshipRequestQuery)\nexport class GetReceivedFriendshipHandler\n  implements IQueryHandler\n{\n  constructor(\n    @InjectRepository(FriendshipRequest)\n    private friendshipRequestRepository: Repository,\n  ) {}\n\n  async execute(query: GetReceivedFriendshipRequestQuery) {\n    return this.friendshipRequestRepository\n      .createQueryBuilder()\n      .leftJoin('FriendshipRequest.user', 'User')\n      .leftJoinAndSelect('FriendshipRequest.sender', 'Sender')\n      .where('User.id=:id', { id: query.userId })\n      .getMany();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetReceivedFriendshipRequestQuery.html":{"url":"classes/GetReceivedFriendshipRequestQuery.html","title":"class - GetReceivedFriendshipRequestQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetReceivedFriendshipRequestQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/query/get-received-friendship-request.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/query/get-received-friendship-request.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/query/get-received-friendship-request.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetReceivedFriendshipRequestQuery {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSentFriendshipRequestHandler.html":{"url":"classes/GetSentFriendshipRequestHandler.html","title":"class - GetSentFriendshipRequestHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSentFriendshipRequestHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/handler/get-sent-friendship-request.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(friendshipRequestRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/handler/get-sent-friendship-request.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        friendshipRequestRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetSentFriendshipRequestQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/handler/get-sent-friendship-request.handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetSentFriendshipRequestQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetSentFriendshipRequestQuery } from '../query/get-sent-friendship-request.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FriendshipRequest } from '../../domain/entities/friendship-request.entity';\nimport { Repository } from 'typeorm';\n\n@QueryHandler(GetSentFriendshipRequestQuery)\nexport class GetSentFriendshipRequestHandler\n  implements IQueryHandler\n{\n  constructor(\n    @InjectRepository(FriendshipRequest)\n    private friendshipRequestRepository: Repository,\n  ) {}\n\n  async execute(query: GetSentFriendshipRequestQuery) {\n    return this.friendshipRequestRepository\n      .createQueryBuilder()\n      .leftJoin('FriendshipRequest.sender', 'Sender')\n      .leftJoinAndSelect('FriendshipRequest.user', 'User')\n      .where('Sender.id=:id', { id: query.userId })\n      .getMany();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSentFriendshipRequestQuery.html":{"url":"classes/GetSentFriendshipRequestQuery.html","title":"class - GetSentFriendshipRequestQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSentFriendshipRequestQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/query/get-sent-friendship-request.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/query/get-sent-friendship-request.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/query/get-sent-friendship-request.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetSentFriendshipRequestQuery {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetStatusFriendshipHandler.html":{"url":"classes/GetStatusFriendshipHandler.html","title":"class - GetStatusFriendshipHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetStatusFriendshipHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/handler/get-status-friendship.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(friendshipRequestRepository: Repository, friendshipRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/handler/get-status-friendship.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        friendshipRequestRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        friendshipRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetStatusFriendshipQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/handler/get-status-friendship.handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetStatusFriendshipQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetStatusFriendshipQuery } from '../query/get-status-friendship.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FriendshipRequest } from '../../domain/entities/friendship-request.entity';\nimport { Repository } from 'typeorm';\nimport { Friendship } from '../../domain/entities/friendship.entity';\nimport { FriendshipStatus } from '../../domain/enum/friendship-status.enum';\n\n@QueryHandler(GetStatusFriendshipQuery)\nexport class GetStatusFriendshipHandler\n  implements IQueryHandler\n{\n  constructor(\n    @InjectRepository(FriendshipRequest)\n    private friendshipRequestRepository: Repository,\n    @InjectRepository(Friendship)\n    private friendshipRepository: Repository,\n  ) {}\n\n  async execute(query: GetStatusFriendshipQuery): Promise {\n    if (\n      (await this.friendshipRepository\n        .createQueryBuilder()\n        .leftJoinAndSelect('Friendship.friendOne', 'FriendOne')\n        .leftJoinAndSelect('Friendship.friendTwo', 'FriendTwo')\n        .where('(FriendOne.id=:currentUser AND FriendTwo.id=:userId)', {\n          currentUser: query.currentUser,\n          userId: query.user,\n        })\n        .orWhere('(FriendOne.id=:userId AND FriendTwo.id=:currentUser)', {\n          userId: query.user,\n          currentUser: query.currentUser,\n        })\n        .getOne()) !== undefined\n    ) {\n      return FriendshipStatus.BEFRIENDED;\n    } else if (\n      (await this.friendshipRequestRepository\n        .createQueryBuilder()\n        .leftJoin('FriendshipRequest.sender', 'Sender')\n        .leftJoin('FriendshipRequest.user', 'User')\n        .where('Sender.id=:currentUser AND User.id=:userId', {\n          currentUser: query.currentUser,\n          userId: query.user,\n        })\n        .getOne()) !== undefined\n    ) {\n      return FriendshipStatus.PENDING;\n    } else if (\n      (await this.friendshipRequestRepository\n        .createQueryBuilder()\n        .leftJoin('FriendshipRequest.sender', 'Sender')\n        .leftJoin('FriendshipRequest.user', 'User')\n        .where('Sender.id=:userId and User.id=:currentUser', {\n          currentUser: query.currentUser,\n          userId: query.user,\n        })\n        .getOne()) !== undefined\n    ) {\n      return FriendshipStatus.RECEIVED;\n    }\n    return FriendshipStatus.NONE;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetStatusFriendshipQuery.html":{"url":"classes/GetStatusFriendshipQuery.html","title":"class - GetStatusFriendshipQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetStatusFriendshipQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/query/get-status-friendship.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                currentUser\n                            \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(currentUser: string, user: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/query/get-status-friendship.query.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        currentUser\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/query/get-status-friendship.query.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/query/get-status-friendship.query.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../user/domain/entities/user.entity';\n\nexport class GetStatusFriendshipQuery {\n  constructor(\n    public readonly currentUser: string,\n    public readonly user: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserHandler.html":{"url":"classes/GetUserHandler.html","title":"class - GetUserHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/get-user.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/get-user.handler.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/get-user.handler.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserQuery } from '../query/get-user.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../domain/entities/user.entity';\nimport { UserResponse } from '../../domain/response/user.response';\nimport { UserListResponse } from '../../domain/response/user-list.response';\n\n@QueryHandler(GetUserQuery)\nexport class GetUserHandler implements IQueryHandler {\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(query: GetUserQuery) {\n    if (query.userId) {\n      const user: UserResponse = {\n        ...(await this.userRepository.findOneOrFail(query.userId)),\n      };\n      return user;\n    }\n    const userListResponse: UserListResponse = new UserListResponse();\n    await this.userRepository.find().then((userList) => {\n      userList.forEach((user) => {\n        userListResponse.userList.push(\n          new UserResponse(user.id, user.username, user.email, user.userType),\n        );\n      });\n    });\n    return userListResponse.userList;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesHandler.html":{"url":"classes/GetUserIfRefreshTokenMatchesHandler.html","title":"class - GetUserIfRefreshTokenMatchesHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/get-user-if-refresh-token-matches.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQueryHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/get-user-if-refresh-token-matches.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(query: GetUserIfRefreshTokenMatchesQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/get-user-if-refresh-token-matches.handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                GetUserIfRefreshTokenMatchesQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventBus, IQueryHandler, QueryHandler } from '@nestjs/cqrs';\nimport { GetUserIfRefreshTokenMatchesQuery } from '../query/get-user-if-refresh-token-matches.query';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport * as bcrypt from 'bcrypt';\nimport { ErrorsEvent } from '../../../../util/error/errorsEvent';\n\n@QueryHandler(GetUserIfRefreshTokenMatchesQuery)\nexport class GetUserIfRefreshTokenMatchesHandler\n  implements IQueryHandler\n{\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(query: GetUserIfRefreshTokenMatchesQuery): Promise {\n    try {\n      const user = await this.userRepository.findOne(query.userId);\n\n      const isRefreshTokenMatching = await bcrypt.compare(\n        query.refreshToken,\n        user.currentHashedRefreshToken,\n      );\n\n      if (isRefreshTokenMatching) {\n        return user;\n      }\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorsEvent('GetUserIfRefreshTokenMatchesHandler', error),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserIfRefreshTokenMatchesQuery.html":{"url":"classes/GetUserIfRefreshTokenMatchesQuery.html","title":"class - GetUserIfRefreshTokenMatchesQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserIfRefreshTokenMatchesQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserIfRefreshTokenMatchesQuery {\n  constructor(\n    public readonly refreshToken: string,\n    public readonly userId: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserQuery.html":{"url":"classes/GetUserQuery.html","title":"class - GetUserQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/query/get-user.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId?: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/query/get-user.query.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GetUserQuery {\n  constructor(public readonly userId?: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthenticationGuard.html":{"url":"injectables/JwtAuthenticationGuard.html","title":"injectable - JwtAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtAuthenticationGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshGuard.html":{"url":"injectables/JwtRefreshGuard.html","title":"injectable - JwtRefreshGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/jwt-refresh-token.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport default class JwtRefreshGuard extends AuthGuard('jwt-refresh-token') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshTokenStrategy.html":{"url":"injectables/JwtRefreshTokenStrategy.html","title":"injectable - JwtRefreshTokenStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshTokenStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt-refresh-token.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt-refresh-token.strategy.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-jwt';\nimport { ExtractJwt } from 'passport-jwt';\nimport { config } from 'dotenv';\nimport { UserService } from '../../user/user.service';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\n\nconfig();\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh-token',\n) {\n  constructor(private readonly userService: UserService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request) => {\n          return request?.cookies?.Refresh;\n        },\n      ]),\n      secretOrKey: process.env.JWT_REFRESH_TOKEN_SECRET,\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(request: Request, payload: TokenPayload) {\n    const refreshToken = request.cookies?.Refresh;\n    return this.userService.getUserIfRefreshTokenMatches(\n      refreshToken,\n      payload.userId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/jwt.strategy.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt } from 'passport-jwt';\nimport { Strategy } from 'passport-jwt';\nimport { TokenPayload } from '../interface/token-payload.interface';\nimport { Request } from 'express';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(User)\n    private readonly userRepository: Repository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request) => {\n          return request?.cookies?.Authentication;\n        },\n      ]),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: TokenPayload) {\n    return await this.userRepository.findOneOrFail(payload.userId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthenticationGuard.html":{"url":"injectables/LocalAuthenticationGuard.html","title":"injectable - LocalAuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/guards/auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthenticationGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/strategy/passport-local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/strategy/passport-local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/strategy/passport-local.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\nimport { User } from '../../user/domain/entities/user.entity';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authenticationService: AuthService) {\n    super({\n      usernameField: 'username',\n    });\n  }\n  async validate(username: string, password: string): Promise {\n    return this.authenticationService.login(username, password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterCommand.html":{"url":"classes/RegisterCommand.html","title":"class - RegisterCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/command/register.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                password\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(username: string, email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/command/register.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/command/register.command.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterCommand {\n  constructor(\n    public readonly username: string,\n    public readonly email: string,\n    public readonly password: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterHandler.html":{"url":"classes/RegisterHandler.html","title":"class - RegisterHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/cqrs/handler/register.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/auth/cqrs/handler/register.handler.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('RegisterHandler')\n                    \n                \n                    \n                        \n                                Defined in src/api/auth/cqrs/handler/register.handler.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RegisterCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/auth/cqrs/handler/register.handler.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RegisterCommand } from '../command/register.command';\nimport { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../../user/domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport {\n  HttpException,\n  HttpStatus,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from \"@nestjs/core/errors/exceptions/invalid-class.exception\";\n\n@CommandHandler(RegisterCommand)\nexport class RegisterHandler implements ICommandHandler {\n  logger = new Logger('RegisterHandler');\n\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(command: RegisterCommand): Promise {\n    try {\n      const newUser = new User();\n      newUser.email = command.email;\n      newUser.password = command.password;\n      newUser.username = command.username;\n      const err = await validate(newUser);\n      if (err.length > 0) {\n        this.logger.error('Invalid parameters');\n        throw new InvalidClassException('Parameter not validate');\n      }\n      await this.userRepository.save(newUser);\n      this.logger.verbose('New user have registered ' + newUser.username);\n      delete newUser.password;\n      return newUser;\n    } catch (error) {\n      this.logger.error('Failed to register account');\n      throw new InternalServerErrorException('Internal Server Error!');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveFriendshipCommand.html":{"url":"classes/RemoveFriendshipCommand.html","title":"class - RemoveFriendshipCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveFriendshipCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/command/remove-friendship.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                friendOne\n                            \n                            \n                                    Public\n                                    Readonly\n                                friendTwo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(friendOne: string, friendTwo: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/command/remove-friendship.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        friendOne\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        friendTwo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        friendOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/command/remove-friendship.command.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        friendTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/command/remove-friendship.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveFriendshipCommand {\n  constructor(\n    public readonly friendOne: string,\n    public readonly friendTwo: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveFriendshipEvent.html":{"url":"classes/RemoveFriendshipEvent.html","title":"class - RemoveFriendshipEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveFriendshipEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/event/remove-friendship.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                senderId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(senderId: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/event/remove-friendship.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        senderId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        senderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event/remove-friendship.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event/remove-friendship.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../user/domain/entities/user.entity';\n\nexport class RemoveFriendshipEvent {\n  constructor(\n    public readonly senderId: string,\n    public readonly userId: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveFriendshipEventHandler.html":{"url":"classes/RemoveFriendshipEventHandler.html","title":"class - RemoveFriendshipEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveFriendshipEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/event-handler/remove-friendship.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('RemoveFriendship')\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event-handler/remove-friendship.event-handler.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: RemoveFriendshipEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/event-handler/remove-friendship.event-handler.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                RemoveFriendshipEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { RemoveFriendshipEvent } from '../event/remove-friendship.event';\nimport { Logger } from '@nestjs/common';\nimport { logger } from '../../../../util/config/winston-logger.config';\n\n@EventsHandler(RemoveFriendshipEvent)\nexport class RemoveFriendshipEventHandler\n  implements IEventHandler\n{\n  logger_console = new Logger('RemoveFriendship');\n\n  handle(event: RemoveFriendshipEvent): any {\n    logger.info(\n      'UserId ' +\n        event.senderId +\n        ' remove friendship request with UserId ' +\n        event.userId,\n    );\n    this.logger_console.log(\n      'UserId ' +\n        event.senderId +\n        ' remove friendship request with UserId ' +\n        event.userId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveFriendshipHandler.html":{"url":"classes/RemoveFriendshipHandler.html","title":"class - RemoveFriendshipHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveFriendshipHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/handler/remove-friendship.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(friendshipRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/handler/remove-friendship.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        friendshipRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RemoveFriendshipCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/handler/remove-friendship.handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RemoveFriendshipCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RemoveFriendshipCommand } from '../command/remove-friendship.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Friendship } from '../../domain/entities/friendship.entity';\nimport { Repository } from 'typeorm';\nimport { RemoveFriendshipEvent } from '../event/remove-friendship.event';\nimport { ErrorsEvent } from '../../../../util/error/errorsEvent';\n\n@CommandHandler(RemoveFriendshipCommand)\nexport class RemoveFriendshipHandler\n  implements ICommandHandler\n{\n  constructor(\n    @InjectRepository(Friendship)\n    private friendshipRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(command: RemoveFriendshipCommand): Promise {\n    try {\n      const friendship = await this.friendshipRepository\n        .createQueryBuilder()\n        .leftJoinAndSelect('Friendship.friendOne', 'FriendOne')\n        .leftJoinAndSelect('Friendship.friendTwo', 'FriendTwo')\n        .where('FriendOne.id=:friendOneId and FriendTwo.id=:friendTwoId ', {\n          friendOneId: command.friendOne,\n          friendTwoId: command.friendTwo,\n        })\n        .orWhere('FriendOne.id=:friendTwoId or FriendTwo.id=:friendOneId', {\n          friendTwoId: command.friendTwo,\n          friendOneId: command.friendOne,\n        })\n        .getOne();\n      if (friendship) {\n        await this.friendshipRepository.remove(friendship);\n        this.eventBus.publish(\n          new RemoveFriendshipEvent(command.friendOne, command.friendTwo),\n        );\n      }\n    } catch (error) {\n      this.eventBus.publish(new ErrorsEvent('RemoveFriendshipHandler', error));\n      //TODO: Envoyer une bonne erreur d'user\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenCommand.html":{"url":"classes/RemoveRefreshTokenCommand.html","title":"class - RemoveRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/remove-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/remove-refresh-token.command.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RemoveRefreshTokenCommand {\n  constructor(public readonly userId: string) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveRefreshTokenHandler.html":{"url":"classes/RemoveRefreshTokenHandler.html","title":"class - RemoveRefreshTokenHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveRefreshTokenHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/remove-refresh-token.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/remove-refresh-token.handler.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: RemoveRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/remove-refresh-token.handler.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RemoveRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { RemoveRefreshTokenCommand } from '../command/remove-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorsEvent } from '../../../../util/error/errorsEvent';\n\n@CommandHandler(RemoveRefreshTokenCommand)\nexport class RemoveRefreshTokenHandler\n  implements ICommandHandler\n{\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: RemoveRefreshTokenCommand): Promise {\n    try {\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken: null,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorsEvent('RemoveRefreshTokenHandler', error),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestUser.html":{"url":"interfaces/RequestUser.html","title":"interface - RequestUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequestUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/request-user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { User } from '../../user/domain/entities/user.entity';\n\nexport interface RequestUser extends Request {\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendFriendshipRequestCommand.html":{"url":"classes/SendFriendshipRequestCommand.html","title":"class - SendFriendshipRequestCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendFriendshipRequestCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/command/send-friendship-request.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                sender\n                            \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sender: User, user: User)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/command/send-friendship-request.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sender\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        sender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/command/send-friendship-request.command.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/command/send-friendship-request.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../user/domain/entities/user.entity';\n\nexport class SendFriendshipRequestCommand {\n  constructor(public readonly sender: User, public readonly user: User) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendFriendshipRequestEvent.html":{"url":"classes/SendFriendshipRequestEvent.html","title":"class - SendFriendshipRequestEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendFriendshipRequestEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/event/send-friendship-request.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                senderId\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(senderId: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/event/send-friendship-request.event.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        senderId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        senderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event/send-friendship-request.event.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event/send-friendship-request.event.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../../user/domain/entities/user.entity';\n\nexport class SendFriendshipRequestEvent {\n  constructor(\n    public readonly senderId: string,\n    public readonly userId: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendFriendshipRequestEventHandler.html":{"url":"classes/SendFriendshipRequestEventHandler.html","title":"class - SendFriendshipRequestEventHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendFriendshipRequestEventHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/event-handler/send-friendship-request.event-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IEventHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger_console\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger_console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('SendFriendshipRequest')\n                    \n                \n                    \n                        \n                                Defined in src/api/friendship/cqrs/event-handler/send-friendship-request.event-handler.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handle\n                        \n                    \n                \n            \n            \n                \nhandle(event: AcceptFriendshipRequestEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/event-handler/send-friendship-request.event-handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                AcceptFriendshipRequestEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventsHandler, IEventHandler } from '@nestjs/cqrs';\nimport { SendFriendshipRequestEvent } from '../event/send-friendship-request.event';\nimport { Logger } from '@nestjs/common';\nimport { AcceptFriendshipRequestEvent } from '../event/accept-friendship-request.event';\nimport { logger } from '../../../../util/config/winston-logger.config';\n\n@EventsHandler(SendFriendshipRequestEvent)\nexport class SendFriendshipRequestEventHandler\n  implements IEventHandler\n{\n  logger_console = new Logger('SendFriendshipRequest');\n\n  handle(event: AcceptFriendshipRequestEvent): any {\n    logger.info(\n      'UserId ' +\n        event.senderId +\n        ' sent friendship request to UserId ' +\n        event.userId,\n    );\n    this.logger_console.log(\n      'UserId ' +\n        event.senderId +\n        ' sent friendship request to UserId ' +\n        event.userId,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendFriendshipRequestHandler.html":{"url":"classes/SendFriendshipRequestHandler.html","title":"class - SendFriendshipRequestHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendFriendshipRequestHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/friendship/cqrs/handler/send-friendship-request.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(friendRequestRepository: Repository, userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/friendship/cqrs/handler/send-friendship-request.handler.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        friendRequestRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SendFriendshipRequestCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/friendship/cqrs/handler/send-friendship-request.handler.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SendFriendshipRequestCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CommandHandler,\n  EventBus,\n  ICommandHandler,\n  InvalidEventsHandlerException,\n} from '@nestjs/cqrs';\nimport { SendFriendshipRequestCommand } from '../command/send-friendship-request.command';\nimport { Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { FriendshipRequest } from '../../domain/entities/friendship-request.entity';\nimport { Repository } from 'typeorm';\nimport { User } from '../../../user/domain/entities/user.entity';\nimport { ErrorsEvent } from '../../../../util/error/errorsEvent';\nimport { SendFriendshipRequestEvent } from '../event/send-friendship-request.event';\n\n@CommandHandler(SendFriendshipRequestCommand)\nexport class SendFriendshipRequestHandler\n  implements ICommandHandler\n{\n  constructor(\n    @InjectRepository(FriendshipRequest)\n    private friendRequestRepository: Repository,\n    @InjectRepository(User)\n    private userRepository: Repository,\n    private readonly eventBus: EventBus,\n  ) {}\n\n  async execute(\n    command: SendFriendshipRequestCommand,\n  ): Promise {\n    try {\n      const friendshipRequest = this.friendRequestRepository.create({\n        sender: command.sender,\n        user: command.user,\n      });\n\n      this.eventBus.publish(\n        new SendFriendshipRequestEvent(command.sender.id, command.user.id),\n      );\n\n      return this.friendRequestRepository.save(friendshipRequest);\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorsEvent('SendFriendshipRequestHandler', error),\n      );\n      //TODO: Envoyer une bonne erreur d'user\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenCommand.html":{"url":"classes/SetCurrentRefreshTokenCommand.html","title":"class - SetCurrentRefreshTokenCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/set-current-refresh-token.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                refreshToken\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refreshToken: string, userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/set-current-refresh-token.command.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetCurrentRefreshTokenCommand {\n  constructor(\n    public readonly refreshToken: string,\n    public readonly userId: string,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetCurrentRefreshTokenHandler.html":{"url":"classes/SetCurrentRefreshTokenHandler.html","title":"class - SetCurrentRefreshTokenHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetCurrentRefreshTokenHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/set-current-refresh-token.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, eventBus: EventBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/set-current-refresh-token.handler.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventBus\n                                                  \n                                                        \n                                                                    EventBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: SetCurrentRefreshTokenCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/set-current-refresh-token.handler.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                SetCurrentRefreshTokenCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, EventBus, ICommandHandler } from '@nestjs/cqrs';\nimport { SetCurrentRefreshTokenCommand } from '../command/set-current-refresh-token.command';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { User } from '../../domain/entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { ErrorsEvent } from '../../../../util/error/errorsEvent';\nimport * as bcrypt from 'bcrypt';\n\n@CommandHandler(SetCurrentRefreshTokenCommand)\nexport class SetCurrentRefreshTokenHandler\n  implements ICommandHandler\n{\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n    private eventBus: EventBus,\n  ) {}\n\n  async execute(command: SetCurrentRefreshTokenCommand): Promise {\n    try {\n      const currentHashedRefreshToken = await bcrypt.hash(\n        command.refreshToken,\n        10,\n      );\n      await this.userRepository.update(command.userId, {\n        currentHashedRefreshToken,\n      });\n    } catch (error) {\n      this.eventBus.publish(\n        new ErrorsEvent('SetCurrentRefreshTokenHandler', error),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-in.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-in.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignInDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/dto/sign-up.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@MinLength(5)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/auth/dto/sign-up.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, MaxLength, MinLength } from 'class-validator';\n\nexport class SignUpDto {\n  @IsNotEmpty()\n  username: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  @MinLength(5)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/auth/interface/token-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserCommand.html":{"url":"classes/UpdateUserCommand.html","title":"class - UpdateUserCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/command/update-user.command.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                            \n                                    Public\n                                    Readonly\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string, user: UpdateUserDto)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UpdateUserDto\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateUserDto\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/command/update-user.command.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateUserDto } from '../../domain/dto/update-user.dto';\n\nexport class UpdateUserCommand {\n  constructor(\n    public readonly userId: string,\n    public readonly user: UpdateUserDto,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 20)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/update-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDto } from './user.dto';\nimport { PartialType } from '@nestjs/mapped-types';\nimport { IsEmail, IsNotEmpty, Length } from 'class-validator';\n\nexport class UpdateUserDto extends PartialType(UserDto) {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @Length(5, 20)\n  @IsNotEmpty()\n  username: string;\n\n  password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserHandler.html":{"url":"classes/UpdateUserHandler.html","title":"class - UpdateUserHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/cqrs/handler/update-user.handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ICommandHandler\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/cqrs/handler/update-user.handler.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('UpdateUser')\n                    \n                \n                    \n                        \n                                Defined in src/api/user/cqrs/handler/update-user.handler.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(command: UpdateUserCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/cqrs/handler/update-user.handler.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateUserCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CommandHandler, ICommandHandler } from '@nestjs/cqrs';\nimport { UpdateUserCommand } from '../command/update-user.command';\nimport { Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository, UpdateResult } from \"typeorm\";\nimport { User } from '../../domain/entities/user.entity';\nimport { validate } from 'class-validator';\nimport { InvalidClassException } from '@nestjs/core/errors/exceptions/invalid-class.exception';\nimport { UserResponse } from '../../domain/response/user.response';\n\n@CommandHandler(UpdateUserCommand)\nexport class UpdateUserHandler implements ICommandHandler {\n  logger = new Logger('UpdateUser');\n\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n  ) {}\n\n  async execute(command: UpdateUserCommand): Promise {\n    try {\n      const err = await validate(UpdateUserCommand);\n      if (err.length > 0) {\n        this.logger.error('Invalid parameters');\n        throw new InvalidClassException('Parameter not validate');\n      }\n      await this.userRepository.update(command.userId, command.user);\n      const user: User = await this.userRepository.findOneOrFail(\n        command.userId,\n      );\n      return new UserResponse(\n        user.id,\n        user.username,\n        user.email,\n        user.userType,\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                currentHashedRefreshToken\n                            \n                            \n                                email\n                            \n                            \n                                friendRequests\n                            \n                            \n                                friendsOne\n                            \n                            \n                                friendsTwo\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                requestedFriends\n                            \n                            \n                                username\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        currentHashedRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@Column({unique: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friendRequests\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FriendshipRequest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, friendRequest => friendRequest.user, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friendsOne\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Friendship[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, friendship => friendship.friendOne, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        friendsTwo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Friendship[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, friendship => friendship.friendTwo, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: false, nullable: false, select: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestedFriends\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FriendshipRequest[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, friendRequest => friendRequest.sender, {cascade: true, onDelete: 'SET NULL'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(5, 20)@IsNotEmpty()@Column({unique: true, nullable: false, length: 20})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserType, default: undefined, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/entities/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  Entity,\n  BeforeInsert,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  DeleteDateColumn,\n} from 'typeorm';\nimport { hash } from 'bcrypt';\nimport { IsEmail, IsNotEmpty, Length } from 'class-validator';\nimport { UserType } from '../enum/user-type.enum';\nimport * as bcrypt from 'bcrypt';\nimport { FriendshipRequest } from '../../../friendship/domain/entities/friendship-request.entity';\nimport { Friendship } from '../../../friendship/domain/entities/friendship.entity';\nimport { Exclude } from \"class-transformer\";\n\n@Entity()\nexport class User extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @IsEmail()\n  @Column({ unique: true, nullable: false })\n  email: string;\n\n  @Column({ unique: false, nullable: false, select: false })\n  password: string;\n\n  @Length(5, 20)\n  @IsNotEmpty()\n  @Column({ unique: true, nullable: false, length: 20 })\n  username: string;\n\n  @Column({\n    type: 'enum',\n    enum: UserType,\n    default: UserType.USER,\n    nullable: false,\n  })\n  userType: UserType;\n\n  @Column({\n    nullable: true,\n  })\n  @Exclude()\n  public currentHashedRefreshToken?: string;\n\n  @OneToMany(() => Friendship, (friendship) => friendship.friendOne, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  friendsOne: Friendship[];\n  @OneToMany(() => Friendship, (friendship) => friendship.friendTwo, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  friendsTwo: Friendship[];\n\n  @OneToMany(() => FriendshipRequest, (friendRequest) => friendRequest.user, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  friendRequests: FriendshipRequest[];\n  @OneToMany(() => FriendshipRequest, (friendRequest) => friendRequest.sender, {\n    cascade: true,\n    onDelete: 'SET NULL',\n  })\n  requestedFriends: FriendshipRequest[];\n\n  @BeforeInsert()\n  async setPassword(password: string) {\n    this.password = await bcrypt.hash(password || this.password, 10);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(JwtAuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(JwtAuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/api/user/user.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ContextCreator } from '@nestjs/core/helpers/context-creator';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Logger,\n  Param,\n  Patch,\n  UseGuards,\n} from '@nestjs/common';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport JwtAuthenticationGuard from '../auth/guards/jwt-auth.guard';\nimport { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { GetUserQuery } from './cqrs/query/get-user.query';\nimport { UpdateUserCommand } from './cqrs/command/update-user.command';\nimport { DeleteUserCommand } from './cqrs/command/delete-user.command';\nimport { UserService } from './user.service';\n\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Get()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @UseGuards(JwtAuthenticationGuard)\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(JwtAuthenticationGuard)\n  remove(@Param('id') id: string) {\n    return this.userService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/dto/user.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserDto {\n  email: string;\n  password: string;\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserListResponse.html":{"url":"classes/UserListResponse.html","title":"class - UserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user-list.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                userList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(users?: UserResponse[])\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        users\n                                                  \n                                                        \n                                                                        UserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user-list.response.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserResponse } from './user.response';\n\nexport class UserListResponse {\n  public userList: UserResponse[];\n  constructor(users?: UserResponse[]) {\n    if (users) {\n      this.userList = users;\n    } else {\n      this.userList = [];\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/api/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserController } from './user.controller';\nimport { GetUserHandler } from './cqrs/handler/get-user.handler';\nimport { DeleteUserHandler } from './cqrs/handler/delete-user.handler';\nimport { UpdateUserHandler } from './cqrs/handler/update-user.handler';\nimport { User } from './domain/entities/user.entity';\nimport { CqrsModule } from '@nestjs/cqrs';\nimport { GetUserIfRefreshTokenMatchesHandler } from './cqrs/handler/get-user-if-refresh-token-matches.handler';\nimport { RemoveRefreshTokenHandler } from './cqrs/handler/remove-refresh-token.handler';\nimport { SetCurrentRefreshTokenHandler } from './cqrs/handler/set-current-refresh-token.handler';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User]), CqrsModule],\n  controllers: [UserController],\n  providers: [\n    UserService,\n    DeleteUserHandler,\n    GetUserHandler,\n    UpdateUserHandler,\n    GetUserIfRefreshTokenMatchesHandler,\n    RemoveRefreshTokenHandler,\n    SetCurrentRefreshTokenHandler,\n  ],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepositoryMock.html":{"url":"classes/UserRepositoryMock.html","title":"class - UserRepositoryMock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepositoryMock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/util/mocks/repository/user.repository.mock.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { EntityRepository, Repository } from 'typeorm';\nimport { User } from '../../../api/user/domain/entities/user.entity';\n\n@EntityRepository(User)\nexport class UserRepositoryMock extends Repository {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResponse.html":{"url":"classes/UserResponse.html","title":"class - UserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/domain/response/user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                email\n                            \n                            \n                                    Public\n                                    Readonly\n                                id\n                            \n                            \n                                    Public\n                                    Readonly\n                                username\n                            \n                            \n                                    Public\n                                    Readonly\n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, username: string, email: string, userType: UserType)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/domain/response/user.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        username\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userType\n                                                  \n                                                        \n                                                                        UserType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        userType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserType\n\n                    \n                \n                    \n                        \n                                Defined in src/api/user/domain/response/user.response.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserType } from '../enum/user-type.enum';\n\nexport class UserResponse {\n  constructor(\n    public readonly id: string,\n    public readonly username: string,\n    public readonly email: string,\n    public readonly userType: UserType,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/api/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getUserIfRefreshTokenMatches\n                            \n                            \n                                remove\n                            \n                            \n                                removeRefreshToken\n                            \n                            \n                                    Public\n                                setCurrentRefreshToken\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(commandBus: CommandBus, queryBus: QueryBus)\n                    \n                \n                        \n                            \n                                Defined in src/api/user/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        commandBus\n                                                  \n                                                        \n                                                                    CommandBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        queryBus\n                                                  \n                                                        \n                                                                    QueryBus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserIfRefreshTokenMatches\n                        \n                    \n                \n            \n            \n                \ngetUserIfRefreshTokenMatches(refreshToken: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeRefreshToken\n                        \n                    \n                \n            \n            \n                \nremoveRefreshToken(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCurrentRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentRefreshToken(token: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/api/user/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CommandBus, QueryBus } from '@nestjs/cqrs';\nimport { GetUserQuery } from './cqrs/query/get-user.query';\nimport { UpdateUserDto } from './domain/dto/update-user.dto';\nimport { UpdateUserCommand } from './cqrs/command/update-user.command';\nimport { DeleteUserCommand } from './cqrs/command/delete-user.command';\nimport { Injectable } from '@nestjs/common';\nimport { GetUserIfRefreshTokenMatchesQuery } from './cqrs/query/get-user-if-refresh-token-matches.query';\nimport { RemoveRefreshTokenCommand } from './cqrs/command/remove-refresh-token.command';\nimport { SetCurrentRefreshTokenCommand } from './cqrs/command/set-current-refresh-token.command';\n\n@Injectable()\nexport class UserService {\n  constructor(private commandBus: CommandBus, private queryBus: QueryBus) {}\n\n  findAll() {\n    return this.queryBus.execute(new GetUserQuery());\n  }\n\n  findOne(id: string) {\n    return this.queryBus.execute(new GetUserQuery(id));\n  }\n\n  update(id: string, updateUserDto: UpdateUserDto) {\n    return this.commandBus.execute(new UpdateUserCommand(id, updateUserDto));\n  }\n\n  remove(id: string) {\n    return this.commandBus.execute(new DeleteUserCommand(id));\n  }\n\n  getUserIfRefreshTokenMatches(refreshToken: string, userId: string) {\n    return this.queryBus.execute(\n      new GetUserIfRefreshTokenMatchesQuery(refreshToken, userId),\n    );\n  }\n\n  removeRefreshToken(userId: string) {\n    return this.commandBus.execute(new RemoveRefreshTokenCommand(userId));\n  }\n\n  public setCurrentRefreshToken(token: string, userId: string) {\n    return this.commandBus.execute(\n      new SetCurrentRefreshTokenCommand(token, userId),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/api/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/auth/auth.service.ts\n            \n            class\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/command/register.command.ts\n            \n            class\n            RegisterCommand\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/auth/cqrs/handler/register.handler.ts\n            \n            class\n            RegisterHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/auth/dto/sign-in.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/dto/sign-up.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/auth/guards/auth.guard.ts\n            \n            injectable\n            LocalAuthenticationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthenticationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/guards/jwt-refresh-token.guard.ts\n            \n            injectable\n            JwtRefreshGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/auth/interface/request-user.interface.ts\n            \n            interface\n            RequestUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/auth/interface/token-payload.interface.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/jwt-refresh-token.strategy.ts\n            \n            injectable\n            JwtRefreshTokenStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/auth/strategy/passport-local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/command/accept-friendship-request.command.ts\n            \n            class\n            AcceptFriendshipRequestCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/command/cancel-friendship-request.command.ts\n            \n            class\n            CancelFriendshipRequestCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/command/remove-friendship.command.ts\n            \n            class\n            RemoveFriendshipCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/command/send-friendship-request.command.ts\n            \n            class\n            SendFriendshipRequestCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/event-handler/accept-friendship-request.event-handler.ts\n            \n            class\n            AcceptFriendshipRequestEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/event-handler/cancel-friendship-request-event.handler.ts\n            \n            class\n            CancelFriendshipRequestEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/event-handler/remove-friendship.event-handler.ts\n            \n            class\n            RemoveFriendshipEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/event-handler/send-friendship-request.event-handler.ts\n            \n            class\n            SendFriendshipRequestEventHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/event/accept-friendship-request.event.ts\n            \n            class\n            AcceptFriendshipRequestEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/event/cancel-friendship-request.event.ts\n            \n            class\n            CancelFriendshipRequestEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/event/remove-friendship.event.ts\n            \n            class\n            RemoveFriendshipEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/event/send-friendship-request.event.ts\n            \n            class\n            SendFriendshipRequestEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/handler/accept-friendship-request.handler.ts\n            \n            class\n            AcceptFriendshipRequestHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/handler/cancel-friendship-request.handler.ts\n            \n            class\n            CancelFriendshipRequestHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/handler/get-received-friendship.handler.ts\n            \n            class\n            GetReceivedFriendshipHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/handler/get-sent-friendship-request.handler.ts\n            \n            class\n            GetSentFriendshipRequestHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/handler/get-status-friendship.handler.ts\n            \n            class\n            GetStatusFriendshipHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/handler/remove-friendship.handler.ts\n            \n            class\n            RemoveFriendshipHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/handler/send-friendship-request.handler.ts\n            \n            class\n            SendFriendshipRequestHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/query/get-received-friendship-request.query.ts\n            \n            class\n            GetReceivedFriendshipRequestQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/query/get-sent-friendship-request.query.ts\n            \n            class\n            GetSentFriendshipRequestQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/cqrs/query/get-status-friendship.query.ts\n            \n            class\n            GetStatusFriendshipQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/friendship/domain/dto/friendship-request.dto.ts\n            \n            class\n            FriendshipRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/friendship/domain/dto/friendship.dto.ts\n            \n            class\n            FriendshipDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/friendship/domain/entities/friendship-request.entity.ts\n            \n            entity\n            FriendshipRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/friendship/domain/entities/friendship.entity.ts\n            \n            entity\n            Friendship\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/friendship/friendship.controller.ts\n            \n            controller\n            FriendshipController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/api/friendship/friendship.service.ts\n            \n            injectable\n            FriendshipService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/delete-user.command.ts\n            \n            class\n            DeleteUserCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/remove-refresh-token.command.ts\n            \n            class\n            RemoveRefreshTokenCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/set-current-refresh-token.command.ts\n            \n            class\n            SetCurrentRefreshTokenCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/command/update-user.command.ts\n            \n            class\n            UpdateUserCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/delete-user.handler.ts\n            \n            class\n            DeleteUserHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/get-user-if-refresh-token-matches.handler.ts\n            \n            class\n            GetUserIfRefreshTokenMatchesHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/get-user.handler.ts\n            \n            class\n            GetUserHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/remove-refresh-token.handler.ts\n            \n            class\n            RemoveRefreshTokenHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/set-current-refresh-token.handler.ts\n            \n            class\n            SetCurrentRefreshTokenHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/handler/update-user.handler.ts\n            \n            class\n            UpdateUserHandler\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user-if-refresh-token-matches.query.ts\n            \n            class\n            GetUserIfRefreshTokenMatchesQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/cqrs/query/get-user.query.ts\n            \n            class\n            GetUserQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/domain/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/api/user/domain/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user-list.response.ts\n            \n            class\n            UserListResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/api/user/domain/response/user.response.ts\n            \n            class\n            UserResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/api/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/api/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/config/winston-logger.config.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/error/error.event-handler.ts\n            \n            class\n            ErrorEventHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/util/error/errorsEvent.ts\n            \n            class\n            ErrorsEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/util/mocks/config.service.mock.ts\n            \n            variable\n            mockedConfigService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/friendship.dto.mock.ts\n            \n            variable\n            mockedFriendship\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/friendship.dto.mock.ts\n            \n            variable\n            mockedFriendshipList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/friendship.dto.mock.ts\n            \n            variable\n            mockedFriendshipRequestReceived\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/friendship.dto.mock.ts\n            \n            variable\n            mockedFriendshipRequestReceivedList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/friendship.dto.mock.ts\n            \n            variable\n            mockedFriendshipRequestSent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/friendship.dto.mock.ts\n            \n            variable\n            mockedFriendshipRequestSentList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/friendship.dto.mock.ts\n            \n            variable\n            mockerFriendshipRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/friendship.dto.mock.ts\n            \n            variable\n            mockerFriendshipRequestList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/user.dto.mock.ts\n            \n            variable\n            mockedUserList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/user.dto.mock.ts\n            \n            variable\n            mockedUserListResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/user.dto.mock.ts\n            \n            variable\n            mockUser1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/user.dto.mock.ts\n            \n            variable\n            mockUser2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/user.dto.mock.ts\n            \n            variable\n            mockUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/user.dto.mock.ts\n            \n            variable\n            user1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/dto/user.dto.mock.ts\n            \n            variable\n            user2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/jwt.service.mock.ts\n            \n            variable\n            mockedJwtService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/util/mocks/repository/user.repository.mock.ts\n            \n            class\n            UserRepositoryMock\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.2.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/cqrs : ^8.0.3\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            @types/cookie-parser : ^1.4.2\n        \n            @types/passport-jwt : ^3.0.6\n        \n            @types/passport-local : ^1.0.34\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            dotenv : ^16.0.0\n        \n            node-mocks-http : ^1.11.0\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.7.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.2.45\n        \n            winston : ^3.3.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FriendshipStatus   (src/.../friendship-status.enum.ts)\n                        \n                        \n                            PostgresErrorCode   (src/.../postgres-error-code.enum.ts)\n                        \n                        \n                            UserType   (src/.../user-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/api/friendship/domain/enum/friendship-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FriendshipStatus\n                    \n                \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                 RECEIVED\n                            \n                        \n                        \n                            \n                                 BEFRIENDED\n                            \n                        \n            \n        \n\n    src/api/auth/database/postgres-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostgresErrorCode\n                    \n                \n                        \n                            \n                                 UniqueViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/api/user/domain/enum/user-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserType\n                    \n                \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FriendshipModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FriendshipModule\n\n\n\ncluster_FriendshipModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nFriendshipModule\n\nFriendshipModule\n\nAppModule -->\n\nFriendshipModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtRefreshTokenStrategy\n\nJwtRefreshTokenStrategy\n\nAuthModule -->\n\nJwtRefreshTokenStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nAuthModule -->\n\nUserService->AuthModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nFriendshipService\n\nFriendshipService\n\nFriendshipModule -->\n\nFriendshipService->FriendshipModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    48 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../winston-logger.config.ts)\n                        \n                        \n                            mockedConfigService   (src/.../config.service.mock.ts)\n                        \n                        \n                            mockedFriendship   (src/.../friendship.dto.mock.ts)\n                        \n                        \n                            mockedFriendshipList   (src/.../friendship.dto.mock.ts)\n                        \n                        \n                            mockedFriendshipRequestReceived   (src/.../friendship.dto.mock.ts)\n                        \n                        \n                            mockedFriendshipRequestReceivedList   (src/.../friendship.dto.mock.ts)\n                        \n                        \n                            mockedFriendshipRequestSent   (src/.../friendship.dto.mock.ts)\n                        \n                        \n                            mockedFriendshipRequestSentList   (src/.../friendship.dto.mock.ts)\n                        \n                        \n                            mockedJwtService   (src/.../jwt.service.mock.ts)\n                        \n                        \n                            mockedUserList   (src/.../user.dto.mock.ts)\n                        \n                        \n                            mockedUserListResponse   (src/.../user.dto.mock.ts)\n                        \n                        \n                            mockerFriendshipRequest   (src/.../friendship.dto.mock.ts)\n                        \n                        \n                            mockerFriendshipRequestList   (src/.../friendship.dto.mock.ts)\n                        \n                        \n                            mockUser1   (src/.../user.dto.mock.ts)\n                        \n                        \n                            mockUser2   (src/.../user.dto.mock.ts)\n                        \n                        \n                            mockUserDto   (src/.../user.dto.mock.ts)\n                        \n                        \n                            user1   (src/.../user.dto.mock.ts)\n                        \n                        \n                            user2   (src/.../user.dto.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/util/config/winston-logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.createLogger({\n  format: winston.format.combine(\n    winston.format.timestamp({ format: 'DD/MM/YYYY-HH:mm:ss' }),\n    winston.format.printf(\n      (info) =>\n        `[${info.level.toUpperCase()}] - ${\n          info.timestamp\n        } - BSN : ${JSON.stringify(info.message)}`,\n    ),\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `api.log`,\n      dirname: './logs',\n      maxsize: 500000,\n      maxFiles: 5,\n    }),\n  ],\n})\n                    \n                \n\n\n        \n    \n\n    src/util/mocks/config.service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  get(key: string) {\n    switch (key) {\n      case 'JWT_ACCESS_TOKEN_EXPIRATION_TIME':\n        return '3600';\n    }\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/util/mocks/dto/friendship.dto.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedFriendship\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockedFriendshipList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockedFriendshipRequestReceived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockedFriendshipRequestReceivedList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockedFriendshipRequestSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockedFriendshipRequestSentList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockerFriendshipRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockerFriendshipRequestList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n\n    src/util/mocks/jwt.service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedJwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  sign: () => '',\n}\n                    \n                \n\n\n        \n    \n\n    src/util/mocks/dto/user.dto.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedUserList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    ...{\n      id: '1',\n      email: 'user@email.com',\n      username: 'Billy',\n      password: 'hash',\n      userType: UserType.USER,\n    },\n  },\n  {\n    ...{\n      id: '2',\n      email: 'user2@email.com',\n      username: 'Billy2',\n      password: 'hash',\n      userType: UserType.USER,\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockedUserListResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UserListResponse([user1, user2])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUser1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUser2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockUserDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserDto\n\n                    \n                \n                \n                    \n                        Default value : {\n  ...{\n    id: '1',\n    email: 'user@email.com',\n    username: 'Billy',\n    password: 'hash',\n    userType: UserType.USER,\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user1\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UserResponse('1', 'Billy', 'user@email.com', UserType.USER)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user2\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UserResponse('2', 'Billy2', 'user2@email.com', UserType.USER)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
